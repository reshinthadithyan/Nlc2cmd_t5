Search the current directory tree for files whose name is ".note", case insensitive
search for a file "file" in current folder and if the file is found quit !
Finds all files like "mylog*.log" newer than $2 and archives them with bzip2.
Prints only first ten characters of each string of file $file.
Recursively compresses all files within $2 folder.
delete all the ".bak" or swap files in kat folder
Compress in parallel regular files in the current directory tree that were last modified more than 7 days ago
Find files/directories named 'sar' under directory trees whose path starts with '/u' or '/b' or '/s' or '/o'
Find files/directories named 'photo.jpg' in the entire filesystem
Display a long listing of all regular files with 0777 permission under current directory tree
Recursively finds all '*.pdf' files and folders in a current folder and removes them without prompting.
Open all .c files in the current directory tree in the vim editor
Search the files from the current directory tree for "foo"
Delete all files/directories named 'sample' (case insensitive) under '/home/user/Series/' directory tree as super user
Change permissions of ".git/hooks/pre-commit" to 777
Check if "/path/to/dir" is a nfs mount point
Recursively removes all files and folders named '.svn' in a current folder.
delete all the mp3 files in the current folder.
Search the current directory tree for *.c and *.asm files, ignoring the case
Saves byte size of $myvar variable value in the 'var2' variable.
Save absolute path of "$path" whose parents exist to variable "abspath"
List all files named "filename" from the current directory tree, ignoring directory "FOLDER1"
find the top 25 files in the current directory and its subdirectories
Print the list of files in the current directory tree skipping Git files
Count the number of all directories under current directory non-recursively
Find all regular files in /usr/bin modified less than within the last 10 days
Lists long format information about file '/bin/echo'.
show the list of all the files in the current folder which have been modified within the 24 hours
check if there any files from the .git folder after excluding it using the prune command
Compute the mean average of the word count of *.txt files in the home directory
Change the owner and group of "testfile.txt" to "root"
Search the current directory tree for all files matching either pattern "*.rb" or pattern "*.py"
Recursively change the ownership of all directories in the current directory excluding "foo" to "Camsoft"
find all directories with the name root in the entire file system.
search for all the files having spaces in the current folder and save the output to the variable founddata
List the current directory recursively ignoring the "dir1" subdirectory's content
Look for any files that have not been modified in the last two days
Make 3 directories named "$HOME/Labs/lab4a/folder" followed by a 3 width zero padded number from 1 to 3
Search the 'tmp' directory for .mp3 files
Search the current directory tree for files that are less than 50kb
Print file information of command "studio"
Reverse the text in $input by taking each 4 characters as each units and save the result in variable 'output'
Find files in the /var/log folder which were modified between 60 minutes and 10 minutes ago
Display hardware platform, ie. x86_64 even if current kernel uses 32-bit addressing.
Find all files/directories with '.txt' extension under '/home' directory tree that are greater than 100KB in size
Print summary of new/missing files, and which files differ between dir1 and dir2.
Exit the shell on the first error encountered
Disable jobs running in their own process group in the shell
Find all *.rb (regular) files under current directory and print them on stdout putting the file name/path in-between two string literals 'Hello,' and '!'
change owner and group of the current directory and all files into it to user and group andrew
Change owner to "root" and group to "wheel" of "bin"
Display non-hidden files in the current directory with the given output format
Counts non-blank lines (lines with spaces are considered blank) in all *.py files in a current folder.
Removes all files but 5 newest ones from current folder.
Search the /home/bozo/projects directory tree for files modified within the last 24 hours
Find all .tmp files under and below the /tmp/ directory and remove them
display the type of all the regular/normal files in the entire file system
Split a file "file.tar.gz" into pieces with size 1024 MB
Find all files and directories in the current directory recursively that contain spaces in their names
Search for the case insensitive pattern 'PATTERN' in all files under current directory tree and display the matched files
Find '.git' directories in directory tree /path/to/files and print the pathnames of their parents
Rename all files in current directory with names starting with "fgh" so they start with "jkl" instead
Find all regular files newer than '/tmp/$$' (where $$ expands to current process id) under '/tmefndr/oravl01' directory tree
create and list filenames in the archive
Perform case insensitive search for *.gif files/directories under downloads directory
find all the normal/regular files in the folder "pathfolder" which are 2 levels deep, excluding all hidden files and display the count
Find "*prefs copy" files in the /mnt/zip directory tree and remove them
Search /usr/bin for regular files that have been modified within the last 10 days
Search "file1" for lines matching regex patterns listed in "file2" and list the unique results (sorted alphabetically)
Save the first three octets of the current host's IP address to variable "local"
Merge each non-blank line of standard input into a single comma separated line
Print first word of lines unique for 'file1' file
calculate the disk usage for all the files which have been modified in the last 24 hours in ~/tmp folder and display the file sizes
Creates temporary folder in a $temp_dir folder with name pattern defined by $template, and stores path to created folder in 'my_temp' variable.
Change permissions to 644 for all files in the current directory tree
display all the files in the current folder and traverse from the sub directories
List all functions defined in the shell
Find all files/directories under directory '.cache/chromium/Default/Cache/' which are bigger than 100MB and which are atleast 1 level deep and delete them
Find all files in the current directory tree with extension .html and replace all occurences of "php" with "html" inside them
create a soft link of the files in the folder /media/movies which have been modified in the last 30 days
Find all files/directories under /usr/tom which matches the extended regex '*.pl| *.pm'  in their names
Print the list of files in the current directory tree ignoring .svn, .git, and other hidden directories
Change onwer of "file" to "user_name"
find Texinfo source files in /usr/local/doc
Change permissions of directory "/home/sshtunnel/" to 555
Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files and count the number of lines in the output
search for the word "put" in all the files in the current folder which have the word "bills" in their name and display the matched line along with the filename.
Remove all files that are not newer than Jul 01 by modification time
display all the configuration files in the etc folder
Send 5 pings to broadcast address "10.10.0.255" and print the unique IPs who responded
search for the folder .dummy and remove it from the folder "Test folder"
Find all $1 files/directories under current directory and enter into the parent directory of the first one found
Find directories that are directly under /home/user/workspace directory (no-subdirectories) and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days
Report file system mounted at $path_in_question disk usage if canonical path $path_in_question is a mount point.
change the permissions of all the directories to 755 in the folder "/home/nobody/public_html"
Display all lines contiaining 'funcname' in system map file matching current kernel.
Append the contents of "file.txt" to the current in-memory history list
Print number of bytes in $file.
Find how many directories are in a path (counts current directory)
Find files changed in the last 1 day
Check if directory $some_dir is empty
Find all files in the current directory tree whose names are "file_name", except for those with pathnames matching pattern "./dirt to be Excluded/*"
sort based on size and display top ten small normal/regular files in the current folder
Print last day of April, 2009
Print the file paths and their sizes for all files under full_path_to_your_directory
Create a symbolic link named "${DESTINATION}${file}" to "${TARGET}${file}"
Print lines 2960 to 2966 from the output of "history"
find all file name in curent directory ,  -exec will file all file output  awk used here for print only file name .
Make a copy of the entire contents of dir1 in the Pictures directory located in the user's home directory.
Forward port 12345 bound on 'localhost' to port 12345 on 'otherHost' as user 'otherUser'
List environment variable values whose name matches '^\w*X\w*'
Print all matching commands in $PATH for command "python"
list all running jobs
Search the entire file hierarchy for files ending with '~' and print all matches except for those with '/media' in their pathnames.
Search for all files and directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.
search for the word "nutshell" or "Nutshell" in all the files in the folder book
Sort content of files 'file1' and 'file2' by second of dot-separated fields.
Print sed commands that would replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree
Archive all filepattern-*2009* files/directories under data/ into 2009.tar
return every file that does not have bar somewhere in its full pathname
Search $MYGROUP in /etc/group, take the 4th colon (':') separated field, replace comma (',') with newline and save the result to variable 'MYUSERS'
Count the number of regular files in the current directory that contain a vowel in their names
Find *.conf files/directories only upto 1 level down under /etc directory and show a few lines of output from the end
Find all SGID set files under current directory and show a few lines of output from the beginning
Recursively search for all files with names ending with "_test.rb", renaming them to end with "_spec.rb".
find  case-insensitive StringBuffer in all *.java files
Recursively removes all files like '._*' from current folder.
Save the first three octets of the host name's IP address to variable "subnet"
find all the directories in the home folder do not search in sub directories
Find all files under $dir directory
Execute "ls -l" on host "something" as user "root"
Remove the "123_" prefix from all filenames of .txt files in current directory.
Delete all HTML files under tree ~/mydir
Delete all __temp__* files/directories under current directory tree
Copies all files like 'lib*.so' to '~/usr/gtest/lib/' directory.
Print the icmp sequence number and ping time of each request to "127.0.0.1"
Create an empty file in each directory named "mydir" under current directory.
Find files with SGID (2000) and SUID(4000) permssions set in the file system
find all the files in the current folder that have a single letter in their name which have been modified in the last 3 days but not today
Find find symlinks pointing to /mnt/oldname* in the entire file system
Find all *.p[lm] files under /users/tom directory that matches the regex '->get(\|#hyphenate' in their contents
create directory new_dir
find all the files that have been modified exactly 1 day ago
Archive directory specified by variable "myFolder" to current directory.
display the filename and size of all the files in the file system which are bigger than 20MB
List all regular files matching the name pattern "$1*" (where $1 is a positional parameter) under '/usr', '/bin', '/sbin' and '/opt' directory tree
Delete all files/directories under current directory
display all files in the current folder
Generates name for temporary file with 6-letter suffix, and saves path to that new file in 'fn' variable.
Sort file "file" by line
Search the current directory tree for files without "test" in their path names
Search the current directory tree for regular files changed less than 1 day ago
Counts sum of non-empty lines from all .php files in a current folder.
Find and remove all .core files
find foo, Foo, FOo, FOO, etc., but only dirs
Change the file extension from '.txt' to '.bak' for all files/directories under current directory tree
Removes first and last parts of path $path and saves the result in 'finalName' variable.
Search through the /usr/local directory for files that end with the extension .html, and print the file locations.
Find all directories under current directory tree that match the case insensitive regex '^\./course\([0-9]\.\)*[0-9]$' in their paths
Find all symlinks under current directory
To match only hidden dot directories
find all foo.bar files in the entire file system
Print $d if $d is an empty directory
Change to directory 'foo' and print to terminal all received on standard input
Search the current directory recursively for files containing "needle text"
Search the *.code files from the current directory tree for string 'pattern'
Discard the first letter from every line in $line and calculate the md5 sum of the remaining
Find *.html files in the current directory tree that were last modified more than 7 days ago
Delete files "*doc copoy" in directory tree /mnt/zip
Delete the text matched by the regex '<script>if(window.*<\/script>' in all index.html files under current directory
Filters only directories from long file listing of the current directory
Find all directories under /home/username/public_html/modules  and set their permission to 750
Display differences between directories dir1 and dir2.
find all the files in the folder "/u/bill" which have been accessed in the last 2-6 minutes
Find files in the current directory tree whose content was changed within the last 60 minutes
Create an empty file called "emptyfile.c"
Extract all gzip-compressed files from tar archives beginning with 'myfiles_split.tgz_*'
perform a case insensitive search
Display differences between directories dir1 and dir2, treating absent files as empty.
Find files starting with the word "file" in the current directory tree, ignoring the case
Ping every address from 192.168.0.1 to 192.168.0.254 with a timeout of 1 second and filter out no responses
Display all lines in 'file' containing 'something', pausing for user input after each page.
Print sorted list of unique users logged in followed by a total count
Replace the "openssl" command executable with a symbolic link to "/usr/local/ssl/bin/openssl"
Print only first line of 'file' content, formatted as 29-symbol wide column
List the files/directories under /PATH_to_SEARCH, do a numeric sort and print the ones with different inode numbers
Find all regular files under current directory tree, prepend '#' at the beginning of the lines that contain 'abc' in those files and modify them in-place
search for all the files in current folder which start with "file2015-0" and move them to another folder
Find all regular files with the group read permission set in your home directory and below and output detailed information about each file.
Check if "\[$VLABEL\]" is mounted and save the result in variable "AMV"
Search for 'example' in all regular files from the current directory tree
find all files  that names are 'apt' and display detailed list
display all the files in the file system which belong to the group lighttpd
find all files in the current folder that have a single letter in their name and have not been modified today
Find all the files that were modified more than one day ago
Read a line from standard input and save each word in the bash array variable "first"
Take the section of variable "FILE" between the last slash and the following dot, if any, and store that section in variable "NAME".
display all directories in vim folder do not search in sub directories
Delete all filename* files under /dir directory
Search for "#define" in all files in the current directory, excluding backup files *~, *.orig, *.bak
Count the number of lines in every regular .rb file in the current directory tree
Find the most recently changed files in a subtree
Search the current directory tree for symbolic links named "link1"
Set variable 'path' to name of current directory (without the containing directories) converted to lowercase.
Find all files/directories under current directory tree whose names start with 'test' followed by two digits and end with '.txt' extension
Calculate md5 checksum of $KEY, take the 1st to 10th character, append them with the string '/tmp/command_cache.' and save the rsultant string to variable FILE
Compress every file in the current directory tree that matches "*cache.html" and keep the original file
display all the php files in the entire file system
Print /some/dir/ if it's empty
display all the files in the file system which are changed a minute ago
Find all files/directories under current directory tree that contain '1' or 'k' in their names
Search the current directory tree for files named "somename", case insensitive
Find all the files which are modified in last 1 hour
Print lines in "foo.txt" that are found only once
Gets string with MAC address of eth0 network interface.
Find all regular files in the current directory tree and search them for "example"
Find all foo.mp4 files in the current directory tree
Find all directories under /home/username/public_html/sites/default/files and set their permission to 770
SSH into server "server.com" as user "remote_user"
Find files/directories under current directory without descending into it
Count the total number of lines in all "*.gz" files in the current directory tree after decompression
Find all regular files under /home/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files
Unzip all files matching "test1/*/*.gz"
Enables shell option 'nocaseglob'.
print all readline bindings
Creates temporary file in a current folder with name formatted like 'templateXXXXXX', and saves path to it in 'tempfile' variable.
Find all files under current directory that are larger than 10KB in size
find all the files in the current folder which have been modified in the last one minute
Find all build* directories under current directory and reverse sort them
find all javascript files under the current folder
Copy all files in current directory that do not match */not-from-here/* in their paths to /dest
List the current directory recursively ignoring the "dir1" subdirectory
display a long listing of all the files in the current folder which have been modified in the last 24 hours
find all the shell scripts or perl files in the current directory
Find all files/directories that belong to the group 'audio' under '/dev' directory tree
Takes folder name of file $0, changes backslashes to forward ones and saves result in $basedir variable.
Search the current directory tree for files named "accepted_hits.bam"
Display differences between /destination/dir/1 and /destination/dir/2 excluding XML files.
Find all empty directories recursively starting from the current one and delete them
Look for SGID files and directories
Print full path of command "programname"
Search through the /usr directory for all files that begin with the letters Chapter, followed by anything else.
insert "e" when it's pressed
searching for all files with the extension mp3
find all the css files
Print the last 10 lines of the file '/var/log/syslog'
Read a line from standard input into the variable "yn" with the prompt "Do you wish to install this program?"
Checks compressed file integrity.
Search the current directory tree for PHP files changed less than 14 days ago
Search for all files in the current directory recursively whose names contain "linkin park", ignoring the case
List *.txt files residing in the current directory tree
Prints logged in users in sorted order.
Execute "ls -l" every 2 seconds
Print the list of files and directories of the current directory
Print the files in the current directory as a list of comma separated values
Force create a symbolic link without dereferencing named "$SYMLINK_PATH" to "$lastModified"
Number each line in "foobar" as right-justified zero padded to a width of 9
Remove the files from the home directory tree that were last accessed more than 100 days ago, with confirmation
Execute the file utility for each file found under /etc or below that contains "test" in its pathname
Finds IP address of 'en0' network interface.
Find all TXT files in the current directory and copy them to directory "$HOME/newdir"
Search the entire file hierarchy for files ending in '.old' and delete them.
Create a copy of index.html in all directories in current directory, pausing for confirmation before overwriting any existing files - names may not contain spaces - names may not contain spaces.
Returns exit code 1.
Print line, word and byte count for each file recursively and also show the total counts
Replace all ocurrences of '<title>' with 'sblmtitle\n<title>' in all the regular files with '.html' extension under current directory tree
Find all files/directories under '/usr' directory tree that have not been modified in the last 356 days counting days from today
delete what was typed in the command line and run "pwd" when button "\e[24~"
Print the IP addresses for the current host name
Find all *.xml.bz2 files under current directory
Print 'infile' content with line numbers
Find all directories under /home/username/public_html/sites/all/modules and set their permission to 750
search for the word error in all the xml files in the current folder
Find *.java files under current directory and compress them to myfile.tar  (unsafe)
find regular files which modification time is  7 days ago
Find all *.ogg (case insensitive) files/directories in entire file system
Changes group ownership of '/var/run/fcgiwrap.socket' to 'forge'.
Remove duplicate lines in "file_name" and print the output on stdout
Print mount point of the file system containing $filename.
Delete all files with '.old' extension under current directory tree
Find all *.cgi files/directories under current directory and change their permission to 755
Print only alphanumeric values from "/dev/urandom"
List all *.txt files/directories under current directory
Correct permissions for files in the web directory
Find all files, folders, symlinks, etc in the current directory recursively
Search the /path directory tree for files having permissions 777
Find all files with '.txt' extension under '/home/my_dir' dirctory tree and display the number of lines in these files
display all the files in the current folder which do not belong to any user
Sort "some_data" by the first and second ";" delimited entries and stabilizing the sort
Search for all files with either "sitesearch" or "demo" in their path names
List all files in /home/bozo/projects directory tree that were modified within the last day.
create a symbolic link named "www" to file "www1"
Make directories "./es/es_MX.utf8/LC_MESSAGES" as needed and do not error if it exists
Display all lines containing UTRACE in the current kernel's compile-time config file.
Find all *Company* files/directories under /root/of/where/files/are directory
Recursively finds all files older than 7 minutes under the current directory, saves list of found files, and compresses them, executing at most 10 compress process at a time.
Search for all files in the current directory recursively whose names begin with "Linkin Park"
Remove containing directories from variable 'path' ie. "/some/specific/directory" becomes "directory".
display all files in the folder bar only in the path /foo/bar/myfile (no output is generated)
Find CSS files omitting results containing "CVS"
Enables shell options 'extglob' and 'progcomp'
Find all files named "file.ext" in the current directory tree and print the path names of the directories they are in
Print "on" to standard output and to files matching "/sys/bus/usb/devices/usb*/power/level"
Print and recursively remove the alphabetically last directory in the current directory
Print the list of files in the home directory tree whose names begin with "Foto"
Run the find command with all shell positional arguments
Remove everything in the current directory except files matching regular expression "exclude these"
find all files in the file system with the permissions 777 and having the word "filename" in their name.
create directories bravo_dir and alpha_dir
Send SIGKILL signal to processes ID 18581, 18582, and 18583, killing them instantly.
Set timestamp of all PHP files in current directory to date specified.
ssh into default vagrant host without running "vagrant ssh" by passing the configuration parameters vagrant uses for ssh
List all regular files residing in the current directory tree and containing string "/bin/ksh"
Exclude directory from find . command
find all the xml files in the current folder which are present in the pattern text file
Find all directories named "0" in the current directory tree and create a tar archive of their RS* subdirectories
Remove trailing whitespaces in TXT files from the current directory tree
Output the standard input followed by the line number until line 786
Pick up a list of variable:value pairs from msgs.config and add them to the current shell or script's environment.
Enables shell option 'cdable_vars'.
Print the contents of "~/.ssh/config"
recursively look for files ending in either .py or .py.server
find directory which case-insensitive name is foo in current directory.
Find *.java files in the current directory and replace foo with bar in those files
Removes trailing and starting newlines from file
Kill all processes which were executed in background by the current shell.
Change permissions to u=rwx,g=rx,o= for all directories in the current directory tree
find all the ".JPG" files in current folder and display their count
Search for directories that contain the phrase "foo" but do not end in ".bar"
Search for all files with the same inode number 41525360
Creates temporary directory with name formatted like .daemonXXXXXXX in /tmp/ folder, and saves path to it in 'TMPDIR' variable.
find files which have all permissions to all the users in the current directory
Copy recursively "/source/backup" to "/destination" preserving symbolic links, modification times, and permissions
Read a line from standard input into variable "REPLY" with prompt "Press [Enter] key to release lock..."
Print the time of last boot
Removes empty folder 'edi' and 'edw'.
Remove all *.log files from the current directory tree
display all the .sh scripts in the folder /usr
Print 2 lines of "123456789"
Search the current directory tree for the files with extension "trc" and remove them if they are more than three days old
Create a symbolic link named "$HOME/bin/" to "$HOME/downloads/fnord"
search for all "tif" images in the entire file system
Find all files in the current directory tree whose names begin with '-'
create directory aaa
find all files in the current directory that are less than 1 byte size
Find all files/directories under /home/bozo/projects directory that were modified 1 day ago
Print the hexadecimal bytes and printable characters of "Hello world"
search for a cpp directory in current folder and display all its files
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%Tm %p\n'
show all the files in the folder /etc which have been modified in the last 24 hours
Find directories that are directly under $workspace_ts directory (no-subdirectories) and were modified more than 30 days ago
Removes all listed folders with content in sudo mode.
find all the files in the current directory that have the extension "bar" and donot search in the subdirecotries directories.
Search the dir_data directory and all of its sub-directories for regular files and remove the execute permission for all while adding the write permission for the user.
Saves list of logged in users in system together with 'USER' header in the 'b' variable.
find and delete all the files in the entire file system whose size is greater than 100MB.
Search for files/directories which are writable by either their owner or their group
Save a nginx link to "/path/to/file" with the current user and system FQDN host name in variable "path"
Rename file file.txt.123456 to file.txt
Change directory to the "lib" directory located two parent directories above the path to command "perl"
Force create a symbolc link named "/usr/local/bin/fpt" to "/usr/local/bin/findpdftext"
Recursively removes all files like '*.pyc' in a current folder.
Delete all files/directories with node number $inum under current directory tree
find all the files in the current folder with the name "test-a" and move them to the folder test-10
Set permissions for all direcotries under /var/www to 755
display all the regular/normal files in the current folder that are not accessed in the last 10 minutes
Unzip and extract "userAgent=[^=]*'" from "input.gz"
search in the current folder for all the directories with the name "test"
Finds strings with dot-separated sequence of numbers, and prints part of that sequence between the first and second dot.
find for a word in all the regular files in the current directory
Find all 777 permission files/directories under current directory tree
display all the files in the current folder
search for "specified string" in all the php files in the current folder
find all the files that have not been modified in the last 2 days
SSH with trusted X11 forwarding into "user@remoteToRemote_IP" from SSH connection "user@remote_IP"
Recursively change the owner group of "/var/www" of to "www-data"
Copies all files like "*FooBar*" under the current directory to the '~/foobar' directory.
Go into the first directory whose name contains 1670
Find all files/directories with spaces in their names under ~/Library directory
Find all empty directories in the current one and delete them
search for the file "process.txt" in the entire file system
Search for " 840" in history
Remove all files whose names start with spam-
Delete all files/directories named 'FILE-TO-FIND' under current directory tree
remove all core dump files from user's home directory
Disables shell option 'nullglob'.
Find all files/directories named 'document' in maximum 4 levels down the '/usr' directory
List all .jpg files in the home directory tree
Compose filepath as folder path where file $SRC is located, and lowercase filename of $SRC file, and save it in 'DST' variable
Extract 8 bytes as an unsigned integer that is "$o" offset into "$rpm"
find all files in the folder /etc which have been modified after /tmp/foo
Find all files/directories under current directory tree that start with 'test' in their names without descending into directories with the same name pattern
Format time string @$TIMESTAMP according to default time format
Find all *.xml files under current directory
Edit the cron job list for user 'wwwrun' using default editor specified by the EDITOR environment variable, or /usr/bin/editor if no default editor is specified.
display list of all the hidden files in the directory "/dir/to/search/"
display all the text files and pdf files in the current folder
View history using "vim"
Change permissions to 644 recursively for PHP files.
Find all *-* files under current directory
recursively change owner of the directory /usr/local/lib/node_modules/ to the current user
Find an inode and remove
Print a hex dump of "$DIREC" as characters
Search the current user's home directory and below for all .png files and copy those files in the directory imagesdir.
change the ownership of all regular/normal files in the current directory
List the directory paths of all file.ext files under present working directory
Read yesterday's date with format "%a %d/%m/%Y" into variable "dt" in a subshell
Find all *.jpg files/directories under current directory
Find recursively all regular files in the current directory tree not ending in .dll or .exe
Find all PHP files in the current directory recursively
Find all files starting from / whose names end with ".rpm" and change their permissions to 755
Find recursively the latest modified file in the current directory
find all the files in the folder /usr/bin which have been modified in the last 10 days
Remove all files under /home/user/Maildir/.SPAM/cur
Remove all *.txt files under the given directory modified more than 5 minutes ago
Remove all vmware-*.log files/directories under current directory
Find all directories under current directory and set read & execute permission for group and other for these files
Assign permissions 755 to directories in the current directory tree
Search for the string "ERROR" in all XML files in the current working directory tree
Find the top 5 big files
Find directory "/some/dir" if it is empty
find all the jpg files in the directory /ftp/dir which are bigger than 500KB
Find all files/directories under current directory and sort them
Print mount point of the file system containing $path.
split file abc.txt into pieces per 1500000000 bytes named as "abc.NNN"
Print file type of the executable file of command "foo"
Find all .txt files under the current directory and below
Recursively remove all "*.txt" files and answer "y" to any prompt
display all the files in the folder /mp3-collection which are bigger than 10MB or which start with the name "Metallica"
Move "caniwrite" without clobbering into "/usr/local/bin"
Find all empty files in the current directory and delete them
Find files patching "pattern"
Create tar archive "dirall.tar" and copy all files from directory tree /tmp/a1 to it
Find all *.c files under /home
Calculate md5 sum of file ${my_iso_file} and save it to variable 'md5'
Remove all empty regular files under the current directory and below
Merge lines whose first comma-separated field in file 'in1' also appears as a first comma-separated in file 'in2' - both files must be sorted, and the output format of each line will be: first field of in1, second field of in2, and third field of in2.
Remove all files that were older than 3 days
Print the names of all regular files in the current directory tree
Display the number of regular files under current directory tree
Search for the regex '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' in all files under /etc
Recursively finds all files in root folder and prints all strings with 'text-to-find-here' from that files, ignoring binary files.
Gives longest '*.php' files with line count first, and excludes directories with "libs", "tmp", "tests" and  "vendor" in their paths.
display all the files only in the path "./sr*sc"
print apparent size rather than disk usage
looks for all files larger than 10 megabytes (10485760 bytes) within /home
Print the names and sizes of regular files residing in the "dir" directory tree
Print calendar for February, March and April of year 2009 side-by-side
archive all the normal/regular files in the current directory which have been modified in the last 24 hours.
Find *.scm files recursively in the current directory
Get the sizes (and total size) of all files under dir1 directory
Rename all files in current directory to lowerase, overwriting any existing files.
Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory
Print lines 15967 to 16224 in file "dump.txt"
display all the regular/normal files in the current folder which are modified after a file
Make directory "temp"
Prints line count of each file within current directory.
Compress all *.img files using bzip2
Create a symbolic link in "/bar/tmp/" for each file in directory "/foo" that does not start with "runscript"
Search directory /home/ABCD recursively, starting from one level below, for regular files
find all the text files in current folder and force delete them
Replace all ' ' with '-' from standard input
Search all files in the current directory tree, except GIT files, for "string-to-search"
Run 'join' on file1 and file2, using a literal tab character as field separator.
Rename "/usr/bin/php" to "/usr/bin/~php"
Find all files in the current directory tree containing "foo" in their names
Decompresses each of "*bz2" files under the current folder, redirecting output to the standard out, and prints only fourth of comma-separated fields.
Backup all PHP files under the current directory tree
print lines from last match of ^Statistics until end of file
create a symbolic link named "/usr/lib/jvm/default-java" to file "/usr/lib/jvm/java-7-oracle"
display all the regular/normal files in the entire file system
Append *.java files from the current directory tree to tar archive `myfile.tar'
Removes files 'junk1', 'junk2', 'junk3'.
Change string "searc" to "replace" in all files in directory hierarchy
Search the current directory tree for files and directories whose names begin with "pro"
Sort "," delimited lines in "file" by the first field preserving only unique lines
Print the IP addresses for the current host name
Find recursively the latest modified file in the current directory
Calculate the md5 sum of the contents of "$FILES"
Print which files differ in "dir1" and "dir2" recursively
Recursively copy "old/" to "new/" as a dry run skipping files that have matching checksums and output the name only
Print a list of JPG files residing in the current directory tree
Save "$N" number of '.' characters in variable "myvar"
change group of the file /var/lib/php/session  to group lighttpd
search for the regular/normal file "foo.bar" and force delete it
display only the file names of all the files which end with ".deb"
change the group to "new_group" and permissions to 770 for all the files in the current folder
Exclude directory from find . command
Find all files in /home/user/ that were created or changed 10 minutes ago
Remove all files in the $backup_path directory recursively that were last modified more than 30 days ago
find all files in the current folder that are modified exactly 1 minute ago
Print the files in the current directory as a list of semicolon separated values
Recursively copy all files matching "*.sh" in "$from" to "root@$host:/home/tmp/" compressing data during transmission
list all the directories in the folder httpdocs
find all the directories with the name "some-dir" in the current folder and move them to another folder and do not search in subfolders
Find *.pl files/directories under /users/tom
Search for files/directories which are writable by somebody (their owner, or their group, or anybody else)
Delete all regular files that have not been modified in the last 31 days under '/path/to/junk/files' directory tree
display all the configuration files in "/etc" folder along with their last access and modified timestamps
search for files which are writable by either their owner or their group
Find all regular files under current directory (excluding hidden directories) and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files
Request changing the passphrase of key file "private.key"
find all files with pattern` '*.mp3' and send output into nameoffiletoprintto file
Removes all files from current folder but 5 newest ones.
Find all *.cgi files/directories under current directory and change their permission to 775
Rename the *.so files at level 2 of the current directory tree prepending their names with "lib"
Search for all files with either "sitesearch" or "demo" in their path names
Run "./configure" with a new environment variable CC set to the full path of the command 'cc'
Print the lines of file "strings" not specified in file "index"
Recursively copies 'src' to 'dest' preserving overwriting the existing files.
Report file system containing path to the current working directory disk usage human-readable.
Find all image.pdf files/directories under ./polkadots with null character as the delimiter
display all the directories in the current folder which are atleast one level deep
Perform a dry run to recursively copy "test/a" to "test/dest" excluding "test/a/b/c/d"
Print the last line of "$file1" to the console and append to "$file2"
List all files in the "test" directory tree except those with '/invalid_dir/' in the pathnames
Find all file which have more the 2 hard link
Set the system date to Sat May 11 06:00:00 IDT 2013
Execute `echo' for each file found
find all files that names are dir-name-here
Finds all files in $LOCATION, prints file names, overwrite files with random content $TIMES times, and finally remove them.
Locate and rename unprintable directories using inode numbers
Find regular files under / that contain "stringtofind" and clear out their contents
display the count of number html files in the current folder
Set the shell option 'errexit'  causing bash to exit immediately if one of the commands in a multi-command statement fails.
get all files in a current directory modified in the last 7 days
Find the files that have "644" permissions and modify them to have "664" permissions
Set the modification timestamp of file 'filename' to specified date/time.
display the change owner command for all the regular files in the current folder.
Find all directories named "D" in the current directory tree
Find all directories in the current one with "linkin park" in their names and copy them to /Users/tommye/Desktop/LP
List each subdirectory name composing the current working directory
Find all files on the system that are world writable
find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir
Find all files/drectories under '/u/bill' directory tree that have been accessed in the last 2 to 6 minutes
Remove all *.swp files under current directory
Find all files starting from the current directory which are exactly 100MB in size
create directory /cpuset
Read a line from standard input with prompt "Enter your choice: ", arrow keys enabled, and "yes" as the default input, and save the response to variable "choice"
Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir
Remove sequence like '\xEF\xBB\xBF' from first string of every '*.js' file in a current folder and subfolders, creating backup file with .bak extension for every changed file, and removing backup on success.
Find *.c and *.h files under the current directory tree skipping hidden directories and files
Find all *.ogg (case insensitive) files/directories under your home directory that are not greater than 20MB in size
Remove files under /mnt/zip matching "*prets copy" with confirmation
Change the permission to 755 for all directories under current directory
Lists all subdirectories in a current folder, removing trailing slash.
Find all files named `file1' on the system
Replace all occurrences of edx (case insensitive) with gurukul in all *.css (case insensitive) files under ./cms/djangoapps/contentstore/management/commands/tests directory
List all *.bak files in the current directory tree
Find all the files in the current directory with “linkin park” in their names
Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions
Find all 'test' directories in the current directory tree
Find all regular files residing in the current directory tree and search them for string "/bin/ksh"
Find all dir* files/directories under parent
Save the absolute path of "$path" to variable "full_path"
Read a single character from standard input into variable "REPLY" ignoring backslash escapes and using the prompt "${1:-Continue?} [y/n]: "
search for all the files in the folder /data/images which have been modified after /tmp/start and before /tmp/end
Find all files under current directory that are read less than 1 minute ago
Find all the files which are changed in last 1 hour
Find all files in the level 6 subdirecotries of /usr/src and below, ignoring CVS files
Set 644 permission to all regular files under /home/my/special/folder directory
Delete all files named "filename" in the current directory tree, except the one with path ./path/to/filename
find all *.java files/directories under current directory
change the permission of all the normal/regular files to 644 in the current folder
Get the grandparent directory of each found 'pattern' file in $SEARCH_PATH
Enables shell option 'progcomp'.
Set permissions of all directories under "/opt/lampp/htdocs" to 711
Save the network node hostname append with '-', the current date and '.txt' into variable 'filename'
Find files newer than main.css in ~/src
Prints last modified file in a current folder with modification time.
Find all files/directories matching the regex pattern ".*\\.rb$" under current directory
Recursively change the owner and group of "/home/el/svnworkspace" and "775" to "your_user_name"
Put the absolute directory path to the current script to MY_DIR variable
Move all Emacs backup files from the current directory tree to ~/backups/
Recursively copy /path/to/foo on host "your.server.example.com" to local directory "/home/user/Desktop", connecting as ssh username "user".
Print newline, word, and byte counts of each '*.java' file within current directory, and total newline, word, and byte counts
Print how many files are inside each directory under the current one
display all the ip addresses in all the files that are present in /etc folder
Add a line number to every line in "long-file"
Represent time string $MOD_DATE as seconds since epoch and save to variable 'MOD_DATE1'
Print a minimal set of differences between files in directories "teste1" and "teste2", treat absent files as empty, ignore differences in whitespace, treat all files as text, and print 3 lines of unified context
Find all file paths under current directory, sort them numerically and show last 10 lines of output with only their paths
display all scala files in the directory "src/main"
Find files with extension .conf in the /etc directory tree
Search the regular files from directory tree 'directory_name' for "word" and print the names of the matched files
Search for 'mystring' in all *.txt (case insensitive) files under current directory
Search for command "tail" in the maps of the process with PID 2671
Save full path of command "tr" to variable "TR"
Save the absolute path of the current script to variable "SELF"
Find all files in current directory excluding hidden files and put the output into full_backup_dir variable
Find all files/directories named 'com.apple.syncedpreferences.plist' (case insensitive) under ~/Library directory tree
Print the sizes of all files from the current directory tree
Open all files named 'filename' with 'nano' editor in the entire filesystem
Find all files/directories following symlinks under /path/to/dir/* paths and print the timestamp in YmdHMS format along with their paths
Find all files in the home directory with open permissions
Find all instances of first column with unique rest of line, and output a count for each first column that found in unique lines.
Find all files under /somefolder matching the extended case insensitive regex '\./(.*\.error.*|second.*log|.*FFPC\.log)$' in their paths
Exclude directory from find . command
find ".flac" files in current folder using regular expressions
find the file with the name "esxcfg-firewall" in the current folder
Modify and rewrite 'file' replacing the first instance of "foo" on each line with "bar"
Searches through the htdocs and cgi-bin directories for files that end with the extension .cgi. When these files are found, their permission is changed to mode 755 (rwxr-xr-x).
search for word linux in all the regular/normal files in the folder mail.
Save the full path of command "oracle" to variable "path"
execute command "who" when key "\eW" is pressed
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days
find all the header files in /usr/include which have been modified in the last 400 days
Find all TXT files in the current directory and copy them to directory "$HOME/newdir"
Find all files/directories under _CACHE_* directories
Find all the files on the system that have been changed within the last hour
Find files/directories under current directory excluding the path ./src/emacs
Find all files under ${searchpath} that match the regex '"${string1}".*"${string2}".*"${string3}"' (${string1} ... won't be expanded) in their contents
display all the files ending with ".foo" excluding those that are in the directory ".snapshot"
Remove trailing white spaces from all files under current directory ignoring directories wtih *.git* (case insensitive) in their paths and keep backups of the originals
Search for all files newer than file /tmp/t
Find all regular files under current directory tree without descending into './dir1' (except './dir1/subdir1*' pattern) and './dir2' directories
Print the home directory of "$username"
Find files/directories named 'foo' under current directory tree without descending into directories named 'foo'
Find all files under /path/to/input/ that match the case insensitive string literal 'spammer@spammy.com' in their contents
Find all regular files undee '/usr/bin' directoryt tree that are less than 50 bytes in size
Open all .java files in the current directory tree in the vim editor
Find all .mp3 files starting from the current directory and delete them
find all the swap files (files ending with ~) in the current folder and delete them
Find files on the system accessed during the last 24 hours but not within the last hour
Print onlt last slash-separated field from $PATH value
Show version information of the find utility
List content of 'myfile' in a subshell and returns output to parent shell
Find regular files modified within the last ten minutes under /etc
change permissions of all the script files in a directory
Remove files modified at least five days ago in directory trees /path/to/files*
Remove all files named `junk' and `dummy'
Find file `hosts'
Count the number of users logged in minus one
Find all *text files/directories under current directory
Copy all files below the current directory whose names contain "FooBar" to directory foo/bar/ in user's home directory.
Make directories and parent directories as needed of "$1" with "\r" removed
Gets IP addresses of all active network interfaces.
Calculate the md5 sum of every ".py" file in directory tree "/path"
Find all .txt files in the current directory tree and edit them with `vim'
Find all files/directories under current directory
Search files "file-containing-can't" in the current directory tree for the string "can't"
Delete all files named '-F' under current directory tree
Print a hex dump byte to byte of the output of "echo Aa"
Add variable 'v' with value '5' to a temporary environment, list this environment using 'less' to interactively view it.
Search file /etc/logs/Server.log for lines containing "Error"
Report file systems inode usage.
Search for all files not newer than file /tmp/t
Save the percentage of packets lost of the 5 packets sent to "$host" in variable "packet_loss"
Counts lines in each of *.php files in current folder with subfolders and prints total count as well.
Create a copy of the current working directory structure in the usr/project directory,
Remove empty directories
Find "*201512*" regular files in /home/myhome/data/ARCHIVE/ and move them to /home/myhome/ARCHIVE/TempFolder/
List all files/directories under current directory matching the posix-egrep type regex ".+\.(c|cpp|h)$" in their names excluding the paths */generated/* and */deploy/*
Find all files/directories with '.c' or '.h' extension under current directory tree and search for the regex provided by first positional argument and show the output by paging through one screenful at a time
Add prefix like number and "^M${LOGFILE}> " to every non-blank line received on standard input
Gets IP address of 'eth0' network interface.
Find all * * regular files under current directory
Find files/directories in entire file system that had their meta information changed more than 3 days ago
Find all directories by the name `httpdocs' on the system
Make directories a, b, c, ..., z under path2 as needed.
Create a compressed archive of "/home" and split the contents into files with at most 4000 MiB each and use prefix "/media/DRIVENAME/BACKUPNAME.tgz"
Rename "new" to "old" and backup to "old.old" if "old" exists
Recursively from current folder searches only files that names match ".*xxx" pattern, ignores binary files and prints file name before every string that contains "my Text to grep".
Find all files under ./lib/app and redirect their sorted list to myFile
Count the number of lines in all ".php" files in the current directory tree
Search all *.txt files under ~/documents for the word "DOGS"
find all the video files which are bigger than 10 MB which have not been modified in the last 60 days but have been changed in the last 100 days in /tmp and /var/tmp folder home folders
force delete all the core files in the home folder
Find all files/directories named 'foo.bar' under './dir1' and './dir2' directory trees
Search for the regex expaned by the variable $SEARCH in all regular files under $DIR directory tree
Find all *.txt files under /foo and print their total size
Add group write permission to all files and directories in the current directory including hidden files and excluding ".."
List all files under current directory matching the regex '.*\.\(c\|h\|cpp\)'
List all leaf directories of the current directory tree
Copy a large sparse file "sparse-1" to "sparse-1-copy"
Print "echo ping -c 2" on each string in file 'ips'
Replace "-" with "0" in columns 4 and 5 of file "test.in" and format as a table
display all the text files in the home folder
Display the total count of all the files/directories with '.old' extension under current directory tree
Find suspicious PHP files
find all files that have been used more than two days since their status was last changed
Change symbolic link "$f" into a file
Find files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days and print them with null character appended to their paths
Recursively removes all files like '4' under folder './a' and removes folders with such files if they become empty.
Find all files/directories with execute permission by group or others
Dump "file" as ASCII characters
split the file hugefile.txt into pieces per 100000 lines named as partNNN with digital prefixes
Print the full path of a 'file.txt' file in the current folder.
Search the current directory recursively for regular files last modified more than 2 days ago
Replace all occurrence of "toreplace" with "replaced" in all files under /home/www
List all IPV4 addresses found in all files under /etc directory
Print all the file/directory paths under current directory
Creates temporary folder in TMPDIR (if defined) or in '/tmp/', and stores path to created folder in 'dir' variable.
recursively change owner of the directory ~/.npm to the current user
Report total file systems disk usage estimated in terabytes
Find grub.conf files in entire file system
Find all files in maximum 1 level down the current directory that were modified less than 1 day ago from today
Rename all .html files to .txt
Find all hidden files starting from the directory given as variable $FOLDER
Remove all directories called "test" from the current directory tree
Delete all filename* files under /dir directory
Lists all directories in '/home/alice/Documents/'.
Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.utf8
Create a symbolic link in the current directory for each file under the directories matching "../[12][0-9][0-9]"
Type unique list of all directories contiaining each file named 'myfile' under the /home directory
search for the word foo in all the js files in the current folder
Search the /etc/apache-perl directory tree for files newer than /etc/apache-perl/httpd.conf
find regular files under the current directory, whose name ends in .mbox and rename each file, to the same name without .mbox at the end
Search the regular files from directory tree 'folder_name' for "your_text"
move all files in the current folder another folder and do not move the files in the sub folder
find all the files with the name test in the current folder ( case insensitive )
Print every 3 characters of standard input as a line
Find all files/directories under '/usr/local/games' directory tree that contain the string 'xpilot' in their names
Find all directories under current directory whose paths are 5 characters long
Save the absolute path of the current script to variable "SELF"
Force create a symbolc link named "softlink_name" to "source_file_or_directory_name" without dereferencing "softlink_name"
Find all symbolic links containing 'vim' in their names uder '/usr/bin' directory tree
find all files in the current folder which have only the write permission for the others
display the files along with the size of all the files in the current which are bigger than 100MB
Make directory "dirname" with permissions set to 777
find all the files in the current folder which have the name net or comm in them
Find files/directories under current directory that matches './projects/insanewebproject' in their paths
Search for all the directories named 'm?' under current directory tree, add the extension ".mbox" to all, create a 'Messages' directories inside them and move all files with .emlx extension to 'Messages' directory
Find all broken symlinks under current directory
Change all cron jobs running "anm.sh" to be run every 10 minutes instead of 5 minutes.
read all history lines not already read from the history file
Find files larger than 50k
create a gzip of all the files in the current folder excluding the already gzipped files.
Get domain name with 'google' from address $IP
Recursively copy directory "/path/to/data/myappdata" to "user@host:/remote/path/to/data/newdirname"
Print the current directory tree with the date of last modification for each file or directory
find all the files in the current directory which have been modified in the last 24 hours
Find all directories under current directory and set read-write-execute permission for owner and group and no permission for other for those directories
List all files/directories with spaces in their names under ~/Library directory
Remove all files with a txt extension under current directory
sort each file in the bills directory, leaving the output in that file name with .sorted appended
Search the current directory for files whose names start with my
display all the files in the file system which belong to the user "wnj" or which are modified after the file "ttt"
Find all files/directories with '.c' or '.h' extension under current directory tree and search for the regex expanded by the variable $i and show the output by paging through one screenful at a time
Find and print the names of all files found in the current directory and all of its sub-directories.
display a long listing of all the xls or csv files in the entire file system
Execute `find -type f | egrep -i "(jpg|bmp|png|gif)$"` every 300 seconds and display without title
View the man page of find
print disk usage of files or folders in current directory
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories
Split "system.log" into files of at most 10 MiB in size with a numeric suffix and prefix "system_split.log"
Copies ""$project_dir"/iTunesArtwork", to the 'Payload/iTunesArtwork', rewriting files if necessary.
Remove all files in and below the current directory whose names begin with "not"
Enables shell option 'expand_aliases'.
Delete all files/directories under current directory tree with '.$1' extension where $1 expands as the first positional parameter
Remove all empty regular files under the current directory and below
Find recursively the latest modified file in the current directory
show all the ".acc" files in the folder /home
display the amount of disk space used by all the log files in the folder /usr/local/apache/logs/
Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play
Print IP addresses of the host name
Find all .txt files under the current directory and below
display all the files in the current folder excluding those that are present in the path "./etc"
copy all the regular files in the current directory to the temporary diectory.
Find all files you have modified in the last two days
Find all files which belong to user lal and change their ownership to ravi
Find all files/directories under '/usr/share/data' directory tree that match the posix extended regex ".*/20140624.*" in their paths and save the list to '/home/user/txt-files/data-as-of-20140624.txt'
change the permissions of all the regular/normal files to 644 in the folder /home/nobody/public_html
Find all regular files recursively in the current directory
find all the files ending with ".foo" in the folder /usr
Find recursively all Emacs backup files in the current directory and remove them
Pushes directory path that saved in $line variable to the dirs stack, expanding symbol '~', if present, as home folder path.
Make a directory in the current working directory with a random 32 alphanumeric character name
search for the file "file1" in the entire file system
find all the files in the current directory and sub-directories whose status was changed after /etc/fstab was modified
Find all flies under current directory excluding *.png files and print the file paths (with match count) that match the case insensitive regex 'foo=' in their contents
reverse both words and lines in file
display all the regular/normal files in current directory
Find all *fstab* files under and below /etc
find all the files that have been modified in the last 7 days,
Go to directory named "~" (not home directory)
Remove trailing white spaces from all *.rb, *.html, *.js, *.coffee, *.css, *.scss, *.erb, *.yml, *.ru files under current directory
Find the top 5 small files
Find all SGID files in entire file system
Write the common third space separated fields in "file1.sorted" and "file2.sorted" to "common_values.field"
find the file with the name "file" in the entire file system
Lists all subdirectories in the current directory
Filter contents of 'file' through awk commands written in script.awk, display the result.
Search for files/directories named 'fileName.txt' under current directory tree without traversing into './ignored_directory'
Find files that are 0 bytes in size in the current directory and remove them
Create symlinks to all  /home/folder1/*.txt files and 'folder1_' directory with the same name in a target directory named '+'
Display standard input as printable characters or backslash escapes with no addressing radix
Search the current directory recursively for files containing "string"
Change permissions to 644 of multiple regular files with permissions 755
Find the passwd file in the current directory and one level down
Search the system for files and directories owned by group `managers'
Find all regular files under and below /somepath that have extensions PDF, TIF, TIFF, PNG, JPG, JPEG, BMP, PCX, or DCX, ignoring the case and excluding "*_ocr.pdf" files
list in long format all files from / whose filename ends in "jbd", not descending into directories that are not readable while searching.
Print new line separated numbers from "001" to "100"
List all the file links
Display differences between directories dir1 and dir2.
locate large files (> 100 MB) in /home/ for 'cleaning'
Print a listing of the `other' directory
Search for regular expression 'expr' in all .c and .h files from the current directory tree
Archive "/media/Incoming/music/" to "/media/10001/music/" on host "server" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission
display a long list of the files in the current folder which have the word fuddel in all the files in the current folder and then search for the word fiddel in the previously matched files
For each line whose first field is the same in file1 and file2, output the common first field followed by all other fields in file1 and file2.
Print every 20 bytes of standard input as tab separated groups of bytes 1-3, 4-10, and 11-20
Search for files/directories which are writable by either their owner or their group
Delete all *.zip files under current directory that are older than 2 days
Display a list of files with sizes in decreasing order of size of all the regular files under $dir directory tree that are bigger than $size in size
Find all directories under minimum 2 levels down the mydir directory
Save hexadecimal byte 10 in binary file "file.moi" to variable "day"
List file contents of compressed file $i
Format each line as 3 columns based on extraneous columns
Find all files/directories under current directory
Recursively removes all files and folders named '.svn' in a current folder, handling content of removed folder before folder inself.
display all the files in the current folder which do not belong to any group
Delete empty files and print their names
Remount "/system" as read only
Create an empty file in each directory named "mydir" under current directory.
Compare each .xml file under the current directory with a file of the same name in "/destination/dir/2"
Search all .java files residing in the current directory tree and modified at least 7 days ago for string "swt"
Non-recursively finds all '*.pdf' files in a current folder and removes them.
find all the normal/regular files in the folder main-directory
Find all files and directories last modified less than a day ago and copy to "../changeset" creating directories as needed
Remove trailing white spaces from all files under dir directory
Find all broken symlinks under /path/to/search directory
display all the files in the folder "/dev" which belong to the user "peter"
Search all regular files in the current directory tree for "string"
Search all files in the current directory tree for "SearchString", ignoring .html files and skipping .svn directories
Find all 2*.data files/directories under jcho directory
Delete all files/directories in minimum 2 levels down the root directory
Saves list of currently logged in users in 'userlist' variable.
Find all broken symlinks in maximum 1 level down the $path directory
display long listing of all the files that have been changed in the last 4 days, daystart is used to compare from the starting of day i.e, at 00:00
find for a filename with multiple patterns in the current folder
Print the list of files in directory /tmp/a1 recursively
Find all files under /mountpoint and below which have hard links
Find all directories under ~/code and replace all newlines with : in the output then remove the last :
find  js file which name is not  'glob-for-excluded-dir'  under current directory.
Find files named 'fileName.txt' under '/path/to/folder' directory tree ignoring 'ignored_directory'
Check that the master SSH control socket "my-ctrl-socket" to "jm@sampledomain.com" is running
search for files in the current folder ending with ".au"
Find recursively all regular files in the current directory tree ending in .dll or .exe
Find command will display top 5 small files from curent directory . most probably you will get ZERO  bytes files .
Replace all URLs in "MyHTMLFile.html" with "$pub_url" and create a backup with suffix ".bak"
Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 1 day ago
Counts lines in each *.php file.
Replace all newlines except the last with a comma in "test.txt"
Find files/directories that are newer than 'foo.txt' under current directory tree
Find all files in the current directory tree whose names are ".DS_STORE"
Delete all 'restore.php' files in /var/www and 3 levels below
Synchronize "/path/to/dir_a" with files in "/path/to/dir_b/" if the files are newer
Count the number of .gz files in the current directory tree
list files found under the current directory ending in "txt" or ending in "html"
display the count of total number of non empty files in the current folder
Count the number of times that a single "-----------\n" separated record contains both "A=2" and "dummy=2" and the number of records that do not have "dummy=2" in compressed file "file.gz"
Find and show all files on the system that are larger than 900 MB
find all files in the home folder that are modified in the last 7 days
find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir
Print only unique lines in files 'set1' and 'set2'
finds all files modified within a certain time frame recursively
Find files owned by no group
List all variables (names only) with names containing X.
Copy "src/prog.js" and "images/icon.jpg" to "/tmp/package" keeping relative path names
list all *.java files under the src directory
Print numbers 1 through 10 separated by ":"
Recursively change the ownership of all files in "/Users/xxx/Library/Developer/Xcode/Templates" to "xxx"
Append the contents of ".cwdhist" file to the current in-memory history list
find the oldest normal file in the current directory and display with its timestamp
Find files containing `blah' in their names modified less than 2 days ago, case insensitive
Execute 'echo -e "\tHello World"' every 2 seconds
find all the regular/normal files in the current folder which belong to the group "flossblog"
Search  in current directory downwards all files whic  have permission 777 .
Print IP addresses of the current host
Delete all empty directories under test directory
Recursively compress every file in the current directory tree and keep the original file
Calculate the md5sum of the executable file of command "cc"
Find regular files named core under /tmp and delete them
Print a listing of the `other' directory
Recursively lists all files in a current folder in long format.
Replace all instances of "STRING_TO_REPLACE" with "STRING_TO_REPLACE_IT" in "index.html"
Find all *.axvw files/directories under current directory
Counts lines in each of *.php files in a current folder and subfolders and prints total count as well.
Get the actual find exectuable path
Copy the owner and group from "file.txt" to "$tempfile"
List all files under the current working directory with name ".htaccess"
Delete all files under $DESTINATION directory tree that were modified more than 7 days ago
Archive "/home/abc/*" to "/mnt/windowsabc" with human readable output
Print numbers from 1 to 10 with padded leading zeros
Remove files from the file system that are owned by nobody
Make directories "bravo_dir" and "alpha_dir"
Create a local SSH tunnel from "localhost" port 16379 to "localhost" port 6379 using key "keyfile.rsa" and disables the interactive shell
Count the *.html files residing in the /usr/src directory tree and containing string "foo"
Prints process tree of a current process with id numbers and parent processes.
Print chmod commands that can change permissions of regular files residing in the current directory tree to u=rw,g=r,o=
change the owner of all the regular/normal files which belong to the root user to "tom" in the current folder
Mount the directory "/etc" on "/tmp/sarnold/mount_point/"
display all the .sh scripts in the folder /usr
display all normal/regular files in the folder "$ORIG_DIR"
Search the current directory tree for files modified less than 5 days ago
find files in /usr directory which are modified after February 1 of the current year
Search all directories starting from the root directory for "filename"
start from current directory, skip the directory src/emacs and print it then skip all files and directories under it, and print the names of the other files found
Find all files whose names end with "~" in the /home/peter directory tree, following symlinks, and delete them
Split "/tmp/files" into files of at most 1000 lines each
Make directories to file "/full/path/to/file.txt" as needed
extract /path/to/my_archive.tar.xz to /path/to/extract and preserve permissions.
find all the files in the file system which have been accessed in the last 1 day
extracts text between pattern1 and pattern2 if and only if the pattern1 is followed by pattern2
Delete all matches to the regex '^.*iframe bla bla bla.*$' in all the php files under current directory tree and modify the files in-place
Delete all files in the current directory tree whose names end with ~
Print absolute path of java executable
Find all directories under and below /home/admin/public_html/, and change their permissions to 755
Search the current directory recursively for regular files last accessed less than 2 days ago
Remove all files whose names end with "~" in the /home/peter directory tree
Find files on the system that are bigger than 20 megabytes
Find all files/directories with space in their names under  /tmp/ directory and rename them by replacing all spaces with _
Print unique lines of "second-file-sorted.txt" compared to "first-file-sorted.txt"
list all the sqlite files in the current folder
find all the hidden files in the temp folder
Find and compress all .pl files in the current directory tree
Print unique lines in "set1" and "set2" when compared to each other and remove any tabs
Search for files that are at least 100MB
search for the word bananas in the all the regular/normal files in the entire file system
Get the total size of all files under dir1 directory
Find all empty files in /tmp
Search the current directory recursively for *.txt files with lines that match regular expression "^string"
display all regular/normal files in current folder
List all files in entire file system that belong to the user wnj or modified later than the ttt file
Print the list of files from the "/zu/durchsuchender/Ordner" directory tree whose names begin with "beispieldatei" and which contain string "Beispielinhalt"
Remove the .jpg files from the current directory whose names match regular expression ".+-[0-9]+x[0-9]+\.jpg"
Print the list of the subdirectories of the current directory
Remove the first 7 characters of every line in the output of "history"
Print extended file information for regular files found under the home directory whose names start with my
Change the permission to 0644 for all files under current directory
find all the backup files in the current folder and delete them
Print the mount point of the last mounted drive
Find all files/directories under '/usr/share/doc' directory tree whose name start with 'README'
Recursively finds file some_file_name.xml file and prints strings with "PUT_YOUR_STRING_HERE" preceding each found string with file name.
find all the file that have been modified exactly 3 days ago ( considers day starting not 24 hours )
Find all files under the current directory whose pathnames do not end with "Video", ignoring the case
Find all files on the system whose names are 'composer.json'
Finds all files having text "texthere" recursively in a current folder, and precedes found string with string number in file and file name.
Sort lines in "set1" and "set2" to standard output preserving only unique lines
Print common files of directory "one" and "two"
display list of all the hidden regular/normal files in the directory "/dir/to/search/"
Search the home directory tree for regular files modified yesterday
Mount partition with label "WHITE" on "/mnt/WHITE" with read and write permission and have it accessible by user and group "test"
Find all the files without permission 777 under current directory and show a few lines of output from the beginning
display all the files in the current folder except those whose name is "PERSONAL"
Find a.out and object files in the current directory tree
find the count of all the charcters of the list of regular files present in the current folder
find all the files that are modified in the last 1 day
Change to folder where the oracle binary is.
See what files are executable by the file's owner and group
Find all *.log files under current directory that contain the string "Exception"
create symbolic links in directory "/usr/local/symlinks " to all files located in directiry "incoming" and that have been modified earlier then 5 days and owned by user "nr"
Find all the files in file system which are modified in last 1 hour
display all the files in the file system which have been modified in the last 10 minutes
display a list of all the normal/regular files in the file system ,excluding the folder proc which have the suid or sgid bit set
Hunting down files with at least one banana
Prints long recursive listing of all content of a root folder, saving output to 'output.file'.
display all the regular/normal files in the /root folder which are bigger than 500MB
Change to the directory of the executable "python"
find all the text files in current folder and move all these to another folder appending ".bar" at the end of these files
Find regular files in the current directory tree that have the user executable bit set
Recursively move all files in "/path/to/srcdir" to "dest/"
find all the backup files in the current folder and delete them
Append "& Bytes" to the end of every line in "$TEMPFILE" and format the result as a table
Print the file content of command "f"
Print type of the file system containing path $dir.
Saves bytes count of the value of '$each' variable.
Print each character in "orange" on a new line
Prints total number of lines of all *.php files in a current folder and subfolders.
Read a line from standard input into variable "ENTERED_PASSWORD" without echoing the input
Creates temporary file and saves path to it in 'content_dir2' variable.
Remove all .mpg files in the /home/luser directory tree
Show find's version
Find all *.srt files under directory named 'working' and show the first one found
Recursively finds strings like "texthere"  in all "*.txt" files of a current folder.
display all the empty files in current folder
find all the files in the file system that start with "win" and searched only in the mounted file systems
Remove all regular files from the current directory tree whose names do not end with "ignore1" or "ignore2"
Output success.txt omitting lines whose first field appears in fail.txt - lines in fail.txt must appear in the same order as they do in success.txt.
Find all files/directories named 'java' under /usr directory
Find all files that are set group ID to 10
Find all *.txt files under /foo and delete them
Print "yes" 4 times followed by 1 "no"
Evaluate the output of recursively changing the owner and group of "/data/*" to "mongodb"
search all the files in the current folder and assign them to a variable
Find files/directories that are bigger than 10000 KB in size uder '/usr/local' directory tree
Search for "whatever" in all files under /dir directory ensuring white space safety in filenames
Find files/directories named 'somename.txt' under current directory tree
Search directory foo for files containing "/tmp/foo/bar" in their full names
Search the current directory tree for regular files modified within the past 24 hours whose names do not end with ".DS_Store"
List all files in maximum 2 levels down the current directory
Find all files in the current directory tree whose path names match pattern './sr*sc'
Overwirte file '/path/to/your/file' with random content, showing progress while execution.
search for php files  in current directory and search for a word in all these files
find all files in the current folder that end with ",txt"
Removes all empty folders under path '/foo/bar' and the path itself.
List all files in entire file system owned by the user wnj and are newer than the file ttt
Print full path of command "gradle"
Search for the literal string 'v$process' in all files under current directory
search for the directory "config" in the current folder
display the count of all the files in the current folder
search for files which are writable by both their owner and their group
List all files from the current directory tree that were modified less than 60 minutes ago
kill all background jobs
Forward all connections to client localhost 3309 via the SSH tunnel to "mysql_access_server" and then connect to host "sqlmaster.example.com" on port 3306
Finds only parts of echoed string that match with regex 'run-parts (-{1,2}\S+ )*\S+', and saves them in $match variable, each matched part on a separate line.
create a hard link as directory named "new_hard_link" to the directory "existing_dir" as root
find all the files in the folder /opt which have been accessed exactly 20 days ago
Find all files in $dir directory without going into sub-directories and print only their names preceded by 3 spaces
Archive "/path/to/sfolder" to "name@remote.server:/path/to/remote/dfolder" preserving hard links and compressing the data during transmission
Calculate md5 sum of empty string
Search the current directory tree for regular files whose names end in ".shtml" or ".css"
Save the first line of "$j" into variable "k" in ksh
Page through the contents of 'input_file_name' hexdumped with space-separated 2-byte units.
find all the files in the current directory which have been modified in the last 30 days and display the contents.
Sort the lines of the file 'temp.txt' and change it in-place
Search  in current directory downwards all files whose owner is aa1 or whose name is myfile .
search for al cpp files in current folder and display unique parent directory of these files in sorted order
Search for "www.athabasca" in all files under current directory
Lists all subdirectories in current directory with a trailing slash
Recursively removes all files like '*.xyz' in a current folder.
find all files under the current directory, filtering the output through a regular expression to find any lines that contain the word foo or bar.
Display standard input as a table with "${tab}" separators
Join data in "file1" sorted by the second word of each line with data in "file2" sorted by the first word of each line, keeping the same order as it is found in "file1"
Find all *.ogg files on the system ignoring the case
find regular files under the current directory, whose name ends in .mbox and using awk run multiple system commands to rename each matched file, to the same name without .mbox at the end
Find recursively the latest modified file in the current directory
Find all files in the current directory tree and count them
Find empty regular files in /dir and its subdirectories
Recursively copies everything under the 'current' folder to the '.hiddendir' folder.
Get the disk space used by all *.txt (case insensitive) files under /home/d directory
Find all directories containing 'linux' in their names under '/root' directory tree
Delete all files named 'Waldo' under ~/Books directory tree where '~' expands to user's home directory
find all the directories in current folder and do not search in sub directories
Unzip and untar "4.56_release.tar.gz" to standard output
Print the character representations of 65 to 90
Save the numerically greater value of "$kf" and "$mp" into variable "gv"
force remove all the directories with the name logs in the folder /var/www
Creates temporary file name and saves path to it in 'TMP_FILE' variable.
Find all JPG files under the "$SOURCE" directory and below
Search for 'String' case insensitively in all files under current directory tree and show the matched lines with their filenames
Find all directories under /home/mywebsite/public_html/sites/all/modules and set their permission to 750
Find all regular files with permissions 777 under and below /home/user/demo/
Find all the files in file system which are changed in last 1 hour
Copies all files under the current directory like any-cased '*foobar*' to the '~/foo/bar' directory.
Compress "hello world" and save to variable "hey"
Output the specified path removing all containing directories and the .txt suffix, in this case "filename".
Find all the regular files in $DIR directory tree which have not been modified in the last 15 days and delete them
Print all filenames under /proc and below
Add executable permission to "java_ee_sdk-6u2-jdk-linux-x64.sh"
search for the files which contain the word start in their name excluding search in ./proc, ./sys, ./run folders
Print A record for domain 'domain.' from 'some.other.ip.address' nameserver
Print numbers from 1 to 10 using up to 4 processes
Search for the system host name in "/etc/hosts" and print the IP address in the first awk field
Create a ssh tunnel on local port 2222 through "bridge.example.com" to "remote.example.com" port 22 without executing any commands and run in the background
Set variable 'path' to name of current directory (without the containing directories).
Replace all occurrence of "subdomainA.example.com" with "subdomainB.example.com" in all files under /home/www and below
show all files in the current directory and all subdirectories
Find files/directories named 'foo.bar' under './dir1' and './dir2' directory tree
find all the files in current directory of size smaller than 10KB.
Search the home directory tree for .tar.gz files newer than file "filename"
List the largest file in long list format of all the files under the current directory
display the sum of disk used by all the access.log files in /var/www folder
Delete all files with indoe number $inum under current directory tree
find all the files in the entire filesystem which belong to the group root and display the ten files.
Find all *.foo files under current directory and print their contents
Write standard input to standard output and to "foobar.txt"
Update timestamps of all files and directories under current directory.
Print lines in the sorted contents of "file1" that are not in the sorted contents of "file2"
find files which modification time is  one day ago
Sort ":" delimited lines in "test.txt" by the first and third field preserving only unique lines
Change permissions for all PHP files under the current directory tree to 755
Look for files in the current directory tree to which the group users have full access
Print IP addresses of the host name
Find all .sh files in the current directory tree and remove them
Find files in the current directory tree whose pathnames contain "sub"
display all the files in the home folder excluding directories which have been modified in the last 24 hours
find all the files in the current folder which do not belong to any user
Creates temporary file with name formatted like '.script.XXXXXX' in '/tmp/' folder and saves path to it in 'script1' variable.
Get the number of regular files in the directory given as the bash script argument $1
Displays calendar of a previous, current and next month for December of 2120 year.
prints last part of a logfile since timestamp 423
Find all regular files starting from level 3 of directory tree ~/container and move them one level up
Print history with the first field removed
Remove duplicates in variable "variable" and preserve the order
Calculate and show md5 sums for every files under current directory tree
Count the number of regular files in the current directory tree
Save the directory of the full path to the current script in variable "dir"
Print a count of each unique line from standard input
Print the first 2 lines of tree's help message by redirecting it from standard error to standard output
Find files under current directory without descending into other file systems and append a null character at the end of each paths
display all files in current folder with NULL separating each file
display all the regular/ normal files in a folder
Find files associated with an inode
Move all files and directories not starting with "l" in "/mnt/usbdisk" to "/home/user/stuff/."
Check if current shell is running within a 'screen' process.
Force decompress all files into '/etc'
Locate all *.csv regular files under the current directory tree
find symbolic links with pattern` '*sysdep.c'
Forcibly removes files  '/tmp/stored_exception', '/tmp/stored_exception_line', '/tmp/stored_exception_source'
Find all files/directories that start with 'test' in their names under current directory tree
Archive preserving permissions and ownership files in "/var/www/" on host "user@10.1.1.2" to local "/var/www/"
Connect to host "${HOSTNAME}" as user "${USERNAME}" and execute "${SCRIPT}" non-interactively
Go to directory pointed by last element of array "dirs" in bash version 4.2
Lists all files in a current folder, separating names with comma.
Find all directories under /home/me
Print line, word and byte counts for each .php files in current directory tree and also show the total counts
Print all files in the current directory tree as a comma separated list
Search the current directory tree for regular files whose names end in "log"
Remove blank lines and replace " " with "/" in "struct.txt" as input to make directories with parents as needed
Set variable GZIP to the full path of command "gzip"
Find all files in $dir directory (non-recursive) and count them
Sets shell options 'extglob' and 'nullglob'.
Rename "www_new" to "www" even if "www" directory exists
display all the regular/normal files in current folder
List all directories in maximum 1 level down the current directory
Display the 5 largest files in the current directory and its sub-directories.
Search directory tree $DIR for *.txt files
Save the directory name of the current bash script to variable "path" if it is found in one of the directories specified by PATH.
find all the files in the current folder which do not have the execute permission
Execute "ls" every second
Print numbers from 1 to 30 with 0 padding to a width of 2
Remove all files in the /myfiles directory tree that were accessed at least 30 days ago
Search for " 000" in the hex dump of "file-with-nulls"
Find and copy all log files in the current directory tree to /tmp/log-files
Set permissions to 400 for regular files under the current directory
Print lines unique and common to sorted files "file1" and  "file2"
Find all .java files starting from the current folder
Finds strings like "texthere" recursively in all files of a current folder regarding all symlinks.
List all files with name "someFile" and their modification time under the current directory sorted by oldest modified to newest modified
Print "This is a sentence." by replacing all consecutive space characters with a single newline character
Locates Erlang distribution, and prints release number from 'RELEASES' file.
search for the word "search-pattern" in all the regular/normal files in the current folder and display the matched file name
Answer "n" to any prompts in the interactive recursive removal of "dir1", "dir2", and "dir3"
Find all directories under /path/to/dir and change their permission to 755
Find all files under /somefolder matching the pattern expanded by $FILE_PATTERN in thier names
Decompress 'file.gz' to standard output and execute the output in bash
Print mount point of the file system containing $path.
Locate files that reside in the home directory and have not been accessed in the past 30 days
Find files/directories writable by group or others under the /path directory
Display 12345 backwards
Display kernel release name.
Modify interval to 0.1 seconds for the watch command
List all environment variables whose name starts with PATH, showing the name and value of each one.
Write "fifo forever" infinitely using the named pipe "fifo" by writing its contents to standard output and to "fifo"
Print the output of history without line numbers
Dry run making directories in "/TARGET_FOLDER_ROOT/" for each ".mov" file in the current directory tree
Counts lines in each *.php file, sorted by number of lines, descending.
Prints message info about filename and location of the current script
search for all regular/normal files in current folder and display all the files which contain 16 lines
Gets string with MAC addess of network interface eth0.
Recursively finds strings with"text string to search” in files under 'directory-path', regarding provided options '[option]'.
Removes all files from current folder but 5 newest ones.
Copies file 'index.html' to each top-level directory in the current directory.
Search directory $CURR_DIR for regular files that were changed, accessed, or modified $FTIME days ago
Recursively removes all files like '*.pyc' of '*.pyo' in a current folder without prompting.
Find files whose pathnames contain "string" and print these pathnames replacing 'search string' with 'new string'
Count the *.html files residing in the /usr/src directory tree and containing string "foo"
Print the list of all files under the current directory and below
display all files in current folder which are bigger than 1 MB
Delete all .svn files/directories under current directory
Run 'make -e' with an environment variable 'HOSTNAME' set to the system hostname
Report file system containing path to /dir/inner_dir/ disk usage in kilobytes.
display all the text files in current folder
Create directory dir2
File 'save_pid.txt' contains a process ID, instantly kill this process with SIGKILL signal.
Count the number of files named `file1'
Add a line number to every line in "infile"
Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory
dsisplay all files inthe current folder
find all the regular/normal files in the current folder
find all the ".jpg" files in current folder and display their count
display the count of all the directories in the current folder
Search the current directory tree for regular files owned by user "www"
Case-insensitive search for "error" in file report.txt, display one page at a time, waiting for user interaction between each.
Create master SSH control socket "my-ctrl-socket" in the background with no terminal or command execution with connection forwarding from localhost port 50000 to localhost port 3306 via "jm@sampledomani.com"
Recursively changes group ownership of everything within a current folder to 'admin'.
find md5sum of 401
List all directories of the $topdir directory tree that contain a Makefile and at least one .py file
Copy permissions from "version2/somefile" to "version1/somefile"
List all files/directories under current directory matching the posix-egrep type regex ".+\.(c|cpp|h)$" in their names
Search the "katalogi" directory tree for files named "wzorzec"
display all files in the current folder which start with met
Forcibly removes all files like '*.bak' and '*~'
display all the files in the folder /etc /srv excluding those that are present in the path of ./srv/tftp/pxelinux.cfg* and /etc/mtab
force delete all the temp files which are of size 0 bytes and which have not been accessed in the last 10 days
List .log files from the current directory tree
search for *.log files starting from / (root) and only in the current file system
Move all files that contain "Subject: \[SPAM\]" to "DIR"
Find all .rb files owned by root in the /apps/ folder and below that have been accessed in the last two minutes.
Recursively change the owner of all files in "upload_directory" to "nobody"
search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3
find all normal/regular files in current folder and display the total lines in them
Search the /Path directory tree for files matching pattern "file_name*"
display all the files in the current folder which start with either "fileA_" or "fileB_"
Find all SUID set files under current directory and show a few lines of output from the beginning
Count the number of files in the directory trees whose pathnames match pattern '/dev/sd*[a-z]'
Read a line from standard input into variable "response" ignoring backslash escapes and using the prompt "${1:-Are you sure? [y/N]} "
Print a count of each unique line in "ip_addresses.txt" sorted numerically
Search the current directory recursively for regular files with the extension given as variable $extension
Search the file system for regular files whose names are shorter than 25 characters
Display hostname.
Find all *.c files on the system and feed the output to wc
Removes all empty folders under path '/thepath', printing info message on each operation.
Find all files/directories named 'photoA.jpg' under current directory tree
Print amount of space available on the file system containg path to the current working directory human-readable.
Changes group ownership of 'myprogram' to ${USER} (the current user)
Extracts single file 'filename' from bzip2-compressed tarball archive.tbz.
Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days
Run rsync with options specified by variable OPTS, copying directory(ies) specified by variable FIND, and to destination specified by variable BACKUPDIR.
Split "complete.out" into files with at most "$lines_per_file" lines each
display all the .sh scripts and perl files in the current folder
A no-op on filename with sed
Print unique lines of sorted file "f1" compared to sorted file "f2"
Extract any line in "file1.txt" which does not appear as the first ";" delimited entry in "file2.txt"
recall the second argument from a previous command by pressing alt-shift-y
Copies all files like '*.txt' under the current directory to the './tmp/' directory.
Print file system disk space usage with sizes in powers of 1000
Search all regular files in the current directory for "example"
Create compressed archive from "my_large_file_1" and "my_large_file_2" and split into files of size 1024 MiB with prefix "myfiles_split.tgz_"
Number each non-blank line of standard input
List the commands in /usr/bin, pausing for user input after each page.
Reformat date "Sat Aug 09 13:37:14 2014 +1100" according to format string "%a %b %d %H:%M:%S %Y %z"
Archive "myfile" to "/foo/bar/" and create directory "/foo/bar/" if "/foo/" exists
Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir
Find and delete all hard links in the /home directory to file1
Count the number of directories in the current directory and below
Print the first 24 alphanumeric characters from "/dev/urandom", determining C locale for all categories
find all the cpp files in the current folder and move them to another folder
Create symbolic links in the current directory for all files located in directory "/path/with/files" with a name containing "txt"
find all txt files under the current folder except ./misc folder
find all the files which have size 0 bytes in temp folder
Print each line in "f1" and "f2" separated by a space and "f3" separated by a tab
Adds %Pathname% to the dirs stack (Windows format).
Split "ADDRESSS_FILE" into files containing at most 20 lines and prefix "temp_file_"
Find all .gif and .jpg files in the /var/www directory tree
Find all directories in /path/to/dir/ without going into sub-directories and append a null character at the end of each paths
delete all the empty files(files with size 0 bytes) in the current folder
Ping hostname, grep for 192.168.11 and print the IP from the output
find all the files in the current folder with the name "test-a" and move them to the folder test-10. execdir runs the command in the directory where the file is found.
Search the current directory tree for files containing "album" and "vacations" in their names and not containing "2015"
Add read and execute permission to command "node"
Find all directories under ~/code excluding hidden directories and their subdirectories and replace all newlines with : in the output then remove the last :
Print linux group names on multiple lines instead of single line output
Copy "/path/to/source" to '/path/to/dest' in remote "username@computer"
find all text files in the current folder
change the permission of all php files in current folder. Plus symbol at the end is used to give multiple files as input to the chmod command
find files ending with .jpg
Find files recursively with extension "ext"
Connect as ssh user specified by variable USER to host whose IP address or host name is specified by HOST, and copy remote file specified by variable SRC to location on local host specified by variable DEST, disabling progress info but enabling debug info.
display the count of number of files in the current folder
Find files in the current directory tree whose names are of the form "cxx_data.txt" where xx is a number from 40 to 70
display all the html files in the current folder that have been modified in the last 7*24 hours
list all javascipts file which whole name does not contain excludeddir or excludedir2  or excludedir3
search for the file foo in  the current folder and display a long listing of it in sorted order of modification date
Delete file with inode number 314167125
List all *.c, *.h and *.cpp files under current directory
Print the last 10 commands in history
List all available commands in Mac OS
find all the html files in the current folder which have not been modified in the last 7 days
Compress "archive.tar"
Find files with a question mark in their names
Find all leaf directories that include only one occurrence of "modules"
Print the 6th field (delimited by '/') from the paths specified by ~/bin/FilesDvorak/.* files/directories
Find all files in and below the home directory that have been modified in the last 90 minutes
Join columns in "file1" and "file2" if their first field matches and format the output as a table
Search the files from the current directory tree for "chrome"
List all .c and .h files in the current directory tree that contain "thing"
Replace all instances of ";" with "\n" in "bla@some.com;john@home.com"
Print and save the ping results of 25 requests to "google.com" in "/home/user/myLogFile.log" containing at most 100000 bytes
Search the /usr/ directory tree for files newer than file /tmp/stamp
List regular files in current directory with read, write and execute permission for all users and also show the permissions
Number every line of standard input as zero padded to 6 characters followed by "-"
Store content of uncompressed file "$file.fastq" in variable "reads"
Find all files/directories under current directory that were modified later than /reference/file
List the files in "archive.tar.gz"
Search the current directory for PHP files
Remove sequence like '\xEF\xBB\xBF' from first string of every file in a current folder and subfolders, creating backup file with .bak extension for every changed file, and removing backup on success.
Output line number and lines 200000000 through 200000005 from the infinite input of "y"
Report only total size of file systems in 1T blocks.
find regular files in the "mail" folder under the user's home directory, displaying filenames and lines that contain the text "Linux"
Prints yesterday's date information
Find all files that belongs to group Developer under /home directory
find all the files that are not modified in the last 7 days
Find all regular files with '.jpg' (case insensitive) extension, sort them by name, print the output  and also save the list to file 'file_list.txt'
Write "2-1.1.1" to standard output and to file "/sys/bus/usb/drivers/usb/unbind"
Make directory "/tmp/imaginary/" on remote host before archiving "file" to "user@remote:/tmp/imaginary/"
Extract and print hostname and protocol part from URL like "http://www.suepearson.co.uk/product/174/71/3816/".
Find all directories under current directory excluding  directories (along with their contents) that start with a . (dot) in their names
Remove the path $1 from the PATH environment variable
Rename absolute path of symbolic link "dirln" to "dir2"
Recursively finds all files not like *.itp, *ane.gro, *.top in a current folder and removes them.
Print unique lines in sorted file "A" when compared to sorted files "B", "C", and "D"
Move all files excluding hidden files in "/path/subfolder/" to "/path/"
Find "*prefs copy" files in the /mnt/zip directory tree and remove them with prompting
find all the javascript files in current folder using regular expressions
Delete all regular files with inode number 314167125 under current directory tree
find all the directories  with the name "c" in the current folder which are at least 3 levels deep and which are not present in the path "/p/".
Overwrite a file 'my-existing-file' with random data to hide its content
Find all files/directories whose names start with 'readme' (case insensitive) under '/usr/share/doc' directory tree
Uncomment every entry in current user's cron job list which contains "test.sh"
Display inputfile all on one line (replace newlines by spaces)
Serach  in root directory all files which  have more than 2 links.
Find all files/directories under current directory and print them with newline as the delimiter
create and list contents of the archive
Change permissions to 644 for all files showing the respective chmod command
find all the regular/normal files in the /path folder and delete them
Display a long listing of all the regular files under current directory tree that are newer than ‘Apr 18 23:59:59 EDT 2013’ and older than ‘Apr 20 00:00:00 EDT 2013’ by modification time
set variable r to currently running kernel release, ie. 4.4.0-81-generic
Use "$BYTES" amount of RAM for "$SECONDS" seconds with no output
Split "foo.txt" into files with 1 line each and use a suffix length of 5
Gets MAC address of eth0 network interface.
Find all regular files under current directory tree and replace all '1.2.3.4' with '5.6.7.8' in these files modiying the files in-place
change the permission of all the normal/regular files from 777 to 755 in the folder "/home/user/demo"
Make directories "~/foo/bar/baz", "~/foo/bar/bif", and "~/foo/boo/bang" as needed
Changes group ownership of '/etc/btsync/[prefered conf name].conf' to 'btsync'.
Find files in the current directory tree whose size is 24000 bytes
find all the files in the current folder which have not been modified in the last 90 days and force delete them
Find all regular files that reside in the current directory tree and were last modified more than 5 days ago
Echo each command before running
find all the .jpg files in / and copy them to the current folder.
Compress all files in the "$FILE" directory tree that were last modified 30 days ago
Find all *company* files/directories under /root/of/where/files/are directory
Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago
Search for the case insensitive regex 'STRING_TO_SEARCH_FOR' in all files under current directory
List recursively all files and directories in /var/www
Save the UTC date represented by time string $sting2 as the seconds since epoch to variable 'FinalDate'
Get a detailed list of all files on the system larger than 10MB
Find all README's in /usr/share
Find all *.rb (regular) files under current directory and count their line numbers
Format and print the time string @133986838 according to the default time format
Find all files/directories under current directory in maximum 3 levels deep
display all the files in the home folder that have been modified in the last 24 hours
find all the files in the entire file system whose size is exactly 15MB
Find files in and below the current directory whose names begin with "not" and remove one of them
Remove trailing white spaces and replace CRLF with LF in all files under current directory ignoring .git and .svn directories
Find all regular files under $FILES_PATH directory tree and save the output to 'FILES' variable
Scan every file in /etc for IPV4 addresses while trying to elminate false positives.
Save the user name in upper case of the current user in variable "v"
Change permissions to 644 for all files in the current directory tree
Find all *fink* files/directories in entire file system
find all the files in the home folder which have been modified in the last 24 hours
Execute "du -s path" every 300 seconds
find all the php files in current folder and search for multiple patterns in these files
Change directory to the current user's home directory
Grab the output of "basename" (the last slash-separated section of variable "filename") and echo it to stdout, which basename would do by default anyway.
Counts all top-level files in a current folder.
Replace "inputfile" with a sorted unique list of its contents
Prints dates of $m month in $y year, preceded by month number and slash like ' 10/1'.
The file "files_to_find.txt" contains a list of filenames, create each file or update its timestamp if it exists.
display all the normal/regular files in the current folder which are empty
Search the /home/test directory tree for directories and files called '.ssh'
change the permissions of all the directories in the folder "/path/to/someDirectory" to 755
display all the regular/normal files in the current directory which are atleast 2 levels deep
Find all files under current directory and set their permission to 775
Change the owner of all files in the directory tree "dir_to_start" excluding directory "dir_to_exclude" to "owner"
Send 5 ping requests to address 12.34.56.78 and print only the last 2 lines of the summary output.
Delete files containing whitespaces without recursion
Locate all OGG files that reside in the home directory and have not been accessed in the past 30 days
display all the ".mov" files in the current folder
List all files 2 levels deep in the current directory tree
Find all files/directories under current directory tree with inode number 211028 and move them to 'newname.dir'
Numerically sort file "temp.txt" by the second "-" separated value of each line ordered from highest value to least value
find all the files in the current folder that have been accessed in today
extract "phantomjs-1.9.0-linux-x86_64.tar.bz2"
Set variable 'path' to name of current directory (without the containing directories) converted to lowercase.
Change directory to the download directory specified in the current user's user-dirs.dirs file
Save the canonical path of "/usr/bin/java" with "/bin/java" removed to variable "JAVA_HOME"
Recursively add read and execute permissions to all files and folders in "directory"
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days
display all the directories in the current folder
search for all files ending with ".mkv" in current folder
List the directory contents of the current working directory
List any line in "f1" or "f2" which does not appear in the other and delete all tab characters in the output
display all the directories in the current folder excluding those that have the name "node_modules"
search for a word in all the files in the current directory and display the file paths relative to the current directory
Print multiline text "ONBOOT=\"YES\"\nIPADDR=10.42.84.168\nPREFIX=24" to the terminal, replacing '\n' with newline symbol, and append that text to file /etc/sysconfig/network-scripts/ifcfg-eth4 as root user.
Find all files/directores under '/usr/local' directory tree that case insensitively contain the word 'blast' in their names
List all files/directories under current directory
Find all files under current directory and set read-write permission for owner and group and no permission for other for those directories
Find all files/directories under '/home/user/' directory tree whose status was changed exactly 10 minitues ago
Search for *pattern* in and below current directory
Save absolute path of the script filename in variable "SCRIPT"
show a count of the number of filenames ending in .txt in the current directory, without descending into sub-directories
Find all directories under /myfiles directory
search for a word in all the regular/normal files in the current folder and display the filename along with the matched text
remove all the core files in the current directory
Save first IP address of domain 'google.com' in 'address' variable
Lists all files in a current folder, separating names with comma.
Copy all files with '.png' (case insensitive) extension under '/home/mine' directory tree to '/home/mine/pngcoppies/copy.' directory
search for all the non-hidden files in the current directory and do not search in the subfolders and dispaly their name and size.
Get a recursive file list of directory $dir
Compress every file in the current directory that matches "*cache.html" and keep the original file
change owner and group of the file dir1 to user root and group  specialusers
Search the home directory for files whose names begin with "test"
Read a line from standard input into variable "message" with escaped prompt "Please Enter a Message: \n\b"
Find files in the current directory tree that were accessed within the last 60 minutes
Find all hidden (regular) files under /tmp
Print the list of files changed within the last minute
Counts all business days in a current month.
display the count of total number of empty files in the current folder
Find all files/directories which have been modified within the last day in the drectories/files taken from the glob pattern '/tmp/test/*'
Find all executable symlinks or upvoter-* files under maximum 1 level down the {} directory
Find files and directories in the /tmp/ tree that contain spaces in their names and replace those spaces with underscores
Search the current directory tree for files named "accepted_hits.bam"
Infinitely ping every host listed in "file-of-ips" with at most 50 processes at once
display a long listing of all regular files  in current folder which have been modified in the last 60 minutes
find all the files in the current folder which end with "ext1" or "ext2" or "ext3"
Print the largest 20 files under current directory
Find all files/directories under current directory tree whose names start with '(test)' followed by two digits and end with '.txt' extension
Find all files under /path and below writable by `group' or `other'
Search the /root directory recursively for the regular file named "myfile"
Move all directories in the current directory tree that have been modified in the last day to "/path/to/target-dir"
Delete all contents form the files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory excluding other partitions
Find all *.txt files that reside under and below /home/wsuNID/
Send one ping request to host whose name or IP address is specified by variable "remote_machine".
Find files/directories under current directory that matches 'projects/insanewebproject' in their paths
Sort all directories under current directory placing the file with least modification time at first
Display all symlinks and their targets in the current directory tree
Search all the .c and .h files in the current directory tree for "expr"
Find all directories under current directory and change their permission to 500
Write "Australia/Adelaide" to standard output and to "/etc/timezone"
Find all files under /path/to/Dir and set their permission to 644
Save the number of records in the system hostname that contain numbers in variable "server_id"
search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the disk usage of them
Display human-readable file type description of ascii.txt
find all the files in the current directory with the name "wagoneer" which are in the current device.
Remount "/system" with read only permission
Find all *foo* files/directories under current directory and copy them to /your/dest
Compress and display the gzip compression ratio of every file on the system that is greater than 100000 bytes and ends in ".log"
display the contents of all the text files in the current directory
Locate all *.mov files in the current directory tree
Find all regular files under ./Desktop directory
display list of all the files in the current directory (print0 handles file names with newlines or spaces)
display all the c files and the header files in the path /some/dir and do not search in sub directories
find all the files in the entire file system which belong to the group "staff"
Count total number of lines in all files below current directory.
Search for files in your home directory which have been modified in the last twenty-four hours.
Print NS record for domain 'domain.' from 'some.other.ip.address' nameserver
Find all files/directories named '.todo' under $STORAGEFOLDER directory tree and print the parent directory names
Append the date and command ran to "/tmp/trace" after every command
display all the regular/normal files in the home folder that have been modified in the last 1 day (from the start of day ie, from 00:00 )
Copy all files unconditionally and directories in directory tree "myfiles" to "target-dir" preserving directory hierarchy and modification time
Find all broken symlinks under current directory
display all the files in the folder /home which do not belong to the group test
Find all regular files that reside in the current directory tree and were last modified more than 4 days ago
Find all directories under 'test' directory tree that match the regex '[course*]' in their paths
Find all files and directories whose names end in ".rpm", ignoring removable media, such as cdrom, floppy, etc.
Get the number of "use" statements in all PHP files, ordered
List all *.txt files/directories under current directory
display all the files in the current folder for the files which have not been accessed in the last 24 hours
Recursively set all permissions under "../tools" to 777
Format "$line" as a table
Save all directories under the current directory as a comma separated list in variable "FOLDERS"
Update timestamps of all regular files (ie. excluding directories, symlinks, sockets, etc.) under /your/dir
Save the first "." separated field of the system host name to variable "HOSTZ"
Print standard input to standard output line by line, discarding any adjascent duplicate lines.
Close the master SSH control socket "my-ctrl-socket" to "jm@sampledomain.com"
find all the text files in the temp folder and search for the word hello in all these files and display the matched files
Display each line in file.txt backwards
find all files in current folder which are bigger than 1 MB and move them to another folder
display all the normal/regular files in the current folder and do not go beyond 3 levels
Delete files older than 31 days
display all instances of "foo.cpp" file in the current folder which are not in the sub directory tree ".svn"
removes the 4th-from to 6th-from last lines in file
Display a long listing of the files/directories with human readable sizes (100M, 10G etc..) under '/var' directory tree which are bigger than 10MB
Decompress ${set1[@]} files with gzip
Find all *.txt files/directories under current directory
find all the regular files in the current directory which do not have a read permission
Add read permission for 'other' for all files/directories named 'rc.conf' under current directory tree
Find a size of only the target directory in MB format
Search the /var/www/ tree for files not owned by user `apache'
find all the files  in the folder /opt which have been changed in the last 120 minutes
Print second field from semicolon-seprated line $string.
Search for utility "foo" in PATH, display its file type description.
Calculate md5 sum of files $source_file and $dest_file
Find all files/directories under '/usr/share/doc' directory tree that contain 'readme' (case insensitive) at the beginning of their names
Locate all .txt files in and below the current directory
Print source of the file system containing current working directory.
List files with C-style escape sequences for non-alphanumeric characters
Print a list of symbolic links reachable from the current directory that do not resolve to accessible files
find all text files in current folder and delete them
Recursively and forcibly removes $TMP folder with all content.
List and remove all regular files named "core" under /prog that are larger than 500k
Search for the string 'git' in all the files under current directory tree excluding paths and names that contain the string 'git'
Replace all '置換前' with '置換後' in all regular files under current directory tree and modify them in-place
Gets IP addresses of all network interfaces.
display a long listing of all the log files in the current folder which are bigger than 1MB
List the z* links in the /usr/bin directory and the file to which it points to
Search the directory tree given as variable $root_dir for regular files
Find all regular files or symlinks in the entire file system
change group of the file /tmp/php_session to group daemon
Remove regular files in the current directory tree
Show directory sizes in KB and sort to give the largest at the end
display all the files in current folder which have write permission to all the users
Search the file system for regular files whose names are shorter than 25 characters
Set the executable bit for all users on all regular files from directories arch/x86/usr/sbin, arch/x86/usr/X11R6/bin, usr/sbin/
Prints long listing of directory $var sorted from oldest to newest, with appended indicators.
Find files/directories writable by group and others under the /path directory
Saves exit statuses of piped commands in a system variable PIPESTATUS='([0]="1" [1]="2")
create directory dir
List all files bigger than 10000 blocks
Continuously answer "y" to any prompt from "mv ..."
Set the value of "to_sort" to "$1" in a subshell which no longer exists after the pipeline completes
Create 6-letter named temporary file in a folder path that is provided as the first positional parameter, and save the path to it in a variable 'tmpfile'
move all the files in the current folder  to temp folder and search atleast in one subfolder
Filters only directories including hidden ones from long file listing of a current directory, and prints their names.
display all the ".c" files in the current directory
find files in current directory that names are game
Find all TXT files that belong to user root
Unzip every ".gz" file in the current directory
Move all files and directories in the current directory to "somewhere/"
Shuffles strings of text received by 'awk' command on the input.
display all symbolic links in the folder "myfiles"
Find all *.py files under current directory and search for regular expressions taken from the search_terms.txt file
display all the regular/normal files in the current directory
Split standard input into files of at most 3400000 lines each
Print the directory name of the physical current working directory
Find all files under current directory and change their permission to 400
Find all symbolic links under current directory that are not hard links
This find command ignore the case when searching for file name , to ignore the case  in this example all .py & .PY file will search
change the permissions of all the directories in the folder root_dir to 555
SSH with parameters specified in "$@" using key file "~/.ssh/gitkey_rsa"
Find files under current directory that contains the string '/bin/ksh'
Remove all regular files found in and below /path
Find all files under /somefolder matching the extended regex '\./(.*\.error.*|second.*log|.*FFPC\.log)$' in their paths
Remove empty folder, and skip error message if one is not empty.
Removes all empty folders under current folder.
Find all *.txt files under the current directory whose names are not "File.txt"
Report total disk usage info on root file system, printing all sizes as power of 1000
returns a list of  files create time is 1 minute ago under the root directory.
Find all build* directories under /var/www/html/ and reverse sort them
Find all files/directories which have been modified from the start of the day in directories/files taken from the glob pattern '/tmp/test/*'
Look for files with the name 'search' under current directory
Print all user names and terminals of users who are logged in
Clean the current directory from all subversion directories recursively
Search the /media/shared directory recursively for MP3 and OGG files
find all regular/normal files in the current folder whose name has the word photo or picture and which have been modified in the last 30 minutes
Print unique lines of sorted file "file1" when compared with the list of first space separated fields of all sorted strings of file "file2"
display all the regular/normal files in a folder
Find recursively all regular .txt files in the current directory tree except README.txt
Answer "y" to all prompts of "rm -rf foo"
create a backup of all the files in the home folder on a partition and save the log to a file
Insert "insert" every 3 lines for the output of "seq 1 10"
Print the directories that are taken by the glob pattern $SrvDir*
search for the file test in the current folder
Show a long listing of the latest file or directory under current directory
Reports count of characters in the value of ${FOO_NO_WHITESPACE} variable as follows: "length(FOO_NO_WHITESPACE)==<counted number of characters>"
Print 'file' content, formatting output as 29-symbol wide column
Find all files named 'new' under current directory tree and display their contents
remove all the files in the present directory which have special characters in their name and do not search in the sub directories of the current folder.
change owner of the file my_test_expect.exp to user el
Find all files/directories that are bigger than 100 bytes under '/home/apache' directory tree
List all files under current directory with white space safety in their paths
display the three smallest files by size in a folder.
copy a files from one folder to all the folder in the /raid which have an extension local_sd_customize.
Find all files/directories under .. directory and copy them to ~/foo/bar
Gets domain name from dig reverse lookup.
Gets MAC address of 'eth0' network interface.
List all cron jobs which contain "word".
Show all files in user's home directory that have read, write and execute permissions set for user, group and others.
Count number of lines in all files matching "*R1*.fastq.gz"
Find *.txt files in the current directory tree, ignoring paths ./Movies/*, ./Downloads/*, and ./Music/*
Find all fonts (in '/usr/local/fonts') that belong to the user 'warwick'
Count all files under "/DIR"
find all files in the current folder which end with macs
find all the files that have been modified in exactly 7*24 hours ago
find all files in the current folder which have been accessed in the last 30 minutes
Print the contents of "filename"
Split "$1" into files of at most "$2" or default 10000 using a numeric suffix of length 6 and suffix "${tdir}/x"
Find all files/directories named 'text' under current directory
find all text files which have extra extensions in the current folder
Print the first 5 decompressed lines of compressed file "$line"
create a backup of all the files in the current folder to the floppy and save the file list in the file /tmp/BACKUP.LOG
copy all files which do not have execute permission to another folder
Lists all files in a current folder, separating names with comma.
Print content of all files found regarding seach options '[whatever]'
Print the last mounted drive
Find files owned by no user
Find all 50MB files in file system
search for all regular/normal files in the current folder and display the number of lines in the file
Print every two lines in "file" on a single line separated by a space
List files/directories at least three levels down the directory tree
Print "huzzah" if directory "/some/dir" is empty
Exit the shell immediately if an error is encountered
extract "backup.tar.gz" with verbose output
Find all directories in the current one recursively which have the write bit set for "other"
Set the setup connection timeout to 3 seconds for connecting to "user@ip" via ssh
Print yesterday's date as yyy:mm:dd
Look for *log files in directories at most three levels down the directory tree
Recursively removes all empty folders under current folder.
Find all hidden directories starting from the current directory
Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir
Recursively copies everything from '/source/path/*' to the '/destination/path/', preserving from overwriting existing files, and printing info message on each operation.
Replace spaces in directory names with underscores for all directories in the current directory tree
Display differences between /tmp/test1 and /tmp/test2.
display all the regular files in the folder "$(FOLDER)" which are modified in the last $(RETENTION)*24 hours and excluding hidden files
Find all directories under maximum 1 level down the current directory and set their permission to 700 recursively
Calculate the md5sum of all the files with name "MyCProgram.c", ignoring case
Find all regular files starting from level 3 of directory tree ~/container and move them to the current directory's parent
List files larger than 10MB under /var/log
Find all *.c files under and below the current directory that contain "wait_event_interruptible"
find all the png files in current folder which are present in the pattern list file "search.txt"
Read a line from standard input with prompt "Are you sure you wish to continue?"
find all PDFs owned by user “seamstress”
Print "echo ping -c 2" on each string in file 'ips'
Find all directories under /path/to/Dir and set their permission to 755
Find all directories under /var/www/some/subset and set their SGID bit
Copy "source" recursively to "destination" excluding "path1/to/exclude" and "path2/to/exclude"
Give all files in the /path/to/base/dir tree read privileges
Gets domain name from dig reverse lookup and save in variable 'go'.
Find *.html files in the /usr/src/linux directory tree
search for files that are readable for everybody, have at least on write bit set but are not executable for anybody
Convert relative symbolic link "$link" to absolute symbolic link
Find files with name `aaa.txt' under the current directory
Search for .pdf files
Find all files named "file.ext" within the current folder and print the path where each one is located
Print nothing because B.txt is compared with itself.
search for a word in all files in a directory
Print only common strings in sorted content of files 'file1' and 'file2'
Copy "fileName.txt" to all directories listed in "allFolders.txt" - names may not contain spaces.
Find all files in the current directory tree whose size is greater than 1MB, and move them to the "files" folder with confirmation
Print either "one" or "two" randomly three times
Display users who are currently logged in
Delete everything in the current directory
Read a line of standard input into variable "_command" with the prompt as the current working directory followed by "$"
find all the files that have been modified in the last 1 day
Print lines containing string TEXT from all log files in the current directory.
Find all files named "file.ext" within the current folder and print the path where each one is located
Find .jpg files owned by user daniel in the current directory and its sub-directories but ignore any file beginning with "autumn".
Copy all files in "/var/spool/mail" to "/home/username/mail" preserving the directory hierarchy and modification times
change owner of the file "file" to user user_name
find all the png files in current folder which are present in the pattern list file "search.txt"
Measure the disk space taken up by all *.txt files in the current directory tree
search for all the files in the folder /home which have sticky bit set and have the permissions 553
Find all PHP files under current directory that contain only one line
display all the files in the home folder which are smaller than 500 bytes
Save a comma separated list of all $MY_DIRECTORY/*/ directories to variable 'FOLDER'
Search the current directory tree for the files with extension "trc" and remove them if they are more than three days old
Convert the contents of 'var1' variable to lowercase
Force create a symbolic link without dereferencing named "mylink" to "dir2"
display all files in the current folder which end with extension "myfile" followed by one digit or two digits
Print the help message of command "split"
find the file "filename.txt" in the usr folder
Remove trailing white spaces from all files under current directory ignoring .git and .svn directories
display all the ".mov" video files in the current folder in the format filename and folder path
Use "$BYTES" amount of RAM with no output
remove all the files in the current folder which have not been modified in the last 10 days
Find all directories in maximum 1 level down the current directory that were modified less than 1 day ago
Search the ./bin directory recursively for files called "cp"
Print the files in the current directory as a list of comma separated values
Create a ssh key and store it in the file ~/.ssh/apache-rsync
find for the word "dba_2pc_pending" in all the files of current fodler having the word "sql" in their name
count all the regular files that are present in a directory
search in the current folder for the file with the name "test"
find all the links in the current directory and print them in each line and display their names.
Replace all newlines from standard input except the last with spaces
SSH into "$NAME" as user "${USERNAME}" using key file "${KEYDIR}/${KEY}.pem", automatically add the host to list of known hosts and execute "${COMMANDS}"
Retrieve only build number of current kernel, ie. #104
Creates temporary folder within a $mnt_dir folder and saves path to it in a 'rsync_src' variable.
Count files in the current path by modification month
Move all files in the current directory tree that match "some_pattern" to "target_location"
Find all files beneath the current directory that end with the extension .java and contain the characters String ignoring case.  Print the name of the file where a match is found.
Find all .gif files in the /var/www directory tree that are between 5 kB and 10 kB in size
Recursively removes all folders named '.svn' in a current folder.
Find all the files which are modified 50 days back
Remove all 'a.out', '*.o', and 'core' files in the current directory tree
Read a single character from standard input with prompt "Is this a good question (y/n)?" and save the response to variable "answer"
Calculate the md5 sum of all files in "/your/dir" including content and filenames and following symbolic links
Find all files in the current directory tree that were last changed $minutes minutes ago
Find the .groovy files outside the "./target" directory path
Enables shell option 'cmdhist'.
find all files  that names are 'apt'
Gets IP address of 'en0' selected network interface.
For each line which has a common first field in file1.csv and file2.txt, output the first 4 fields of file1.csv - both files must be sorted first.
find all the directories in current folder and delete them
Find files modified between 6 and 9 minutes ago
Find all python files (.py files) in $topdir directory tree and search for 'Makefile' in all these folders and display all distinct folders having 'Makefile'
Search the current directory tree for regular files whose names match pattern $x
Set variable "extract_dir" to list of top-level directories and files contained in tar archive specified by variable FILE.
Disable exiting the shell on error
List environment variables whose name contains "X"
Find all php files under current directory
Find all files/directories under current directory
download content from "http://example.com/textfile.txt" and output to "textfile.txt"
Find files/directories that does not have write permssion for group and others
Find files/directories under current directory and print them
sort based on size and display top ten largest normal/regular files in the current folder
Count the number of unique 3 to 6 character file extensions are in the current directory tree
Append "foo" and "bar" column in file "file" with values dependent on the current table contents
Find all .php files starting from the root directory and ignoring /media
Find all directories named 'files' under current directory and set read-write-execute permission for owner and group and no permission for other for those directories
Find all directories under /home/me/target_dir_1
Move all *.php~ (case insensitive) files under current directory to /mydir
Find all directories under current directory tree that were modified $FTIME days ago
Find all directories in maximum 2 levels down the /tmp directory
Find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories
Replace all occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in all regular files under '/home/www' directory tree
find all the text files in  the current folder and do not search in somedir, bin directories
Copy all files ending in ".a" in directory trees matching "folder*" to "/path/to/dest" preserving directory hierarchy
Prints day of first Tuesday in a month.
Gets IP address of eth0 network interface.
Search for all zero-byte files and move them to the /tmp/zerobyte folder
Counts total lines in all *.php files in the current directory recursively
display ten files in the tmp directory
Replace each new line in "INPUT.txt" with ":"
Make directory and parents as needed for each unique mime type in the current directory
Write "hello world" to the console and print number of bytes, symbols and strings in provided input.
display all the files in the current folder which have been modified in the last 2 days
Print only the line "foo///" given two empty directories foo and bar
Print A record for domain 'domain.' from 'ns2.newnameserver' nameserver
find all the files in the current folder which are readable
Sets shell option 'extglob'.
Find all files/directories in entire file system less than 50 bytes
Search the current working directory tree for files whose names start with "fileA_" or "fileB_"
Search the Movies folder in the user's home directory for files larger than 1024 megabytes in size.
Find all files in the current directory tree that are newer than some_file
Prints real path of the folder containing $0 file.
create a tar.gz compress file with all the jpg files in the entire file system
find all the files in the file system which have read permission to the user and display the ten files
Find all files/directories under /myfiles that are 2560 bytes in size
Recursively lists all *.py and *.html files in a current folder.
Display the contents of "file" formatted into a table, removing duplicate lines where the first 12 characters are duplicates, and display the number of occurrences at the beginning of each line.
Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory
Get the path of running Apache
Recursively copy all files and directories in "demo" excluding ".git" to "demo_bkp"
search for the directory "config" in the current folder and change directory to the first instance of the search
Remount root filesystem "/"
display a list of all the files in the file system which do not belong to any group and search only in jfs and jfs2 file systems
Extract five digits sequence from a filename with x number of alphanumeric characters followed by the five digit sequence surrounded by a single underscore on either side then another set of x number of alphanumeric characters.
Display the differences between "file1.cf" and "file2.cf" side-by-side with a width of 150 characters
Format "file.txt" as space separated columns 28 characters in width
find all the empty files and folders in your system
Find all regular files in the current directory tree that do not contain a whitespace
Find files owned by the "shadow" group
display all the text and pdf files in the current folder
Find regular files matching pattern "*oraenv*" and excecute the "file" utility for each of them
Find all files/directories under $1 which have at least write permission for their owner and set write permission for group for these files/directories
display all the files in current directory with each file name displayed twice in the same row
Find PHP files with abstract classes
Calculate the md5 sum of all files in "/your/dir" including content and filenames
searches through the /usr/local directory for files that end with the extension .html
Set variable OS to the name of the operating system, ie. "Linux"
search for all the files in current folder and display all the file names separated by space
calculate the total size of jpg files in current folder
Get a two column list of all regular .rb files residing in the current directory tree
Convert the first 16 characters in "/dev/random" to a single hexadecimal value
Print the path names of all files and directories in the current directory tree
Run a "rm" process to recursively remove "cache", making it immune to all SIGHUP signals sent to it.
Forward port 8000 bound on localhost to port 22 in 'clusternode' via 'user@bridge'
Set permissions to 600 for regular files under var/
change the extension of all the ".lst" files in the current folder to "a.lst"
remove all the core files from /usr folder which have not been accessed in the last 7*24 hours
Creates temporary folder like '/tmp/tardir-XXXXXX' with 6-letter suffix and saves its path in 'tmpdir' variable.
Make all the bugzilla subdirectories permission 775
Save absolute path of "/home/nohsib/dvc/../bop" in variable "absolute_path"
split file "$file into pieces named with 5 character suffix
display all the files in the home folder which belong to the suer "bruno" and end with ".sxw" and have been accessed in the last 3*24 hours
Copy file linked to by "file" to "file"
Search for all non-hidden files
Print the full path prefix for all files in the current directory tree as a list
Make directories to "/my/other/path/here" as needed
Find all .sh files in or below the current directory and move them to folder ~/back.scripts
List all files in /home/bozo/projects directory tree that were modified exactly one day ago
Print file type of the executable file of command "file"
display all the directories in the current folder and create a skeleton of make directory commands with all these folders
Find all hard links to file1 under /home directory
Display all regular files under current directory tree ignoring files in './dir1' and './dir2' directories
Sets 'extglob' shell variable.
display all regular/normal files in the current folder ending with the word ummy
Prints string "0 1 * * * /root/test.sh" to the terminal, and append it to file '/var/spool/cron/root'
Run perl -V (displays informations about perl's setup) in an empty environment.
Print each line in "file1" whose first word does not exist as the first word of any line in "file2"
find files in home directory that accessed more than 100 days ago
Delete all files under current directory tree with '.$1' extension where $1 expands as the first positional parameter
display all the C files or Python files in the folder "euler"
Print received input to the terminal
display all the files  in the current folder excluding those which are present in "./src/emacs" folder
Find all regular files that reside in the current directory tree and were last modified at least 1 day ago
find all the foo.txt files in the current folder and move them to another directory
Search for files specifying the minimum depth of the search
Find all regular files on the system whose names are 'myfile'
Print content of 'a' file, showing all non-printing characters including TAB characters, and displaying $ at the end of each line.
display all normal/regular files in current  folder
download contents of a website "http://example.com/"
Set the environment variable "DISPLAY" to the system host name followed by ":0 skype"
Split "domains.xml" into files of at most 50000 lines each with a numeric suffix of length 4 and prefix of "domains_"
display all the files ending with ".user" in /var/adm/logs/morelogs/ and excluding all regular files
List all *.txt files under current directory that contains the regex 'pattern'
Print every 4th line from 10 lines of "y" with line numbers
change the permissions of all the regular files in the folder root_dir to 444
Find all files/directories named 'имя_файла' in the entire filesystem
List all files/directories in entire file system
Save only the digits in "$filename" to variable "number"
List all files/directories under current directory matching the posix-egrep type regex ".+\.(c|cpp|h)$" in their names excluding the files that contain 'generated' or 'deploy' in their paths
Display name and value of 'variable' if it exists.
Copy "6.3.3/6.3.3/macosx/bin/mybinary" to "~/work/binaries/macosx/6.3.3/" and create directory "~/work/binaries/macosx/6.3.3/" if "~/work/binaries/macosx/" exists
create directory dir1
Print the 10 most used commands
list regular file which file name is NOT end with '.html' in current directory in current directory
Find all *.java files in the current directory tree
List all files in maximum 2 levels down the current directory
Saves value '1' in the $PIPESTATUS variable and returns 0.
display a long list of all the jpg files in the home folder(plus at the end is used to give bulk data as input)
find suffix tcl files under all directories started with 'n'
find all the php files in the current folder (discards any directory which has an extension of ".php")
find any files in the current directory that begin with a number
Print all filenames under /proc and below
Recursively change the owner of all files in "testproject/" to "ftpuser"
change cgi files to mode 755 under htdocs or cgi-bin directories
Calculate md5 sums for each files matching 'main.cpp*'
get all the files that have been modified within the last 30 days
Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them
create directory practice into home directory
SSH into user@server and run command ${SSH_COMMAND}
Make directory "/etc/cron.minute"
Removes all files from current folder but 5 newest ones.
Search the /tmp/ directory recursively for regular files
Move "file.txt" to docker container "$COUNTAINER_ID" in path "/var/lib/docker/aufs/mnt/$CONTAINER_ID/rootfs/root/file.txt"
Find all files/directories under current directory tree that have modified in the last 2 days and contain 'blah' (case insensitive) in their names
Recursively find the latest modified file in the current directory and print the modification time and filename
Compare files "A1" and "A2" with 3 lines of unified context and print lines beginning with "+"
Print the file 'text1;text2;text3' replacing each space(" ") with a newline
Search for files containing string "PENDWIDTH" and view the result using the more command
find all hidden files in the current folder which have been modified after profile file
create directory /path/to/destination
Infinitely print "no" to the screen
Find directories owned by user news with permissions 775
Set the host name to the contents of "/etc/hostname"
Print 1000 astarisk ('*')
Create intermediate directories as required and directory  /my/other/path/here
display all mp3 files in the file system which have not been accessed in the last 24 hours
Find all files/directories with space in their names under current directory and rename them by replacing all spaces with _
Returns exit code 1.
Decompress "path/to/test/file.gz" to standard output and save all lines matching "my regex" to files with a 1000000 line limit
display all files in the current folder which end with extension "myfile" followed by one digit or two digits
Remove all files from the current directory tree whose names do not match regular expression "excluded files criteria"
Find empty files/directories under test directory
Find all files called "file1.txt" that reside under and below /home/wsuNID/
Recursively change owner and group to "$JBOSS_AS_USER" of "$JBOSS_AS_DIR"
Archive "/path/to/sfolder" to "name@remote.server:/path/to/remote/dfolder" compressing the data during transmission
search  in root ( / ) directory downwards all files which  have exactly 2 links.
Sort "some_data" by the first and second ";" delimited entries, outputing unique lines and stabilizing the sort
Find the string 'joomla' case insensitively in all the php and html files under current directory tree and display the matched lines along with the file names and line numbers
find all the directories starting with the name "someNamePrefix" which have not been modified in the last 10 days and force delete them
Find directories modified in last 7 days
Delete all hidden files under $some_directory
Find all regular files with 400 permission under '/data' directory tree
change the permissions of the directories from 777 to 755 in the folder "/var/www/html"
find md5sum of content from "www.google.com"
Remove the passphrase from user's ssh key without prompting.
Archive "path/subfolder" to "path", skipping files that are newer at the destination.
Make directorie(s) 'es_MX.utf8/LC_MESSAGES' as needed in the current directory
Send SIGHUP (hangup) signal to nginx master process, causing it to re-read its configuration and restart child processes if necessary.
find all pdf files in the current folder
find all directories in the current directory which have the name foo and do not have the extension "bar"
Search the current directory recursively for MOV files, following symlinks
Reports count of characters in the value of ${FOO_NO_TRAIL_SPACE} variable as follows: "length(FOO_NO_TRAIL_SPACE)==<counted number of characters>"
Get the total size of all files under dir1 directory
Finds recursively and following symlinks from root folder all files that contain "text-to-find-here" and prints files names.
Print the path names of all .png files in the /home/kibab directory tree
Unzip all files that match "*.gz" in the current directory and subdirectories to stdout and search for "test"
Change directory to "/lib/modules/" of the current kernel release
Find all files on the system that are larger than 600 MB
Display the contents of "myfile" located in the current directory.
display all normal/regular files in a folder
Remove filetype suffix (last dot and following characters if any) from filename
Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*
Delete all directories found in $LOGDIR that are more than a work-week old
Find all files/directories startring with 'onlyme' in their names under current directory without going into sub-directories
Find all files/directories owned by the user 'bob' under '/home' directory tree
find all configuration files in a folder
Generates temporary file in a '/dev/shm' folder and saves path to it in a 'tFile' variable.
Copy the 3 specified files to /tmp/package, preserving/creating directory structure of each file as specified on command line.
Find all *.ogg (case insensitive) files/directories under your home directory that are greater than 100MB in size
Find all files under current directory and show their file information
search for the word "mysql" in all the files in the current containing the word "notes" in their name. print0 is used to handle files  with newlines in their names or those which have only spaces in their names
Print the path names of all regular .rb files prefixing them with string "Hello, "
Show the number of lines for each PHP file in the current directory tree
Find recursively all files changed within the last 5 minutes starting from directory b
Read a single line from standard input and save to variable "line"
Send ping requests to hostname specified by variable "c" for 1 second.
Search the current directory tree for all files except SVN ones
copy all the files with the extension ".type" from one folder to a target directory
Recursively add ".jpg" to all files in the current directory tree
Find all files under /path/to/base/dir and change their permission to 644
Split "bigfile" into files of at most 1000 lines each with prefix "/lots/of/little/files/here"
Search /var for files matching regular expression '.*/tmp/.*[0-9]*.file'
Show all files in /etc that are owned by root have been modified within the last minute
Prints running process that has id 'pid' with command line arguments.
Find files/directories with exactly read,write and execute permission for all (owner, group and others) under /path
Go to directory named "~" (not home directory)
find all the empty directories in the current folder
Create a symbolic link named "/lib/libc.so.0" to "/lib/libc.so.6"
Display current running kernel's compile-time config file.
Print unique lines of "a" and "b"
display all the files in current folder which start with "file2015-0"
Print the output of history without line numbers
Find directories and regular files containing `blah' in their names modified less than 2 days ago, case insensitive
List all variables (names only) with names containing X.
Find files using file-name
find files in current folder ending with ".c" or ".h" or ".ch" and search for a word in these files and enable color highlighting of the matched text
Create symbolic links in the current directory for all files under "bar1" that are not directories and do not end in ".cc"
Change permissions to 644 for all regular files under the /path/to/dir/ tree unless these permissions are already set
Return 0 if at least one "abc" file in the current directory tree contains text "xyz"
Print the common third whitespace separated fields in "file1" and "file2"
Prints $m latest modified files within the $d folder, using $f format for printing timestamp.
Find all empty directories under a certain path
find all text files in the folder "FFF" and find the md5sum for them
Enables shell option 'nullglob'.
Print a list of case insensitive duplicate filenames in the current directory
Recursively changes group ownership of every file in '/var/tmp/jinfo' to 'www-data'.
print number of jobs
show all files in the current directory and all subdirectories
Print list of all user names who are logged in
Creates temporary directory in '/tmp/' folder and saves path to it in 'my_tmp_dir' variable.
Move all *.mp4 files from directory /foo/bar and its subdirectories to /some/path
display the html, javascript and text files in the current folder (print0 is used to preserve the filenames of all the files which have newlines in their names)
Erase user's cron jobs and add one cron job to run "script" every minute.
Find any files in the current directory and its sub-directories that were last accessed more than 7 days and are larger than 20480 blocks in size.
Go to directory /cygdrive/c/Program Files (x86) using backslashes to escape special characters
search for the file "abc" in the current folder or display all the directories
Remove regular files changed more than 15 days ago from the /tmp directory tree
Search the files from the current directory tree for "chrome"
display all the files in the file system which belong to no group
Change permssions of *.cgi files under directories htdocs and cgi-bin to 755
Print the name of "file1" if this file is newer than "file2"
find files in the current directory with pattern` '*.[ch]' which are contain ‘thing’ string and print file names
List all files under the current working directory last modified less than a day ago
Search history for "part_of_the_command_i_still_remember_here"
Find files/directories named blah (case insensitive) under current directory
Lists all files in a '/home/dreftymac/' folder and subfolders without recursion.
find  files which full path name is foo/bar under foo directory and print
Reversibly sorts content of the '${TMP}/${SCRIPT_NAME}.kb' file, comparing human readable numbers in file strings.
Print 'huzzah' if /some/dir/ is empty
Find all empty regular files in the current directory tree
Force create a symbolic link to "$f" in "~/my-existing-links/" with name the basename of "$f"
find files in /dir/path/look/up directory that names are dir-name-here
find all files in the current folder and search for a word in them.
Search the current directory recursively for .sh files whose names begin with "new"
Gets IP addresses of all active network interfaces and saves to 'ip' variable.
Find all regular files under current directory tree that match the regex 'tgt/etc/*' in their paths
Concatenate all files under the current directory and below that contain "test" in their names
Remove all white space from "infile.txt" and wrap each line to 80 characters
Change group ownership to `foo' for files with GID=2000
List the unique parent directories of all .class files found in the entire filesystem
split file /usr/bin/gcc into pieces per 100000 lines
create an archive using pbzip2 as a compress program
Search the /path tree for all executables
Print all unique strings in $1.tmp file.
display all the home folder which end with the extension "sxw" and which have been accessed in the last 3*24 hours and which belong to the user bruno
List all files in the current directory tree including those that may contain spaces in their names
Find the first file/directory named 'something' under current directory and quit
Return a list of files newer than file poop
Read a line from standard input into variable "date" with prompt "BGC enter something", and storing typed backslash as backslash symbol
find the MyCProgram.c (case insensitive find) under the current directory and run the md5sum command against it
Find all regular .abc files under and below /the/path and rename them prefixing their names with "version_1"
List all files in the /var directory tree whose size is greater than 10 megabytes
display all files in the current folder which are not empty
Find all files/directories under current directory that were accessed more than 25 but less than 35 minutes ago
Find all files/directories named 'query' under current directory
Locate all *.txt files in the current directory tree
Print TXT record with server`s hostname from nameserver 'server'
Search the .java files from the /Applications/ directory tree for TODO lines
List all environment variables containing 'USER' in their name or value that would result in running a command with 'sudo env'.
Print a randomly sorted list of numbers from 1 to 10 to file "/tmp/lst" and outputs "-------" followed by the reverse list to the screen
set variable "uname_m" to machine architecture, ie. x86_64
Find all the files in entire file system with the extensions txt or doc, as well as any file larger than 5MB in size
Search the /myfiles directory tree for files whose names contain "blue"
split processed content of the file inout_file into pieces per 2000000 named as "out-prefix-NNN"
Print reverse lookup for IP address 72.51.34.34
display all file in the folder /dir/to/search except ".c" files
Cuts off last two parts from the path $dir, and deletes resulted folder if empty.
Find all files/directories with '.txt' extension under '/home' directory tree that are exactly 100KB in size
Make directory "/tmp/new"
Find recursively the latest modified file in the current directory
Calculate the md5 sum of hex byte 61
Find all file.ext files/directories under /home/kibab directory and print . for each of them
Change user ownership to `foo' for files with UID=1005
Find files that have been modified within the last month and copy them somewhere
Move all files matching case insensitive ".cpp" in the current directory tree to "./test/"
create directory /var/svn as user root
Find all empty folders in the current directory and below
Show file type information for files in /usr/bin
Move all files that contain "Subject: \[SPAM\]" to "your_file"
Find all directories in the current directory tree excluding hidden directories and create them in "../demo_bkp"
Find all files in the current directory tree whose size is greater than 1MB, and move them to the "files" folder
Find all directories under 'project' directory without going into subdirectories that do not match the POSIX egrep regex $PATTERN in their paths and are not empty
Gets IP addresses of all active network interfaces on host.
Unzip "bigfile.txt.gz" to standard output, search for patterns in "patterns.txt", and list the unique matches
Count the number of files named 'job.history' under '/data/SpoolIn' directory tree that match 'FAIL' in their contents
delete all the core files in the folder /prog which are bigger than 1KB
Search the current directory tree for regular files that were modified $FTIME days ago
display all the files in the folders /etc /srv excluding the paths /etc/mtab and  /srv/tftp/pxelinux.cfg
Find all files in the `sourceDir' directory tree
Search the current directory recursively for text files containing at least one character
Find all directories under minimum 1 level down the current directory excluding  directories (along with their contents) that start with a . (dot) in their names
delete all the empty files in the current directory only if they are ok and the user has the permission to delete them
find all the files in the entire file system whose size is greater than 20MB
Find all aliencoders.[0-9]+ files/directories under /home/jassi/ directory
find all the files in the entire file system that start with top
Create intermediate directoriy path2 as required and directories a..z
display all files in the folder /usr and its sub directory(do not search beyond the sub directory)
list all files in /home/bozo/projects directory tree that were modified within the last day
Prints last modified file in a current folder.
List recursively all files and directories in /var/www and pass the result to the `more' pager
Find all files/directories starting with 'readme' (case insensitive) under '/usr/share/doc' directory tree
Write every two lines in "infile" on a single line separated by a comma
display long listing of all normal/regular files in the current directory which have been modified in the last 2 days.
Search all files in the current directory tree whose names end in "1" for string "1"
Search the current directory recursively for regular files modified 2 days ago
Find all files in entire file system which are larger than 20000KB and show file name/path followed by its size
Print continuous characters '/' and '\' randomly from /dev/urandom
remove all the files in the folder "myfiiles" which have not been accessed in the last 30*24 hours
Find all files/directories that do not belong to any user under '/home' directory tree
Print a count of all unique lines in "ports.txt" sorted from most frequent to least frequent
find all files under the /etc directory and display IP address patterns in them
Display a dump of "file" as floating point values of double size
Search  in current directory downwards all files whose size is greater than 10 bytes .
Recursively finds all '*.pdf' files in a current folder and removes them.
Compress and display the original filename of every file on the system that is greater than 100000 bytes and ends in ".log"
Print amount of space available on the file system containing path to the current working directory in megabytes.
Remove all Thumbs.db files from the current directory tree
display all the files in the folder /home which have the setuid bit enabled
Descend into every directory under /etc and print the file/directory names with relative paths
display the commands to force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories
Find recursively all regular files changed within the last 5 minutes starting from directory b
Change permissions of all files ending ".php" under the current directory to 755 and print a count of modified files
Find all files/directores under /etc and run the file command on each of them
force delete all the regular files with the name "test.txt"
List all files from the current directory tree that were modified less than 60 minutes ago
Create a symbolic link named ".bash_profile" to ".bashrc"
Execute awk script "script.awk" on "File2" and "File1" and format output as a table
Find <fileName> files/directories under current directory
Find regular files in the current directory tree that have any executable bits set
find all the files in the folder "myfiles" which have not been accessed in the last 30 days
Print all directories under $root appending a : (colon) at the end of each path without descending into directories matching the pattern .[a-z]*
Reads content of bzip2 compressed files and processes it with awk utility.
Print a welcome message with the current user's user name
Find files that have a modification time of a day ago
Counts total number of only lines with alphanumeric symbols in all *.php files in a current folder and subfolders.
Move "$PHANTOM_JS" to "/usr/local/share" directory
Display a long listing of all the regular files owned by the user 'bluher' in the entire filesystem
Find *.css files in the current directory tree, skipping all directories that match pattern '*/lang/en.css'
Wrap standard input to fit in 10 characters per line
search for the regular/normal file 'myfile' in the folder /root excluding those that are present in the /root/work directory
Search the "test1" directory recursively for regular files
Find recursively the latest modified file in the current directory
display all files in current folder excluding current folder (.)
split the file data.csv into pieces per 100 mb named as data.tsv.NNN with digital prefixes
Find all files named 'foo' under your home directory and list them with confirmation prompt
Go to first directory specified in PATH which contains the command 'oracle'
Calculate the md5 sum of all *.py files in the current directory
Find all files whose names begin with 'Makefile' in the /usr/ports directory tree and count how many of them contain 'QMAKESPEC'
find all the perl files in /var/www ( case insensitive search )
Search the current directory tree for symbolic links to files matching pattern '*/test*'
Remove symbolic links and get absolute path of "${the_stuff_you_test}" and save to variable "DIR_PATH"
Find all files under current directory matching either of the patterns 'error.[0-9]*', 'access.[0-9]*', 'error_log.[0-9]*', 'access_log.[0-9]*', 'mod_jk.log.[0-9]*' in their names
Recursively change the group ownership to "laravel" in "./bootstrap/cache"
bind key "\x61" to insert itself
Find all 15MB files in entire file system
find all directory list which have empty list in /tmp directory .
Prints current directory name
delete all the files in the current folder
Find all files that have the SUID bit set
Find all *.jpg files under current directory and print only unique names
display a long listing of the files in current folder which have been modified in the last 60 minutes
split file "your_file" into pieces per 9 lines
Attempt to connect as root to localhost and copy /home/reportuser/dailyReport.doc to directory /root/dailyReports/20150105/ - this will normally fail because ssh won't accept root connections by default.
Print right aligned numbers from 11 to 24
Find all files in current directory that were modified less than 1 day ago excluding hidden files and put the output to full_backup_dir variable
List and sort all leaf directories (directories which don't contain any sub-directory) under current directory
Search the .py files residing in the current directory tree for "something"
Change to folder where the oracle binary is.
Find directories under maximum 1 level down the directory $dir with 100 permission that are owned by the user $username
Gets MAC address of 'eth0' network interface.
Print each line in "file1.txt" that is not found in "file2.txt"
Find all files/directories under current directory and print their paths
Search the "your/dir" directory for empty subdirectories
search for all the regular files that have been changed in the last 48 hours and sync these to another folder
Search for files/directories with the case insensitive pattern anaconda.* in /var/log
find  files which full path name is foo/bar under foo directory and print
Find files under /some/path that are not executable
Remove all files named tmp or ending in .xx that have not been accessed for seven or more 24-hour periods
Counts all files in a current folder and subfolders.
Report file system containing path to /dir/inner_dir/ disk usage human-readable.
display long listing of all files in the current directory whose size is 24 or 25 bytes.
Display 798 backwards
Counts lines in file fileName ignoring empty lines and lines with spaces only.
Execute "cat /tmp/iostat.running" every 10 seconds
display ten files in the current directory
Copy all ".xml" files in the current directory tree to "/new/parent/dir" preserving the directory hierarchy
Find directories named `doc' in /usr and below
Print crontabs of all users in system, skipping messages that some users don`t have crontab.
Recursively finds all files containing text 'OPEN' and prints folder where they are placed.
Find all directories in the current directory tree that do not have `execute' permissions for anyone
Prints file descriptor of executed built-in 'true'.
Remove all regular files under $DIR directory tree that were accessed more than 5 days ago
Find and remove all .mp3 regular files under the current directory and below
Find the files in the current directory that match pattern '*.ISOLATE.quantifier.txt' and move them to folder ISOLATE/
Change permissions of all regular files from the current directory tree to 644
Change owner and group of "script.sh" to "root"
Find all directories with permissions 777 under and below /var/www/html, and change their permissions to 755
find all the files in the folder ./machbook and change the owner of them to the user with id "184"
Search the current directory tree for regular files named `doc.txt' and print "found" for each of them
Prints calendar of February, 1900.
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days
Create intermediate directories as required and directory project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat/a}
Print the path composed of the current working directory and the directory containing "$0"
get all the files that are exactly 30 days old
display all directories in the folder "/myfiles"
Write output of "ls -lR /" to standard output and append to "output.file"
Print history with the first field removed
display all the jars in the current folder
Find all *.jpg files under current directory and print only duplicate names
kill all active jobs
Prints information about active network interfaces in system.
Copy file or directory 'gtest' from directory 'include' in current directory to /usr/include, preserving ownerships and permissions.
Lookup information of the current user
Prints top-ten list of most used utilities from history.
Find all files/directories under current directory tree whose paths match the regex 'filename-regex.\*\.html'
Sort a file 'file' preserving only unique lines and change the file in-place
Find files/directories that are owned by the user 'syslog' in entire filesystem
Find all files on your system that are world writable
search the entire file system for the file "jan92.rpt"
If variable "c" is a syntactically correct cron job, erase user's cron jobs and add "c" as the only cron job for user.
Count the number of lines in "myfile.txt"
Recursively finds string 'class foo' in all *.c files from current folder.
Search the current directory tree for symbolic links to files matching pattern '*test*'
Recursively copies 'include/gtest' to '/usr/include', preserving all attributes, and copying symlinks as symlinks, without following in source files.
Find all files/directories named 'query' (case insensitive) under current directory
Print the empty files/directories among empty1, empty2 and not_empty
Read a line from standard input into variable "dir"
Find all files under current directory and search for 'something' in those files
find all jpg files in the folder which are in the path "/201111/" and sort them based on name
search for the host "slc02oxm.us.oracle.com" in all the xml files in the current folder and display the files which has the matched content
Remove all files named "filename" from the current directory tree, ignoring directory "FOLDER1"
Split "/path/to/large/file" into files with at most 50000 lines and use prefix "/path/to/output/file/prefix"
Find all hidden files in the current directory
Remove files whose names match regular expression '^.*/[A-Za-z]+-[0-9]+x[0-9]+\.[A-Za-z]+$' from the current directory tree
display a long listing of all images with the name "articles" in the current folder
Get the base filename from variable 'path', similar to using the basename command.
Find all the regular files under current directory tree that have not been modified in the last 31 days and delete them
Find all 100MB+ files and delete them
Fix permissions for a group of files with given extension
display all the files in the file system which belong to the user with the id 1005
Join comma-separated information in 4 files - files must be sorted.
Search the current directory tree for files and directories whose names do not end in "exe" and "dll"
find all the files that have not been modified in the last 24 hours
Delete all regular files under current directory
Find files that were accessed in less than a day ago
Report file system inodes usage in human readable format
Find all regular files named 'Waldo' under 'Books' directory tree that is located in user's home directory
Add executable permission to "rr.sh"
Find regular files in the current directory tree that have executable bits set for the user and group but not for the other
Mount "/path/to/device" on "/path/to/mount/location" as a loop back device
Find all .txt files under the current directory and below
Find all files under current directory and set their permission to 775
Print the average time of 4 ping requests to "www.stackoverflow.com"
Print the top 10 commands with their use count
display all the files in the current folder which are present in the path "./sr*sc"
Move all files and directories matching "*.boo" in the current directory to "subdir"
Print timestamp as HH:MM:SS
Create a compressed archive named 'my_directory.tar.gz' with files inside directory 'my_directory' without including the directory entry 'my_directory' itself
find all files in the file system which have no user and no group
List all regular files under the current directory and below it
Show filename and filetype description of all PHP files in all directories contained in current directory whose name or filetype description includes "UTF"
create directory dirname with permissions 777
Search case insensitively for 'facebook', 'xing', 'linkedin', ''googleplus' in file 'access-log.txt', extract the matched part, sort them and print them by sorting them in asending order of the number of repeated lines
search for a word in all c files in the current folder
Save the absolute path of the directory of the current script to variable "DIR"
Silently and recursively change the ownership of all files in the current directory to "www-data"
Find all *.cpp files in the current directory tree that contain "sub" in their names
Sort file.txt ignoring the last 10 characters of each line.
Find all files under current directory and change their permission to 600
Login to "host" using identity file "id_rsa"
display all the regular files in current folder that belong to the user "tom"
Print first column of every line in every *.txt separated by a space
Write "error" to standard output
Print name of the block device containing the file system containing $path.
Copy all files in "/mail" to "/home/username" preserving the directory hierarchy and modification times
Replace all spaces (' ') with comma (',') in ${TO_IGNORE[@]}, append with '--ignore ' and save the resultant string to variable 'ARGS'
search for a word in all the regular files in the current folder.
Save the last modified time of file 'file_name' to variable 'STAMP'
Find all files that were modified later than ordinary_file in the current directory and its sub-directories.
split the file "file" into pieces per 2 lines
Find recursively all files under current directory tree that contain a colon in the filename
search the word "MySearchStr" in all the regular/normal files in the current folder and display the line number and the file name
Prints process tree of a current process with parents processes and id numbers.
Remove the regular files from the current directory tree that were last modified on November, 21
Set variable PacketLoss to first digit of percentage of packet loss occurring when pinging host specified by TestIP
Find all 777 permission directories and use chmod command to set permissions to 755
Recursively prints all files in a current folders, and searches "stringYouWannaFind" in file content ignoring case differences, and preceding found string with its number in file.
Sets 'globstar' shell option.
View history using "vim"
Display summary of each specified file in human readable form
Split the output of "tar [your params]" into files of at most 500 MiB in size and use prefix "output_prefix"
List all IP addresses assigned to current hostname, pausing for user interaction after each page.
Finds recursively all files not having extension .o in '/path/' that contain 'pattern', and prints matched strings with string number and file name.
Search appended data in "logfile.log" for "something" with a timeout of 3 seconds
Rename all directories under current directory by replacing all occurrences of 'Foo' (case insensitive) with 'Bar' in their names
Print file name without the last two extensions assuming the file name doesn't contain any other dots.
Find all directories under present working directory
Save number of lines with any-cased 'merge' from $COMMIT_EDITMSG file in 'MERGE' variable
Find all files/directories that start with 'screen' (case insensitive) in their names under user's home directory tree
Print the MD5 message digest of "/path/to/destination/file"
Find files that end in ".gz" and execute "awk -F, '$1 ~ /F$/'" on their unzipped contents
Remove all files with names like "vmware-*.log" from the current directory tree
find all the files that are modified exactly one day ago
find file which name like 'foo.*' in current directory.
Find all *.txt files of user Tecmint under /home directory
list regular file which file name end with '*.c' or '*.sh' in current directory
Show logged in users with idle time of each one
Print out the names of all directories in mydir recursively
show all the files in the entire file system which are bigger than 100MB
Rename all .png files, changing the string "_h.png" into "_half.png".
get md5sum of an iso file without displaying the filename, save value to 'md5' variable
Remove all *~ files under current directory with confirmation prompt
find all empty files
Print all non-hidden files in the current directory and its subdirectories
change the permission of all the files in the current directory to 664 and change the permission of all the directories  in the current folder to 775.
get the git user access
Remove files from the file system that are owned by nobody
Find all files/directories containing the case insensitive string something' in their names under current directory tree
display a long listing of all the "Trash" files in the folder /home
Print the base name of the current working directory
Search the .java files from the /Applications/ directory tree for TODO lines
Give all files in the /path/to/base/dir tree read privileges
Remove all spaces from standard input
Display the contents of "text"
Find every vim undo file under current directory
Find the total size of *.jpg files within the current directory tree
Remove all regular files from the current directory tree that were modified between August 10th and August 17th
Find all *foo files/directories under current directory
Search the .css files in the /starting/directory tree for ".ExampleClass"
Checks that 'monit' user is in 'www-data' group.
Split a file "file.tar.gz" into pieces named as "file.tar.gz.part-NNN" with size 1024 MB where NNN is a numeric suffix
Add directory "$HOME/Pictures" to the directory stack
Prints day of first Tuesday in a month.
Find absolute path of command with PID "$pid"
Find all regular files in current directory and /home/www directory
Find and remove multiple files such as *.mp3 or *.txt
Removes all empty folders under '/path/to/the/folder' path.
Search the current directory tree for the files with extension "trc" and list them if they are more than three days old
display a long list of all the files that are bigger than 10KB in current folder
Remove newline characters from "file.txt"
Find empty files under test directory
find files in /tmp directory that named are core and deletes them
Mount image "test" to loop device "/dev/loop0"
Make directory "/etc/cron.15sec"
Print each character of "abcdefg" on a line
find all the files ending with "mkv" in current folder
Find all files/directories under current directory which have read-write permission for owner and only read permission for group and others
search for files having python in filename
Find all files under /home/username/public_html/modules  and set their permission to 640
Find all files with the name "MyProgram.c" in the current directory and its sub-directories while ignoring the case of the file name.
Find all files under current directory and replace the match of the regex '^.*/S' with 'S' in every line of the output
Find all files/directories under /home/baumerf/public_html/ that were modified less than 60 minutes ago excluding error_log files/directories
Set read, write and execute permission for all (owner, group, other) for the files/directories in foldername directory tree
Compare the contents of "/bin" and "/usr/bin" line by line
Recursively change owner of all files in "folder" to "user_name"
Gets IP address of first listed active network interface in system.
ERROR - need to add -a or -r for recursive copy
Save the line number matching "}]" in lines starting with "item_1" to "item_2" in "itemlist.json" to variable "line_to_be_replaced"
Prints server name from SOA record for domain yahoo.com
Pushes current folder to the directory stack.
Find symbolic links under /etc/
Print the IP addresses for the current host name
Search the files in the current directory tree that are named "string to be searched" for "text"
Find all .txt files of user Tecmint under /home directory
Make directories "a", "b", "c", "d", and "e"
Send 5 pings to broadcast address "10.10.0.255" and print the unique IPs who responded
force delete all the files in the current folder expect xml files
display all the jpg files in the current folder and do not search in sub directories
Prints current month calendar, without highlighting of a current date.
find all js files which path does not contain ./node_modules/* nor './vendor/*"
display all file in the folder /dir/to/search except ".c" files
create directory saxon_docs
change the permission of all the directories to 755 in the current folder
View line 500 to line 1000 in gzipped file "bigfile.z"
display all the files along with their group name in the folder /home which do not belong to the group test
find all the html files that are acces in the last 24 hours in the current folder
Find all files/directories with '.xml' extension that start with 'log4j' in their names under '/cygdrive/e/MyDocs/Downloads/work/OATS Domain related/' directory tree, search for files that contain the string 'CONSOLE' in their contents, then search for the string 'ASYNC' in the matched files and display the matched lines along with their filenames
Find all files/directories matching the regex .*sql.*
List all files and folders in the current working directory
Find all files under /myfiles with read-write access for others
Find all directories under current directory excluding  directories (along with their contents) that start with a . (dot) in their names
Greps domain $domain IP name from long dig listing.
Find all *company* (case-insensitive) files/directories under /basedir with null character as the delimiter
Remove files matching pattern '*-*x*.*' from the current directory tree
Find all *.txt files/directories under current directory
find all directories named build under the current directory
find the path of a specfic video file in the current directory
display all regular files in current folder excluding search in the directories that are ending with "git,svn"
Number each line in "/etc/passwd" as right-justified zero padded to a width of 9
Print all unique directory paths under "dir1" compared to "dir2"
Change directory to the directory containing the "oracle" executable
Remove all tmp/*.mp3 files
Find all directories under path_to_dir directory
List all files under current directory matching the regex '.*\(c\|h\|cpp\)'
Save a list of all 755 permission files/directories under $dir directory tree to the variable 'files'
Recursively change owner to "$1" and group to "httpd" of all files in the current directory
find all php files in the folder  /var/www/
List all files and directories from the current directory tree
find list of all files with file permission , link , owner , group , reation time , size , file name
Find all 1US* files/directories under current directory
Make directory "certs"
find *.gif files under the currently directory and sub-directories and list them using the ls command
display all the files in the current folder which have been modified in the last 24 hours
Set the shell prompt to "host:pwd>"
Recursively removes $TMPDIR folder, prompting user on each deletion.
prevents curl from returning error (23) Failed writing body when grepping for foo
Find all files/directories under /home/foo/public_html/ that were modified less than 60 minutes ago
Print the date followed by the host name
Search for files in your home directory which have been modified in the last twenty-four hours
Searches for 'something' in a large file and prints the matching line
find all the text files in the current folder and display the results pagewise
Print the path to the pipe created for process substitution
Find all *.rb files/directories under current directory
Find all files/directories starting with 'app-' and ending with '.log' in their names and have been modified in the last 5 minutes
display the name of all directories in the current folder and do not search in sub directories ( mindepth ensures that the current folder name is removed from the output)
Find all regular files in the current directory tree and print a command to move them to the current directory
Find all *.sh files owned by user vivek
Recursively finds strings with the whole word 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.
Save in QUEUE_PIDS variable only pid numbers that stored in $NEW_PIDS variable
Interpret all lines containing an equal sign in myfile (usually, grab all variables from myfile into current shell)
Generate the obsolete 29 character Spanish alphabet and number each character
Count the number of lines in "/dir/file.txt"
Overwrites file $FILE with random content, then truncates and deletes it.
Searches through the /usr/local directory for files that end with the extension .html. When these files are found, their permission is changed to mode 644 (rw-r--r--).
Find all files under current directory matching the regex '.*\(\(error\|access\)\(_log\)?\|mod_jk\.log\)\.[0-9]+' in their paths
Create empty files (or update timestamps if they exist) with names matching each word in variable "correctFilePathAndName"
Print all files on the system owned by group `name_of_group'
Copy file header.shtml to directories dir1, dir2, dir3, and dir4
recursively change owner of the directory /usr/local to the current user
search for the regulars file starting with HSTD which have been modified yesterday from day start and copy them to /path/tonew/dir
List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory
find all the png files in the current folder which begin with the word image
search for the file foo.txt in the entire file system
Prints year-month-date format for given time
Copy /my/configfile to all empty directories of the $somedir directory tree
find & Substitute Only When the Line Matches with the Pattern Using sed
find all the php files in the current folder
Keep the last 4 ASCII characters (bytes) of a string.
Delete every second line from output of "seq 10"
Find all files under current directory whose file type description contains "image", display only path to each file.
Save number of lines in '/some/big/file' to 'LINES' variable
Find UTF-8 files with BOM
Create a symbolic link named "wh" to "$wh"
Remove everything within parentheses and substitute all non digit characters with a space from "1/2 [3] (27/03/2012 19:32:54) word word word word 4/5" and format the output as a table
delete all text files in the entire file system
Display a long listing of all the files/directories under current directory tree that are newer than the file 'Nov' by modification time
change owner and group of the file "file" to user "user" and group "group"
find all the perl files in the current folder, print0 is used to handle files with new lines in their names or only spaces
copy all the log files in the current folder which have not been accessed in the last 30*24 hours to the folder old
search for all the files which have not been modified in the last 6 months (180 days) in current folder and display the total disk usage of them
find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir
Find and show all files in the current directory tree that are exactly 2000 kB
Make directory "/data/db"
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%TY %p\n'
Delete all files under $INTRANETDESTINATION/weekly directory tree that were modified more than 32 days ago
delete all the normal files in the current folder and do not delete those in the subfolders
Resolve any symlinks in working directory, and go to resulting pathname.
Represent the current time as seconds since epoch and save it to variable 'TODAY'
Rename .jpg files to .jpeg in all level 2 subdirectories of the current directory
Find the 5 largest regular files in the Downloads folder of tecmint's home directory.
Remove the regular files from the current directory that were last modified on November, 22
Create ssh tunnel through "genja.org" connecting localhost port 4444 to "raptor.lan" port 22
Set variable OS to the name of the operating system, ie. "Linux"
Find and remove the .rhosts file in the /home directory tree
find all the files that have been modified in the last 4 days ( daystart is used to check files according to date i.e, all files modified from currentDay-4 00:00:00 to current day) and copy them to folder.
delete all the files in the current folder which do not belong to any user
find all the files that have not been modified in the last (24*7) hours.
Search the regular files of the current directory tree for string "stringYouWannaFind", ignoring the case
Get domain name from dig reverse lookup.
Find all executable files
Copies all files like "*FooBar*" under the current directory to the '~/foo/bar' directory.
find all files in home folder which have been modified after a timestamp
Print the full path of command "cc"
Get the sizes (and total size) of all files under dir2 directory
find all files in current folder which are less than 300MB
Change the owner of all files in the current directory tree excluding those who match "./var/foo*" to "www-data"
Find all *.tex regular files in maximum 2 levels down the current directory
Grab a gzipped text file from the web and display its decompressed content, interactively paging through the output.
Prints a process tree for each process of user 'username'.
delete all the log files in the current folder
Archive showing progress "sourcefolder" to "/destinationfolder" excluding "thefoldertoexclude"
display all text, mpg, jpg files  in the folder /Users/david/Desktop
Print the last 10 lines of "great-big-file.log"
Save IP address of your SSH session in variable "WORKSTATION"
Locate OGG files under the home directory larger than 100 megabytes
List all IP addresses assigned to current hostname, pausing for user interaction after each page.
Delimit standard input with ":" and display as a table
list all the files in the current directory which are of size 0 bytes.
Print a count of all unique entries in "ips.txt" with the most frequent results at the top
Recursively removes all files and folders named '.svn' in a current folder.
Recursively removes all files and folders that match pattern '/usr/local/{lib/node{,/.npm,_modules},bin,share/man}/npm*'
Print the paths of all files in the current directory tree that contain "abc" replacing "abc" with "xyz"
Set 444 permission to all regular files under current directory
Give all directories in the /path/to/base/dir tree read and execute privileges
Findx all files having text "texthere" recursively in a current folder, and prints only file names with matching strings.
Find files under /tmp that are larger than 10KB and smaller than 20KB
Print lines in the sorted contents of "second.txt" that are not in the sorted contents of "first.txt"
List all regular files from the current directory tree that were modified less than 60 minutes ago
find all the empty directories in the current folder and all its sub directories too
Display compter's hostname
find files in current folder using name patterns and sort the display the file names in the sorted order
Delete all files in the /myDir directory tree that were last modfied 7 days ago
Force create a symbolic link named "$pdir" to "$pluginpath" with verbose output
Copy the standard output of a "bash" session to "/var/log/bash.out.log"
count lines of C or C++ or Obj-C or Java code under the current directory
Read the first line of output from "du -s $i" into variable "k" in ksh
Find all files/directories under current directory and print them
Prints sizes of all top-level folders in a current folder with human-readable format and descending order.
Print the names of all files and directories in the current directory tree
Check if the contents of file "subset" is a subset of file "set"
Find the "param1" string in regular files under and below /var
Mount "device_name" on "mount_point"
Print lines 16225 to 16482 in file "file"
Find all symbolic links containg 'vim' in their names under '/usr/bin' directory tree
Find all files under /path/to/dir and change their permission to 644
Move all directories from the `sourceDir' directory tree to the `destDir' directory
Traverse the filesystem just once, listing setuid files and directories into /root/suid.txt and large files into /root/big.txt.
Finds strings with 'TEXT' from *.log files and prints all but first field from any space-delimited string.
Write output of "ls -a" to standard output and to "output.file"
Run command specified by $line, replace space (' ') with newline and save the output to variable 'arr'
Search the home directory tree for files last modified less than 2 days ago or newer than file "filename"
Search the current directory tree for all image files
Creates temporary file in a TMPDIR folder with name like tmp.XXXXXXXXXX.
Generates temporary file name with full path by template 'fifo.XXXXXX' and saves it to variable 'fifo_name'
Rename "blah1" to "blah1-new"
remove all "Foo*" files under current dir
find all the files that have been modified since the last time we checked
Removes all empty folders that ends with any-cased '*.bak' under '/Users/' path.
Print information of the root mount point
Finds matched text in defined path recursively, but not follows symlinks.
Convert Unix `cal` output to latex table code.
List all files/directories under /data1/Marcel which are greater than 524288 bytes and were modified or accessed more than 1 year ago
Find all *.gz files in the current directory and decompress them using gunzip
Find all files under /path/to/base/dir and change their permission to 644
List file information of the full path of command "c++"
Remount "/media/Working/" with a umask of 000
Search for all the files in man pages and return the manual page for grep
Find all files named 'aaa.txt' under current directory tree and display their contents
Force create a symbolc link named "/usr/local/bin/fpdf" to "/usr/local/bin/findpdftext"
List .c files in the current directory
Display list of files ending with '.txt' in the current folder to the terminal twice and output it to the text file "txtlist.txt"
find all the files in the file system which have been modified in the last 60 minutes
display list of all the C files ( fuiles with ".c" extension ) in current folder
Gets list of IP addresses of all network interfaces.
find all the files in the current directory which have been modified in the  last 6 days.
search for the file "job.history" in the folder /data/Spoolln and search for multiple patterns in the file and display the count of matched lines along with the pattern
Search the current directory tree for regular files omitting directory `omit-directory'
List all regular files from the current directory tree that were modified less than 60 days ago
Display a long listing of all files/directories that are bigger than 10MB under '/var/' directory tree
Find all directories under the current directory that is on the same filesystem, execute "/tmp/count_em_$$" with the directory as an argument, sort the result numerically from least value to greatest value
Calculate the md5 sum of all the file metadata in the current directory tree excluding ".svn"
Sort file pointed by variable $filename, removing duplicate entries but ignoring the last N characters of each line.
delete all the mp4 files in the folder /home which are bigger than 10MB
Enables shell option 'failglob'.
Run an awk program on every TXT file found in the current directory tree
Recursively search for all directories containing "foo" (case insensitive) under the current directory, renaming them to replace "foo" (case insensitive) with "Bar"
find al the tmp directories in the current directory and create a dump of it
Print numbers from 1 to 100
find all the cpp files in the current folder
Display the current directory tree except files or directories starting with "3rd"
change the permissions of all the regular/normal files in the folder "/path/to/someDirectory" to 644
Find all symbolic links under the current folder and below
Find all files called "INPUT.txt" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (somefile.tar) of all the files found
Delete files under $LOCATION that match $REQUIRED_FILES in their names and were modified more than 360 minutes ago
prune all the files in the current directory, only current directory (.) is the output
List all regular files in the current directory tree
Mount all filesystems in /etc/fstab
Make directory and parents as needed for the directory name of file "$f"
find all the text files in the folder /home/calvin which are atleast below 2 levels
split file input.txt into pieces per 1 line named output.NNNNN
List environment variables and their values, escaping all semicolons with a backslash.
Search directory /path/to/check/ for regular files
Display current system's kernel name, kernel release and version, and machine architecture
Find all files/directories named file1 under current directory
Find all regular files under $dir directory tree with name pattern provided by the first positional parameter and show only the $num'th line from each of those files
Search the /etc directory tree for symbolic links
Find all empty files under /tmp and below
list all files in /home/bozo/projects directory tree that were modified exactly one day ago.
search for al cpp files in current folder and display distinct parent directory of these files in sorted order
Prints the first N bytes of file.txt
Read a line from standard input with prompt "<Your Friendly Message here> : y/n/cancel" and save the response to variable "CONDITION"
Find all *.py files under and below the current directory and search them for "xrange"
Create symlinks to all  /home/folder2/*.txt files with the same name in current directory
search for the file "name_to_find" in the home folder
Search the entire file hierarchy for any file that begins with zsh and exists on the ext3 file systems.
Rename "new" to "old" and make a backup if "old" exists
search the file myfile.txt in the current folder
Move all regular files under current directory to ./newdir
Extract two semicolon-separated fields from specified strings, output them separated by a space.
Print the filenames taken by the glob pattern * with null character as the delimiter
Recursively copy all files and directories matching "*ela*L1*TE*" in localhost's directory /tdggendska10/vig-preview-dmz-prod/docs/sbo/pdf/ to /var/www/html/sbo/2010/teacher/ela/level1 on localhost connecting as ssh user "dalvarado", in batch mode (no prompt for passwords) preserving file permissions and timestamps, and without displaying progress information.
Display only line numbers listed in 'file_of_line_numbers" from file 'source'.
Create a symbolic link named "$SYMLINK" to "$ACTUAL_DIR"
Removes all files from current folder but 5 newest ones.
Make directories in "/TARGET_FOLDER_ROOT/" for each ".mov" file in the current directory tree
display all the files in the current directory excluding those that are in the 'secret' directory
Inserts "new line" after last occurrence of ScriptAlias in a file
Create a full path symbolic link "$newlink" from a relative path symbolic link "$origlink"
create directory log into home directory
Pass all the files from the current directory tree as arguments to a single 'echo' command
Search the /storage/sdcard0/tencent/MicroMsg/ directory tree for JPG files
Remove all files that contain the word GUI in entire file system
Find the files in the current directory that match pattern '*.JUKEBOX.*.txt' and move them to folder ./JUKEBOX
Search the home directory tree for files matching pattern '*.txt'
Print all files and directories in the `.' directory tree skipping SCCS directories
Overwirte file '/path/to/your/file' with random content, then overwrite with zeroes, and remove, showing progress while execution.
display all the regular/normal files in current folder
grep from bottom of file
Find all read only files in  /home directory
Search the /path directory recursively for TXT files
Find all *.$input_file_type files/directories under $source_dir with the null character as the delimiter
display all the files in the file system excluding all the ".c" files
Print "/tmp/myfile" starting at line 11
Prints sorted list of logged in users.
Overwirte file '/path/to/your/file' with zeroes and remove, showing progress while execution.
Delete all lines matching "pattern to match" in "./infile" and make a backup with suffix ".bak"
search for all the regular/normal mp3 files in the file system and move them to the folder /mnt/mp3
Save number of processors in system to 'NP' variable
Find all regular files under ${S} directory
Find files with group write permission and remove the permission
Measure the disk space taken up by all *.txt files in directory tree /home/d
display all the files in the user folder which have been modified after the files /tmp/stamp$$
Find all *.* files not within .git directory and run $SED_CMD -i "s/$1/$2/g" on each of them
Merge 10 already sorted files and display the result, pausing at each page of output.
Set permissions to 700 for every subdirectory of the current directory
Find all 'test' directories in the current directory tree and remove them
Delete all .svn files/directories under current directory
Remove all files on the system that have been changed within the last minute
display all the files in the entire file system
Find all directories under 'A' directory tree excluding paths containing the directory 'a'
Search for file "file" with minimum depth set to 4
Print content of all files found regarding seach options '[whatever]'
Search for all files in the /home directory tree that have the same inode number
Print pathnames of all files in the current directory and below skipping files under SCCS directories
For each line of the sorted output of both file1 and file2, print lines whose first field of file2 does not appear as first field of file1.
Unzip and untar "tarball.tar.gz"
Print the basename from a colon separated path 'a:b:c:d:e'
Print numerically sorted list of unique strings from 'ip_addresses' file, with number of occurrences of each string.
Print NS record for domain 'domain.' from 8.8.8.8 nameserver
find all the files ending with ".coffee" in the current folder and search for the first occurence of the word "re" in each line
display all files in the directory "dir" which have been changed in the last 60 minutes
search for the word LOG in all the files in the folder ~/jsmith
Change the timestamp of symbolic link "somesymlink" to current date/time
Changes the group of defined file.
Find all files/directories named 'photo.jpg' (case insensitive) under current directory tree
Make directories "Labs/lab4a/folder1", "Labs/lab4a/myfolder", and "Labs/lab4a/foofolder"
Find all or single file called FindCommandExamples.txt under / directory of owner root
Print only second from the end field from slash-separated string in file 'datafile'
find all the text files in the home folder
Print content of 'file' file reverted characterwise
Request MX record of 'example.com' domain, and filter out all comment strings
Copy an entire file structure, creating empty files in the copy instead of copying the actual files.
Print '-okdir is an action so an implicit -print is not applied' for each file/directory found by the name 'file' under current directory tree
list regular files under the current directory ending in .mbox putting a null between each file found
Print amount of space available on the file system containing path to the current working directory in megabytes.
Get the total size of all files under dir1 directory
Search for files that were accessed less than 5 days ago.
Archive "blanktest/" to "test/" deleting any files in the destination not found in the source
count amount of jobs running
Find all Makefile's in the current directory tree and look for line 235 in each of them
Print each unique entry in "ip_addresses" followed by a count
Finds users with X session in system and puts the result in USERS variable.
Print each logged in user's full name
Prints list of folders containing '.git', searching recursively from a current folder.
Move all *.data files/directories in $S directory to $S/data/ directory
Find files/directories that is under group 'root' or have no group and set their group to 'apache'
Calculate md5 checksum of theDirname
Print content of each file under the current directory followed by that file name
Find all *.html files under current directory and for each file replace the first occurrence of STRING and previous lines with the content of common_header file
Remove all files with a txt extension under current directory
find all the regular/normal files in the current direcoty which have not been accessed in the last 30 days.
Search the home directory for OGG and MP3 files
Replace all instances of "string" with "longer_string" in file "input.txt" and re-align
Print file type of the executable file of command "python"
Print all files/directories with their sizes under $WHATEVER directory tree
Count the total number of lines in all HTML files under /usr/src that contain string "foo"
search for all the regular files in the current folder and display the contents
List the current directory recursively ignoring the "dir1" subdirectory
Print IP addresses of the host name
Print the file system "file/goes/here" is on
Prints processes with 'MDSImporte' in name, cutting off  lines longer than screen width, exiting from less after end of output and saving printed lines on terminal after exit.
Read a line from standard input into variable "password" without echoing the input
Merge content of decompressed files "$part0", "$part1", and so on
View lines 116 through 120 of history
Print pathname of a file that is connected to the standard output of the command "yes"
cope *.mp3 files to /tmp/MusicFiles
Find all files named 'file' in 1 level down the current directory whose status were changed more than 1 day ago
Find all files with '.jpg' extension in the current directory ignoring sub-directories and archive them to a file named jpeg.tgz
Find all files and directories whose names end in ".rpm" and change their permissions to 755
Print second field from semicolon-seprated line <line>.
change the ownership of all regular/normal files in the current directory after users confirmation
Remove all .mpg files in the /home/luser directory tree
Find all broken symlinks under current directory
Remove all non-hidden files in the current directory tree
Remove the last file extension from standard input
Make directories as needed in "dest" for every directory found under "src/"
Merge file1 and file2 by outputting all lines where the first comma-separated field of both files matches, followed by extra fields in file1 and those in file2
Search for 'keyword' in all javascript files under current directory tree excluding all paths that includes the directory 'node_modules'
Find all files/directories with '.log' extension whose names start with 'app-', have been modified in the last 5 minutes and show the first one found
delete all normal/regular files in the current folder which are empty
Print list of disk and mountpoint of disks matching "/dev/sd*"
Update timestamps of all files and directories under directory /path/to/dir.
Find all directories under current directory
long list al the files in the current directory which have read permission to the group
Find all files/directories that are not newer than Jul 01 by modification time
Find all directories under current directory
Find recursively regular files in the current directory tree
Report file system containing the current directory disk usage
convert epoch second timestamp to date
Print common lines in "file1" and "file2"
sort and display the unique lines display the contents of all the files that have been modified in the last 91 days and not in the last 2 days
Recursively search for all files not ending in ".xml" under the current directory, append ".xml" to the end of each file name
Print the sizes and names of all TXT files from the current directory tree
Display the mimetype of "filename"
Show the value of variable "list", discarding consecutive duplicates and adding number of occurrences at the beginning of each line.
Find all symbolic links under '/proc/$pid/fd' directory tree with name pattern '$save_path/sess_\*' and update their timestamps
Find all files/directories under current directory tree that belong to the user 'tom'
find all the text files that have modified in the last 2 days and not modified today
find files which full path name like '*/*config' at current directory and print
Find all broken symlinks under current directory
Finds recursively all folders named 'a' within current folder and removes only ones without files and another folders within.
Change permissions to 755 recursively only for directories
Copy all files and directories in "/home/" to "/newhome" preserving directory hierarchy and modification time
Search my_folder recursively for text files containing "needle text"
ssh into localhost on port 10022
Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree and modify them in-place
Count number of A records of domain '$domain' on nameserver '$server' and save value in 'result' variable
Search the entire file system for any file that is writable by other.
find non-hidden files (ones that do not start with the period "." chartacter) that were are modified in the last 15 minutes.
Determine if /full/path exists on a mounted file system.
Print file system disk space usage in posix and human readable format, format as a table
Calculate the md5 sum of "logdir" and print only the hash
Check md5sum of directory /path against the checksum saved in file 'file'
Display the host's ECDSA fingerprint using the md5 hasing algorithm.
create a link to all the html or htm files in the current folder which have been changed in the last 30*24 hours
Find all Perl source code files
Replace all occurrences of foo (case insensitive) with bar in all *.css (case insensitive) files under %s directory
force delete all the files which have not been accessed in the last 240 hours in the temp folder
Find files with size more than 200557600B and which are more than 2 days old under  ${userdir}/${i}/incoming directory
find all the text files in the file system and search only in the disk partition of the root.
find all regular/normal files in the folder "myfiles" which have read and write permission to the other users
unsafed rm all file which name start with '#'
Find all Read Only files
Make a copy of file1 in dir1, dir2, and dir3.
Remove trailing white spaces from all *.rb files under current directory
Find all files with name "file.ext" under the current working directory tree and print each full path directory name
Remove all files with names like "vmware-*.log" from the current directory tree
display all files in the entire file system excluding the directories /proc,/sys,/dev and those files which are writable and which are not symbolic links and which are not sockets and which do not have the sticky bit set
Compare files in "/tmp/dir1" and "/tmp/dir2", treating absent files as empty and all files as text
Find all directories in the current directory tree
display the name and size of all the regular/normal files  in the current folder which are bigger than 50MB
display all the files in current folder which have been changed in the last 24 hours
Search the system for files whose names begin with letters 'a', 'b', or 'c'
Find all the SUID files in the current directory tree
Display source and mount point of the file system containing /some/path.
Print percents of the space used on the file system containing path to the current working directory.
search all the lines that start with the word malloc in the files ending with .c or .h or .ch
Copy a file xyz.c to all the .c files present in the C directory and below
Interactively display all lines containing 'word' in all files whose name ends with .properties in the current directory, waiting for user input after each page.
Interpret backslash sequences and delete whitespace characters in variable $FOO and save the result to variable 'FOO_NO_WHITESPACE'
Recursively change the owner of all files in "~/tmp" to "$USER"
find all text files in user/directory/ and display the last line
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories
Search the current directory tree for symlinks whose contents match pattern "*sysdep.c"
Find all files/directories under current directory following symlinks if needed
Prints help on 'cp' utility.
Format the date represented by time string @1267619929 according to default format and print it
Search all regular files in the current directory tree for "string"
find all the config(.conf files) files in the folder /home/pat
Make directories "foo/bar/baz" as needed and do not cause an error if it exists
Force delete all the regular/normal files in the current folder and do not search in the sub folders   (print0 is used to handle files which have newlines in their names or files with the name only as spaces )
Write "\n/usr/local/boost_1_54_0/stage/lib" to standard output and append to "/etc/ld.so.conf"
delete all empty files in the current directory ( empty file = size 0 bytes )
Change permission to 755 for all directories under $d directory tree
find all empty files in home directory
show all regular/normal the files in the current folder whose size is bigger than 0 bytes excluding everything
search for all xml files in current folder and display them
Search the current directory recursively for regular files last changed more than 2 days ago
find all ".flac" files in current folder starting with "cmn-"
create a compressed archive with files newer than 1st of January 2014, 18:00:00.
display all the html files in the current folder excluding search in the path ./foo
Find all files/directories under /path/to/dir and set directory permission to 0755 and file permission to 0644
SSH into "localhost" with forced pseudo-terminal allocation, execute "$heredoc", and save the output to variable "REL_DIR"
Print the names of all hidden regular files from the current directory
Print a sorted list of the extensions of the regular files from the current directory tree
Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=en_US.UTF-8
Print reverse lookup for adress 127.0.0.1
Removes any empty folder that matches pattern ed*.
Show the current UTC date in '%Y-%m-%dT%k:%M:%S%z' format
display all directories in current folder and do not search in sub directories
search for all the files in the current folder which have spaces and force delete them
Search directory /Users/david/Desktop/ recursively for regular files with extensions .txt, .mpg, .jpg
List the current directory recursively ignoring ./src/emacs/ and all its contents
Find all files/directories under current directory that match the case insensitive regex ./\(RT\|ED\).* and show several lines of output from the beginning
find all the log files in the file system
Find all the files which are accessed in last 1 hour in entire file system
Join comma-separated information in 4 files
split compressed content of the file www into pieces per 1073741824 bytes named as "backup.tar.NNN"
Print a count of case insensitive duplicate filenames in the current directory
list all js files under currect directory exculde the directory which path contain "/path/to/search/exclude_me" or name isexclude_me_too_anywhere
Search the current directory and all of its sub-directory for any PDF files.
Numerically sort file "file.dat" by the second word of each line and output from greatest value to least value
Removes all files from current folder but 5 newest ones, ignoring folders in a files list.
Delete all __temp__* directories under maximum 1 level down the current directory tree
Change owner to "root" and group to "www-data" of "/foobar/test_file"
Find all files/directories named 'pattern' under current directory tree
Mount partition with label "WHITE" on "/mnt/WHITE"
find all headers file *.h in /nas/projects directory
Recursively change "/usr/local" owner to the current user and group to admin
show all the files in the current folder excluding those from the directories whose name starts with "git"
Compare each file in "repos1/" and "repos2/", treat absent files as empty, ignore differences in whitespace and tab expansions, and print 3 lines of unified context
Find all files under current directory that were modified less than 1 day ago
change the permissions of all regular/normal files in the current directory, print0 is used for handling files with newlines in their file name
Change all files in the current directory tree to owner "xx"
List all files/directories under current directory
SSH into "hostname" on port 22 as user "myName"
Find all files/directories under current directory that match the case insensitive regex .*/\(EA\|FS\)_.*
find all the text files present in the current directory excluding the search in certain paths.
Show ls's detailed output for all files named "something"
Search for a pattern "can't" in all the files with the name "file-containing-can't" in the current directory tree
Find all files/directories in directories/files taken from the glob pattern '/folder/path/*' recursively that have not been modified in the last 2 hours and delete them
Find recursively all Python files in the current directory tree and count the number of lines in them
Report available space on the file system containing /tmp in kilobytes.
Print full path of command "python"
display all instances  of the file tkConfig.sh in the folder /usr
find all the files in the home folder which have been modified today
Set the 'xtrace' shell variable
Find all files in current directory excluding hidden files, archive them and put the output into variable  full_backup_dir
display all the files in the home folder which have read permission to the user
list all files in the current directory recursively
find all the files in the file system which belong to the user "pat" and with the name "dateiname"
find files in $HOME ending in "txt" or "html" and case insensitive search for the word "vpn"
Print current date as epoch seconds
Find files in the /var/log folder which were modified modified 2 weeks ago
Send Output From Find The Find Command To A File
Find all files whose names begin with 'Makefile' at the /usr/ports directory tree's level 3 and count the number of lines with NOPORTDOCS or NOPORTEXAMPLES in them.
Find all files/directories with 755 permission under current directory tree
Compresses all files in a current folder (not recursively).
Find all the files whose name is FindCommandExamples.txt and contains both capital and small letters in / directory
Find all files with '.txt' (case insensitive) extension under $dir directory non-recursively and sort them numerically
Find all SGID files
show all the regular/normal files in the folder /home/user/demo
Recursively change owner and group to "$JBOSS_AS_USER" of "$JBOSS_AS_DIR/"
Remove everything in a current folder without prompting.
Print only printable characters from "/dev/urandom"
List in detail all *.txt files in the current directory tree, omitting paths ./Movies/*, ./Downloads/*, and ./Music/*
Run 'somecommand' in an environment without the FOO variable.
find all the files that have been modified in the last 12 hours
Change file owner and group of "/path/to/yourapp" to root and print a diagnostic
find  symbolic link file that name match  '*sysdep.c'
Find all files in the home directory tree that are owned by another user and change their ownership to the current user
Find all *.rb (regular) files under current directory
find all files in and under the current directory that have read, write and execute permissions set for all users.
Forcefully delete all files in the current directory that begin with spam-
Dump "/dev/ttySomething" in both hex and text
ERROR - Probably means -pgoDt (capital D)
Make directories "a/b/c" as needed without causing an error if it exists
Print the line with most consecutive repeats prefixed with its count from standard input
Check all .txt files whose names may contain spaces whether they contain "needle"
File 'mydatafile' has a number on each line, display the sum of these numbers.
Enables shell option 'compat31'.
Find files on the system modified more than 90 minutes ago
Greps DNS zone transfer info on domain localdomain.com from NS @dc1.localdomain.com, finds strings with any-cased word 'Lawler' and strips last letter from each string.
find all readme files in a folder
Find all *.foo files under current directory and print their contents
Print all logins formatted as "The user USER is on TTY" where USER is the user name and TTY is the login terminal
find the file "httpd.log" in the folder /home/web-server/ ( case insensitive search )
Find all php files whose name is tecmint.php in a current working directory
Change permissions to 644 of multiple files with permissions 755
find directory names starts with 'bar'
Find files named core in or below the directory /tmp and delete them, processing filenames in such a way that file or directory names containing single or double quotes, spaces or newlines are correctly handled.
Search all files in the current directory tree whose names end in "1" for string "1"
Count the number of unique file extensions in the current directory tree
Display the named characters in "line1\r\nline2"
Change the owner of all files in the directory tree "dir_to_start" excluding file "file_to_exclude" to "owner"
display all the files in the current folder which have been accessed in the last 60 minutes
Search directory /Users/david/Desktop/ recursively for regular files
Find all .txt files except README.txt
Compare text "hello" and "goodbye" line by line
move files accessed more than one day ago to directory TMP
Find all directories under 'test' directory tree that match the regex '.*/course[0-9.]*' in their paths
Enables shell option 'lastpipe'.
Search the current directory tree for regular files modified within the past 24 hours whose names do not end with ".DS_Store"
Make directory "~/public_html"
Change directory to the real path of the directory containing the current script
Search for files/directories named 'fileName.txt' under '/path/to/folder' directory tree without traversing into directories that contain the string 'ignored_directory' in their paths
Find writable regular files in the current directory
Prints total number of lines of all *.c files in a current folder and subfolders.
List the full path of each directory in the current working directory
Find all files/directories under current directory that were accessed 30 minutes ago
Print a list of all duplicate case insensitive file paths in the current directory tree
Unzip and merge all "small-*.gz" files into files of 2000000 lines
Compress "my_large_file" with gzip and split the result into files of size 1024 MiB with prefix "myfile_split.gz_"
search for the file "myfile" in the current folder and display all errors apart from permission denied error
Sets shell option 'dotglob'.
Find regular files with permissions less than 111
Find links to file path/to/foo.txt
find case-insentive example.com file, omit ./beta path
find all the files from root folder which have nogroup or noname and dispaly their details.
Archive "/path/to/files" to "user@targethost:/path"
Create intermediate directories as required directory{1..3} and subdirectory{1..3} and directories subsubdirectory1 and subsubdirectory2
Display variable 'var' without leading and trailing whitespace.
list broken symbolic links under "somedir"
Find all empty files in home directory
search for the file filename in the entire file system
Search "mygzfile.gz" for "string to be searched"
Show manual of the find command
Recursively find files in the current directory with a modification time more than 7 days ago, save the filenames to "compressedP.list", and compress no more than 10 at a time
Merge data in file1 and file2 where second field is common in both files
Find all regular files in the "$dir" directory
Find and remove all .core files
display all regular/normal files in the current folder which are accessed in the last 7*24 hours
find al the files that are modified exactly 2 days ago
Look in the current directory and below for all files whose names begin with either "my" or "qu"
Find all xml files under current directory and archive them to .bz2 archives
Print differences between the sorted content of file $1 and file $2, executing 'diff' with options from "${@:3}" array slice
Opens gcc info manual and selects "option index" menu entry.
Find empty files and directories
Search the current directory tree for all files except SVN ones
Save the user name of the current user to variable "whoami"
find all files in the file system whose size is exactly 2KB
Add content of "filename" to the existing cron jobs of user "user", without removing the previously existing cron jobs.
Saves list of logged in users in system together with 'USER' header in the 'a' variable.
Print the user name of the user running sudo
Find all *.txt files/directories under current directory
Move all files from the `sourceDir' directory tree to the `destDir' directory
Find all files in maximum 2 levels down the current directory
Find files in two different directories (esofthub and esoft) having the "test" string and list them
display all the ".c" files which have been modified in the last 10 minutes
Find broken symlinks
Find the largest 10 directories under current directory
Set permissions to 700 for directories under media/
Archive the entire file system into tarfile.tar.bz2
find dirctory files which modification time is  7 days ago
Print content of 'whatever' file
Display all files in a folder
change the permissions of all the files ending with "fits" in the folder "/store/01" and save the output file names to a log file
Search for "CONFIG_64BIT" in gzip compressed file "/proc/config.gz"
Find SGID files
Find all *.ogg files under the home directory ignoring the case
Find all files and directories starting from the current directory
display all the files in the file system which are smaller than 20 bytes
display all files in current folder
Recursively finds all files and prints only names of files that contain "word" and suppressing error messages .
split a file "list.txt" into pieces per 600 lines
Recursively removes all empty folders under current folder.
Print file type of the command "c++"
use find -exec with multiple commands regardless of their success or failure
Removes 55, adds a 10-digit line number, and rearranges the date for each line in "input" on OSX
Find all regular *.css files
Recursively print all files and directories in the directory tree "$absolute/path/of/your/dir"
Print the contents of "file" with " | " appended to each line
Find the largest original ".gz" file in the current directory tree
Find file `Chapter1' on the system
Send an audible ping to "10.100.3.104"
Find all files/directories under $TARGET_DIR directory tree matching the posix extended regular expression \".*/$now.*\" (where $now is a variable) and save the output in file $FILE_LIST
Show all previously typed shell commands, waiting for user interaction after each page of output.
find all files in current folder which have been accessed exactly 10 minutes ago
Remove all .txt files in and below the current directory
Find recursively the latest modified file in the current directory
Delete all files with ' .o' extension in the entire filesystem
Copy the directory hierarchy from "original" to "new"
Find all files/directories under current directory and set their permission to 775
Print lines that only unique ones in 'set1' and 'set2' files
Find all symbolic links under '/some/directory' tree
Find all regular files named postgis-2.0.0 under your home directory
Search *.txt files under and below /directory/containing/files for "pattern_to_search"
Print the column count of compressed file "$file"
Find all HTML files starting with letter 'a' in the current directory and below
Send SIGTERM signal to last process sent to background by the current shell.
remove all files that's older than 30 days in '/tmp'
display list of all the files in the current folder which are empty.
Find all sample* files/directories under current directory and print 'program {}-out {}' where {} will expand to file paths
Create intermediate directories "tmp" as required and directories real_dir1 and real_dir2
Delete the oldest file with '.tgz' or '.gz' extension under '/home/backups' directory tree
Copies file 'file.txt' to each top-level directory in the current directory.
Find all files/directories under test directory
simulate a full login of user root
Find all files under $source_dir that match the regex .*\.\(avi\|wmv\|flv\|mp4\) in their paths and print them with null character as the delimiter
Move all files that contain "Subject: \[SPAM\]" to "DIR"
delete all files that have the extension "bam" in current directory
Gets the groups these users belong to.
Remove all CVS directories from the current directory tree
Find all the *.c files at any level of directory Programming under any 'src' directory
Change the owner to "root" and group to "specialusers" of "dir1"
Print the average time of 4 ping requests to "www.stackoverflow.com"
list all regular files which path is not dir1 or dir2
Find all files which  are accessed after modifying /etc/passwd files.
Remove empty directories from directory tree /srv/${x}
Find all files under $x directory and set read-write permission for owner and group and no permission for other for those files
Search for the regex '->get(\|#hyphenate' in all files with '.pl' or '.pm' extension under '/users/tom' directory tree and only show the filenames
Recursively copy "emptydir" to "destination/newdir"
Search for 'class Pool' in all *.java (case insensitive) files under current directory
Remove files under current directory that contains white space in their name
Find all files/directories under current directory tree that are newer than backup.tar.gz by modification time
Report file systems disk space usage pretty formatted.
Login to "$HOST" and create file "$FILE_PATH" if it does not exist
Read a line from standard input with prompt "Are you sure? [Y/n]" and save response in variable "response"
Find all directories with 755 permission and change the permission to 700
Print a sorted list of the extensions of the regular files from the current directory tree matching pattern '*.???'
Find all the files/directories in the entire filesystem that do not belong to user 'wnj' and are not newer than the file/directory 'ttt' by modification time
Instantly kill all processes whose command is 'myprocess'.
find all text files in the current directory and compress them to a cpio file
Continuously send "y" as input to "cat" which outputs to "more"
Mount "/windows" using /etc/fstab entry
Copies ${FILE} to COLLECT folder with unique name formatted like 'job_XXXXXXXXX'.
Strips last section from the path $pathname, and prints basename of the rest part.
Perform a white space safe search for all files/directories under current directory
Exit the shell immediately if an error is encountered
Remount "/dev/stl12" on "/system" as read and write
Find all files owned by group `group2'
List the files from the current directory tree that contain lines matching regular expression  '^Subject:.*unique subject'
Force create a symbolic link named "$*" to the canonical absolute path of "$1"
Go to directory specified by variable "somedir", but replacing leading ~ character by actual home directory.
Show system information: kernel name, hostname, kernel release and version, machine architecture, processor type, hardware platform, and operating system type.
Execute /usr/bin/find with $* arguments where current directory is the first argument
Find all files and directories starting from the current directory and excluding hidden files and directories
Compare sorted files 'f1.txt' and 'f2.txt' and print in three columns strings unique for first file, second file, and common ones
Search for regular file foo ignoring case
Find files under /some/path that are not executable by the owner
Replace "version.old" with "version.new" in the symbolic link target of "SomeLibrary"
Disables overwriting existing files
Get a list of directories owned by group ID 100
find all the files in the current folder and display those that are not present in the list "file.lst"
Find all files in current directory that were modified less than 1 day ago excluding hidden files  and archive them and put the output into the variable file_changed
Recursively changes group ownership of everything in 'files' to 'apache_user'.
Remove a leading "machine" from the system host name and save the result to variable "machnum"
Clean up all zombie processes by instantly killing their parent process with SIGKILL signal.
Find regular files under / that contain "stringtofind"
Mount a partition in "$IMAGE" with offset "$OFFSET" to "media/$DEST" as read only using a loop device
Remove all directories called "test" from the /path/to/dir directory tree
Update timestamps of all files (not directories) under current directory. Also works on older Unix systems with obsolete 'find' command.
Search the current user's home directory and its sub-directories for any file that was modified less than 2 days ago or was modified after filename was last modified.
Determine DISPLAY variable for the session when logged in via SSH
Prints long listing of the current directory and top-level directories within, sorted from oldest to newest, with appended indicators.
Find *.o files with permissions 664 in the current directory tree
display all php,xml and phtml files in current folder
show all the ".flac" files in the current folder and do not search in the sub directories
Search the entire file hierarchy for files larger than 100 megabytes and delete them.
display all the files in the kat folder
Use 'less' to nicely display control characters from the outupt of 'grep'.
find all the files which have been modified in the last 15 minutes excluding hidden files.
display all the files in the current folder
Copy the current directory tree to '/path/to/destination/dir' preserving permissions, timestamp and ownership
Find all files/directories case insensitively containing 'xt' in their names under '/etc' directory tree
Find files/directories with exactly read,write and execute permission for all (owner, group and others) under /path
Search directory trees /usr/local/man and /opt/local/man for files whose names begin with 'my'
Search for aaa in all files under current directory and count the number of matches
Change permissions of all files ending in ".php" under the current directory to 755 and print a '+' for each file
find md5sum of string 'hi'
Read a line from an interactive shell's standard input into variable "message" without backslash escapes and prompt $'Please Enter a Message:\n'
Find all files under and below the current working directory with the word California in the file (case insensitive), and count the number of lines in the output
List ".java" files that have the same contents
Calculate the md5sum of each ".py" file under "/path/to/dir/", sort the output, and calculate the md5sum of that
List regular files in current directory with read, write and execute permission for all users and also show the permissions
Copy *.mp3 files to /tmp/MusicFiles
Delete all in the current directory tree
Find all Makefile's in the current directory tree and look for line 235 in each of them
change html files to mode 644
Exclude directory from find . command
Rename all *.txt regular files in the current directory tree to *.abc
Execute /usr/bin/find with $* arguments
Set permissions to 644 for all regular files under the current directory tree that have permissions 755
Search the current directory recursively for regular files last modified less than 2 days ago
Print the list of files in the current directory tree skipping SVN files
Set up a local SSH tunnel from port 80 to port 3000
Move all files including hidden files in "/path/subfolder/" to "/path/"
long list all the files in the curent folder starting with "Tes"
Print the last line of the alphabetically sorted lines in file "set"
Find all files/directories under '/etc' directory tree that have been modified after '/etc/motd'
Search the /mnt/raid/upload directory tree for files that have not been modified within the last 5 days
Remove from the current directory tree all the regular files which have a dot in their names and contain string "<img-name>-<width:integer>x<height:integer>.<file-ext> syntax"
change the extension of all the files in the current folder to html excluding those html files and those which are present in another disk partition
Removes first and last parts of path 'test/90_2a5/Windows' and prints the result.
Find all files larger than 20000k
create directories a b c d e
Find all *.txt files/directories under current directory discarding 'Permission denied' errors
Display bash function definition of "foobar"
Recursively copy all ".txt" files to "user@remote.machine:/tmp/newdir/"
Gets IP address of 'en0' network interface.
Rename "fghfilea" to "jklfilea"
Display the sizes and filepaths of all files/directories with '.undo' extension under current directory tree
split content all files file1..40000 into pieces per 1445 lines named as outputprefixNNN as digital prefix
Remount subtree "/outside" to "/inside" as a bind
find regular which case-insensitive name is foo in current directory
Move all files in "/path/subfolder" to "/path" without clobbering any destination files
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them
Change directory to "$dir1" and resolve any symlinks in the resulting path
Assign permissions 644 to files in the current directory tree
Count number of users logged in
Move all files/directories under current directory to ~/play
Send at most 3 ping requests to "8.8.8.8" with a timeout of 3 seconds on interface "eth9"
Remove all files from the system whose path names contain "GUI"
Unzip and expand tar archive "compressFileName"
search for all text files in the folder /home
Find all files/directores under /etc filter them by searching for 'test' in their name and run the file command on each of them
SSH in server 'server' as user 'user' with X11 forwarding disabled
Search the home directory tree for video files
Write "foo" to the real path of the current command's standard input
Find all directories named '.texturedata' under '/path/to/look/in/' directory tree
Recursively removes all files like '*.r*' in current folder and removes folders with such files if they become empty.
display all regular files in the folder image-folder
Search all files and   directories either of the directory /home/oracle and  /home/databse which  contain the "zip"  anywhere in the files or directory name .
Find all files that belong to group root
Extract number from $filename of the form "something_12345_else" and set the variable "number" to this number.
search for the folder .dummy and remove it from the folder "Test folder"
Unzip all ".gz" files in the current directory tree to their respective directories
Finds strings matching pattern '^fields=\\\|^var=' in a 'set' output.
Pipe content of 'somedata.txt' file to the input of command "$outfile"
search for the file test2 in the current folder
find all the files in the folder /home which are exactly of size 10MB
Find all files/directories under /home/baumerf/public_html/ that were modified less than 60 minutes ago excluding *.log files/directories
find all files that names are filename and open in nano text editor
Create a gzip archive file ($tarFile) of all *.log files under $sourcePath
Delete all files in directory $DIR that have not been accessed in at least 5 days
Move "file1", "file2", "..." to "target" directory
Display the last slash-separated part of path, in this case "example".
Count the number of lines in "testfile" wrapped to fit in a width of "$COLUMNS" characters
Run 'chmod 0755' on all directories in the current directory tree
Wrap each line in "file.txt" to fit in 80 characters
List all files/folders in current directory by separating them with spaces
display all the regular/normal files in the current folder excluding the files with the name mmm
Find all file paths under current directory, perform a reverse sort and show first 10 file paths with their status change time
remove all text files from the current folder. Print0 is used to handle files whose names have only spaces or those files which have newlines in their names
List all file paths under the current directory with case insensitive name ".note" in reverse alphabetic order
extract "passwd.tar.gz" with verbose output
Split "file.txt" excluding the first line into files with at most 20 lines each and a prefix "split_"
Recursively search for all files with names ending with "_test.rb", renaming them to end with "_spec.rb", using at most 1000000 characters per command.
Search the home directory for filenames starting with "xx" except for "xxx" files
Silently read a line into variable "passwd" with prompt "Enter your password: "
find all the ".sh" files in the current folder ( case insensitive search)
Find a directory named 'project.images' in the entire filesystem and show it in long listing format
List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory
display all the files in the current folder that end with ".ksh"
Find all files/directories that were modified after February 1st under '/usr' directory tree
find all CSS files that do something with your HTML ID #content
Print file size with the file name
recursively change owner of the directory testproject and all files into it to user ftpuser
print the names of all of the unstripped binaries in the /usr/local directory tree. Builtin tests avoid running file on files that are not regular files or are not executable
Find all foo.mp4 files in the current directory tree and print the pathnames of their parent directories
Counts lines with all-cased word 'null' in file 'myfile.txt'.
Search the current directory tree for files and directories called "test"
find all the files in current directory of size greater than 10MB and less than 20 MB.
find all the files in the current folder which have set guid bit on and list the top 10 files.
Replace "dummyvalue" with the system IP address in "filename"
find all files in current folder which are bigger than 1MB
search for all the .o files in the current directory which have permisssions 664 and print them.
List all files/directories under current directory matching the posix-egrep type regex ".+\.(c|cpp|h)$" in their names
Find all .java files starting from the current folder
Page through the contents of BIG_FILE.txt, letting the user move around with the arrow keys, the Q key quits.
Compare "current.log" and "previous.log" line by line and print lines containing regex pattern ">\|<"
Rename file with inode number 31467125 to new_name.html
Find all the files in file system which are greater than 50MB and less than 100MB
Find all files/directories under current directory matching the case insensitive pattern 'pattern'
Print the current user name associated with standard input
display the number of lines in all the ".c" files in the current folder
Find *.html files in the current directory tree that were modified 7 days ago
Gets MAC addresses of all active network interfaces.
Delete all empty directories in minimum 1 level down the directory 'directory'
Find all the files which were modified 50 days ago
Search all files under and below /etc for IP addresses
Search all variables and their values for "NAME"
Remove sess_* files that were modified more than 2 days ago
Run the file command on every regular file under current directory
Print revesed second from the end dot-bounded field in $i value
Print a count of files and directories in the current directory tree
find all the files in the current folder which have been modified in the last 60 minutes, which are atleast 1 level deep and display a long listing of these files
Removes all empty folders under current path, aged between 'first' and 'last' timestamps.
show all the mp3 files in the folder /home
Find all directories under $path
Find .rmv files in the ./root directory recursively and copy them to directory /copy/to/here
Search the current directory tree for regular files whose names match regular expression ".+-[0-9]+x[0-9]+\.jpg"
Recursively change the group of all files in "/tmp/php_session" to "daemon"
Recursively changes group ownership of the $PATH_TO_OUTPUT_FOLDER directory to $GROUP group.
find all files ending with "js.compiled" in current folder and rename them.
find files in the home folder which have been modified in the last day. ( -daystart measures times from the beginning of today rather than from 24 hours ago.)
Display differences between /destination/dir/1 and /destination/dir/2 excluding files that match any pattern in file "exclude.pats".
Print the current user's mail file in "/var/spool/mail"
find all the files in the current directory which have the inode number 31246 and remove them.
Print whether "$file" and "${file/${dir1}/${dir2}}" differ
Select everything selected by * without descending into any directories
Count all the lines of all files with names ending with 'php' in current directory recursively
Find all empty directories under /tmp
Print the last space separated word from "Your string here"
Replace all occurrences of "foo_fn" with "bar_fn" in the files named "foo_fn" from the current directory tree
delete all text files from current folder
Print "$PATH" variable as input to awk script "rem_dup.awk" and concatenate the result with ":"
Find all the *.pl files (Perl files) beneath the current directory.
Split "list.txt" into files with at most 600 lines each
Compresses all files listed in array $*, executing in background.
Find all *.jpg (case insensitive) files under current directory
Filters only directories from long file listing of the current directory
Change directory to the directory containing the "oracle" executable
Find files in the /var/log folder which were modified an hour or more ago
Find all directories under ${1:-.} directory without descending into any sub-directories
Delete all files under /path/to/files that are not newer than dummyfile
Print host name without a newline
Find all .c and .h files in the current directory tree and search them for "expr"
Print the compressed size, uncompressed size, compression ratio, and uncompressed filename of "file.zip"
Find all files which  begin with 'a' or 'b' from current directory downwards and print them.
Test if a file named 'file' in the current directory is more than 1 hour old
Split the contents of all ".txt" excluding the first 1000 lines into files of at most 1000 lines each
Search the CSS files found in the current directory tree for string "foo"
Find all empty files (zero byte files) in your home directory and its sub-directories.
Save the full path of command "f" to variable "full_f"
Print the first word followed by the rest of the line formatted to fit in 100 characters for every line in "input"
Perform white space safe deletion of files named core under /tmp
Find all files/directories that have read, write, execution permission for user and belong to the user 'my_user' under current directory tree
display a long list of all the directories which have files ending with ".todo"
search for a function in all python files in the current folder
create directory certs
Find all Subscription.java files/directories under current directory and enter into the parent directory of the first one found
Allow anyone to run command "Xvfb" as the owner of "Xvfb"
Output lines 16224 to 16482 of 'file', not recommended with large files that contain many lines after the ones needed.
Create all directories in the path specified by variable $javaUsrLib as super user
Search the given $directory for files with permissions stored in $permissions
Find files that are 100k
rename all the text files  in the current folder to html files
search in the current folder for the file "myletter.doc"
Extract any line in sorted file "A" that does not appear in "B", "C", or "D"
On host "server_b", connect as ssh user "user" and copy "/my_folder/my_file.xml" to directory "/my_new_folder/".
Find all files/directories in the paths expanded by the glob pattern '.*'
Find all the files/directories with '.conf' extension under '/etc' directory non-recursively and display the last ten files
Show the list of all files on the system whose names do not end in ".c"
Find the top 5 biggest files
Create a symbolc link named "latest" to the last modified file or directory in "target-directory"
Enable history in a script
Print the file names along with their sizes under current directory tree
Rename uppercase file or folder name $1 to lower case name
Locate all files in the current directory and below that do not have "testfileasdf" in their names
Find all file.ext files/directories under present working directory and print . for each of them
find all the files which start with the name "Metallica" in the folder "/mp3-collection" and which are bigger than 10MB
Shows status of a shell option 'dotglob'.
Find all symlinks under /myfiles directory
Print ls output for all non-empty files under under current directory
display all the regular files in current folder excluding all the directories and all the sub directories having "normal" in their name
Find *.js UTF-8 files with BOM and correct them
search for the regular/normal file "myfile" in the current folder excluding search in the paths of "work" and "home" sub directories
Find the largest original ".gz" file in the current directory tree
find all regular files which have been modified in the last 48 hours in home folder
Count the occurrence of 2 in the string '1 1 2 2 2 5'
Find all files/directories named 'top' (case insensitive) in the entire filesystem
Prefix all files and folders in the current directory with "PRE_"
Find all directories named 'octave' under current directory tree
List files in the current directory
Print content of /etc/passwd and /etc/group files
View gzip's help documentation
Search all *.c files from the current directory tree for "hogehoge"
use find -exec with multiple commands
Search the /home/sdt5z/tmp directory tree for files named "accepted_hits.bam"
Find the core files and  remove them
Shows state of 'globstar' shell option.
Replace "  " with " $UID " in the output of "history"
Read a single character from standard input into variable "runCommand" with the prompt "Pick a letter to run a command [A, B, or C for more info] "
Saves printed calendar of February,1900 in positional variables.
Count and show the number of lines for each PHP files in the current directory tree
List all .svn files/directories under current directory
Save the first two letters of the system host name to variable "DC"
display the number of lines in all the files in the current folder
Find and show all files in the current directory tree that are smaller than 500 kB
Find all files under and below the current working directory with the word California in the file, and count the number of lines in the output
Find all files/directories with inode number 16187430 and move them to 'new-test-file-name'
Replace "," with "\r\n" in "a,b"
search for a word in all the php files in the current folder and display the count of all matching lines.
Find files in the current directory excluding CVS, SVN, GIT repository files and all binary files.
Replace all sequence of 'blank' characters in file 'log' with a single occurence of such symbol and print space-separated fields of each string but first two fields
Find files/directories writable by group and others under the /path directory
Find all executable symlinks or upvoter-* files under maximum 1 level down the {} directory
Search the files residing in the current directory tree whose names contain "bills" for "put"
Display total apparent size of a file
Move all *.mp4 files from directory /foo/bar and its subdirectories to /some/path
Make directory "tata"
Find all *.tex files/directories in maximum 2 levels down the current directory
Save full path of command "mktemp" to variable "MKTEMP"
Print the day at 1 day ago in 2 months from now
create directory backup
Show a listing of files not modified in over 20 days or not accessed in over 40 days
List all files/directories under current directory using comma (,) as the delimiter for different fields in the output
Get the disk space used by all *.txt (case insensitive) files/directories under current directory
display all the files ending with .c in the current folder
List all files in /var/www and below that have changed in the last 10 minutes
search for the directory "mysql" in the /etc folder
File 'mydatafile' has a number on each line, display the sum of these numbers rounded to lowest integer.
change the permissions of all the files ending with "fits" in the folder "/store/01"
Search the entire file hierarchy for files named zsh that exist on ext3 file systems and print out detailed information about the file.
find all executable files in /home directory.
Search the /home/www directory tree for regular files
Find all the files whose name is tecmint.txt in the current directory
Perform a case insensitive search for *filename* files/directories under current directory tree
Search the current directory tree for regular files omitting directory `omit-directory'
Remove regular files whose names match Perl regular expression '\w+-\d+x\d+\.\w+$' from the current directory tree
Show a long listing of files not modified in over 20 days or not accessed in over 40 days
Find all files called "INPUT.txt" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak
Prints long listing of content in the current folder with C-style escapes for nongraphic characters
Recursively change owner to "amzadm" and group to "root" of all files in "/usr/lib/python2.6/site-packages/"
Mount "nifs" filesystem "/dev/mapper/myldm" on "/mnt" as read only
delete all the text files starting with the name "oldStuff" in the file system
Find all *.ogg and *.mp3 (case insensitive) files/directories under your home directory
Find all files/directories under current directory tree with '.old' extension
Print current UTC date in ISO format with precision to seconds
Find and remove multiple files such as *.mp3 or *.txt under current directory
Split "input.txt" into files of at most 10 bytes each with prefix "/tmp/split-file"
Remove all regular non-hidden files modified more than 7 days ago and residing in the /tmp directory tree
Find files named tecmint.txt  of owner root in the entire file system
Identify CMS version/releases accross all your PHPBB installations
Update the archived copy of the home directory, "alldata.tar"
Remove all regular files from the current directory tree except textfile.txt, backup.tar.gz, script.php, database.sql, info.txt
Find all regular files that were modified $FTIME days ago under current directory tree
Print the sorted and unique parent directory paths appended with : of all the files that are executable by owner under ~/code directory without descending into hidden directories
Print each unique line that is duplicated in files "file1" and "file2" combined
Find all level 1 subdirectories of the current directory
Insert "|" every 30 characters in file "longline"
Search the /path directory tree for files missing g+w or o+w bits
Remove all directories found in directory tree $LOGDIR that were modified more than 5 days ago
Find all PHP files in the current directory recursively and search them for string "$test" with 8 simultaneous processes
Make directory "alpha_real"
Print the user name of the current user
Search the current directory tree for *bash* files printing them on a single line
Find regular non-hidden files containing 'some text' in their names
Create an empty file (or update timestamp of file) specified by variable "correctFilePathAndName"
Copy all files under director 'foo' whose name doesn't contain 'Music' to directory 'bar'.
Prints out all the logged-in users along with their group information.
find all the regular/normal files in the current folder which belong to the user "sedlav"
display all the text files in a folder
Read standard input until a null character is found and save the result in variable "f2"
find all the "jpg" file in a folder.
Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and other for those directories
find all regular/normal files in the current folder that have been modified in the last 120 hours
search for files in current folder using regular expressions
this find command Substitute space with underscore in the file name replaces space in all the *.mp3 files with _
Find all files/directories with '.err' extension under '/home/username' directory tree
List all ~/bin/FilesDvorak/.* (non-recursive) and ~/.PAST_RC_files/.* (recursive) files/directories and take common entries between these two lists
Find and delete the file with inode number 1316256
Print all string from file 'file2.txt' matching pattern in file 'file1.txt'
Find all regular files named 'whatever' under current directory tree excluding all paths that contain any hidden directory
Find files/directories under current directory that are modified exactly one hour ago
display a long listing of all the normal/regular files in the current folder (print0 is used to handle files which have newlines in their names or files with the name only as spaces )
Display all symlinks and their targets in the current directory
Go to /tmp directory.
Find all files in the current directory tree that match pattern 'a(b*'
Find all .zip files in the current directory tree
Archive "/home/user1" to "wobgalaxy02:/home/user1" excluding hidden files
Find all files/directories ignoring *~ files/directories without descending into .snapshot directory with null character as the delimiter
Copy file 'src' to 'dest', except if 'dest' already exists.
find all the html files in the current folder and rename them to .var files
Read a line of standard input with prompt "My prompt: " and save it to variable "varname"
find all the files which have the write permission to the group and remove the write permission.
recursively change owner and group of the directory and all files into it to user "user" and group "www-data"
find regular/normal files in the current folder
find all the files in the home folder that are modified day before yesterday
Change permissions to 644 for all regular files under the /path/to/dir/ tree unless these permissions are already set
sort and display top 11 files along with the last access date for all the files in the file system ( sort based on the timestamp )
find Texinfo source files in /usr/local/doc
search for the regular/normal file "Dateiname" in the entire file system
Prints total count of lines of all *.php files in a current folder and subfolders.
Archive "/var/www/test/" to "/var/www/test" on host "231.210.24.48" as user "ubuntu" via ssh using identity file "/home/test/pkey_new.pem"
Use the octal form to find and print detailed information about all regular files in your home directory and below that have only the group permission set.
Remove all .txt files with spaces in names in and below the current directory
Print info about all mounted file systems, and grand total statistic about available and used space
List all regular files under the current directory and below it
Find files/directories under current directory and force xargs to print them one by one
Make directories to "/some/path" as needed
Change the group of "myfile" to "friends"
find all files in etc which have been changed in the last 25 hours
Set 644 permission to all regular files under /path
Search the current directory tree for regular files that contain "string"
Create a symbolic link in the current directory to "$file"
Find all files/directories in entire file system with 644 permission
Search the file system for regular files whose pathnames are shorter than 25 characters
Saves listing of a current folder in 'var' variable.
Print the date formatted with "%a %x %X" followed by the host name
Find all files/directories named 'query' under current directory tree
Find all file paths under current directory, perform a reverse numerical sort and show first 10 file paths with their status change time
Copy file linked to by "bar.pdf" to "bar.pdf"
Search the current directory recursively for .m4a files
Display the sizes and filepaths of all files/directories sorted in descending order of size
Remove the passphrase from ~/.ssh/id_rsa.
find all files that are readable and writable by their owner
From a script, output the name of the script itself, without containing directories.
Find blabla* files under current directory
Delete all files in the current directory.
keep only read access to all the files in a directory.
find all text files in current folder and trim the extra spaces in all lines in these files ( MAC version )
display all files in the current folder along with their last accessed timestamps
find all files in the current directory excluding those that end with .js or have the words .min or console in their name
List all files in the current directory tree that were modified 60 minutes ago
Print a colon-separated list of all directories from the $root directory tree
create a backup of all the files in the current folder excluding those that are present in the .snapshot sub directory and excluding the swap files (files ending with  ~)
Force create a symbolic link as a file named "/usr/lib/jvm/default-java" to "$default_java_dir" with verbose output
Executes 'cd /' in a subshell created by a pipeline of built-in function 'true'.
search  all block spacial files called backup from /usr directory downwards and print them .
Find all files in the `sourceDir' directory
Move all 10*jpg files under /path to 2010*jpg files under the same directory
Reverse the space separated words in "35 53 102 342"
search for text files in the current folder which do not have write access to others
Find all files/directories named 'test' under current directory tree
Copy "src" to "dest" if "src" is newer than "dest"
Archive "/path/to/files" to "/path" on host "user@targethost" with elevated permission on the remote host
Make a new directory "new-dir" in every directory in the current directory tree
Find all *.htm files under current directory and print the changed names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format
Append the current date in '%Y%m%d_%H%M' format with the basename of $0 and save it to variable 'LOGNAME'
Find all Executable files
List only the non-hidden empty files only in the current directory.
Print the output of history without line numbers
Find all directories in entire file system which are larger than 50KB
search for perl files in the folder /users/tom
Print file name without the last two extensions assuming the file name doesn't contain any other dots.
Make directories to "x/p/q" as needed
Find and the 5 largest regular files in the Downloads folder of tecmint's home directory and output the file sizes in bytes.
Find all *gz files under asia and emea directory
Counts number of processors and saves in variable NUMCPU.
Find all files in the current directory and below with extension .php and replace "php" with "html" in their names
Set variable "b" to the first word of "a" converted to uppercase.
Find all files/directories that start with 'screen' (case insensitive) in their names under user's home directory tree and show them by paging through one screenful at a time
Set the timestamp of B to the same one as A
Find all files/directories greater than 100MB and print their list along with their size in /root/big.txt file
Find command will list of all files & directories from current directory , before listing echo command will display ' List of files & Directory '
Find all 777 permission regular files and use chmod command to set permissions to 644
Display the biggest file sizes only
Recursively print all directories in the current directory tree
recursively change owner and group of the directory  /opt/antoniod/ to user and group antoniod
find all the regular/normal files in the current folder and do not search in the sub directories
Find all directories under var/ directory and change their permission to 700
Find all .rb and .yml files in the /some/path directory tree and replace "some_phrase" with "replacement_phrase" in them
Decompress 'file.gz'
Save the canonical path of "$dir/$file" in variable "path"
Find all files under /home/username/public_html/themes and set their permission to 640
Save a list of all the files/directories under current directory tree to a file named 'foo'
Save the system host name in variable "HOSTNAME"
Count number of lines in "Sample_51770BL1_R1.fastq.gz"
Convert all characters in standard input to lower case
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of all the files found
Copies file 'test' to each of directories like './fs*/*'.
Get domain "$domain" IP address
List all *.txt files/directories under /etc
Find files/directories under current directory that matches './projects/insanewebproject' in their paths and show the first one
Recursively change the owner of all "*.txt" files under "/mydir" to "root"
Prints what year it was 222 days ago
list in long format all files from / whose filename ends in "jbd", not descending into directories that are not readable while searching, and not descending into directories on other filesystems
Report file system containing the current directory disk usage in kilobytes.
Send SIGWINCH process to current shell, causing it to update the LINES and COLUMNS variables which describe the size of the screen/window in characters.
display all the files in the folder "/home/mywebsite" which have been changed in the last 7*24 horus
Creates temporary file in default folder and saves path to it in 'source' variable.
Output all lines in 'file' comparing the first 12 characters and discarding any adjascent lines where these characters are duplicates.
move all the html files from current folder to another folder and if a symbolic link is found copy the original referenced file and not the link
Reverse the order of lines in "dax-weekly.csv" keeping the first line the same
Searches the manual page names and descriptions
List all .c and .h files in the current directory tree that contain "thing"
Extract protocol and host name from URL.
Find all files/directores under '/usr/local' directory tree that contain the word 'blast' in their names
Find all directories whose status were changed $FTIME days ago
Remove all files under /home/user/Maildir/.SPAM/cur
find all regular files under the /etc/sysconfig directory that were accessed in the last 30 minutes
find all the log files in the file system which are present in the current partition
Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script
Find files/directories that isn't owned by the user 'apache' under /var/www
removes last N lines from file.txt
find case-insentive example.com file, and whole dose not contain beta
Get a list of files and directories in the current directory tree
display all text files in the current folder
Print nothing because 'MYVAR' string doesn`t match with '/[^/]+:' pattern
Output "file.txt", omitting all containing directories "some/unknown/amoutn/of/sub/folder/"
Find all files/directoires that were modified more than 3 days ago under $dir directory tree
Run a shell with all environment variables specified in the file 'cronenv' in the user's home directory.
find all the swap files (files ending with ~) in the current folder and delete them
Find all files/directories named 'fprintf.c' under '/usr/src' directory tree
find all the files in the /usr folder that have been modified after the file /usr/FirstFile.
Delete all the files found in the current directory tree whose names begin with "heapdump"
Find directory "your/dir" if it is empty
Continuously convert "20131202" into "2013 12 02" and print the result
Find files modified in the last 5 minutes starting from the current directory
List all directories under current directory
Copy all files in current directory that do not match */not-from-here/* in their names to /dest
show all the regular files in current folder
Copy the entire contents of the current directory preserving ownership, permissions, and times
Find files in the current directory tree which have permissions rwx for user and rw for group and others
change the permissions of all regular/normal files in the current directory
Check if "$file" contains DOS line endings
Print the full real path of "/dev/disk/by-uuid/$1" followed by "is not mounted"
Save a unique list of the currently logged in usernames to variable "line"
Remove trailing whitespaces from all regular non-hidden files in the current directory tree
Find all files/directories in entire file system that have  "write" bit set for either the owner, the group, or others
Move all files including hidden files and excluding ".." in "/path/subfolder/" to "/path/"
Find all files in the current directory tree that are not newer than some_file
Search the current directory tree for files whose names do not end in "1" and "2"
Create a symolic link in "/usr/local/" to "/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl"
find all the png files in current folder which are present in the pattern list file "search.txt"
Find all *.err files under current directory that are larger than 5120 bytes in size
Find all files named 'Makefile' in the /usr/ports directory tree and count the number of lines in them beginning with USE_RC_SUBR
display all files in the current directory excluding those that are present in the directories whose name starts with "efence" and do not search in the sub directories
Find all xx* files/directories excluding 'xxx' files/directories under your home directory
Find all files in the file system with the SUID bit
display all files in the directory "dir" which have been accessed in the last 60 minutes
Print all files and directories in the `.' directory tree skipping SCCS directories but printing out the SCCS directory name
search for all regular/normal files in current folder and display all the files which contain 16 lines
display all directories in the entire file system
Search the system for the file 'myfile' ignoring permission denied errors
Change permissions to 644 for all directories under and below /path/to/someDirectory/
Find all regular files in the current directory tree ignoring GIT and SVN directories
find all regular file and create jw-htmlfiles.tar
Split "$1" into files of at most "$2" or default 10000 using a numeric suffix of length 6
Shows state of 'extglob' shell option.
Change the ownership of "/home/bob" to "root"
Read a line from standard input into variable "REPLY" with prompt "$1 ([y]es or [N]o): "
Print absolute path of "YOUR_PATH"
Count the toal number of lines in all .py files in current directory tree
Delete all hidden files in the directory tree given as variable $FOLDER
Prints week day of a 31 day in a current month.
Cut all remote paths from HTTP URLs received from standard input (one per line) keeping only the protocol identifier and host name, of the form http://example.com
Find all directories in the /data1/realtime directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago
Search /usr/src for filenames not ending in "*,v"
List files larger than 10MB in the /var directory recursively
Print the first line of each file under the home directory
Find all 'test' directories in the current directory tree and remove them
display all the files in the usr folder which have been modified after Feburary 1st
Check that the master ssh connection "officefirewall" is running
Sorts content of the $tmp file and filters out all strings with ':0'.
find all the regular/normal files in the current directory and print them skip searching all the directories in the current folders.
find all the files older than 30 days
find all files in the current directory do not display the files which do not have read permission to all users
set a crontab to create or update the timestamp of "washere1" in the current directory every minute.
Unhide all hidden files in the current directory
Determine the user associated with stdin
Search the current directory tree for regular files lacking read permissions for user, group, or others
Find recursively all empty directories in the current directory
Find all *.texi files in /usr/local/doc
Write "127.0.0.1 ad.doubleclick.net" to the console and append to "/etc/hosts" as root
Subtract each column in File2 from matching column in File1, output the result in a similarly formatted table
Fix files to default permissions 644
display all the files in the current folder which are in the path "./sr*sc"
Delete all *.zip files under current directory that are older than 2 days
find all the directories in the file system which have read, write and execute to all the users
find all the files in the current folder which are exactly 1234 bytes
Remove all files with names like "vmware-*.log" from the current directory tree
Search the "test1" directory recursively for regular files named "textfile.txt"
Calculate the md5 sum of the sorted list of md5 sums of all ".py" files under "/path/to/dir/"
displays all the files in the current folder
Recursively removes all files in a 'path' folder but 'EXPR' files.
Print the input "hello world" followed by a swap of the first two awk fields
Search the /etc directory tree for files accessed within the last 24 hours
display all the files ending with ".foo" including those that are in the directory ".snapshot", this is the wrong way of using prune.
Find all directories recursively starting from / and count them
Search the current directory tree for all regular files matching pattern "*.rb"
find all files in current folder which are bigger than 1 MB and move them to another folder after user confirmation
Displays a tree of all process alongside their command line arguments.
Count the number of open files for PID "$PYTHONPID" every 2 seconds
Find all files/directories named 'openssl' under current directory tree without printing 'Permission denied' error messages
Find all php files that belong to user 'takuya' and have been modified in the last 1 day
find all html or cgi files in current folder
Find a more recent version of httpd.conf file than /etc/apache-perl/httpd.conf in entire file system
display all the files  in the current folder which have colon in their name
display all the ".c" files in the folder "/home/david" which have been accessed in the last 48 hours
Do a dry run of renaming file extension '.andnav' to '.tile' for all files/directories under current directory tree
Print the largest 20 files under current directory
Change permissions to u=rw,g=r,o= for all files inside the current directory tree
Recursively change ownership of "/usr/lib/node_modules/" to the current user
Change directory to parent directory and do not resolve any symlinks in the resulting path
display all the files in the current folder which are in the path ending with the folder f
Create a rsa key with comment specified by variable APP and passphrase specified y SSHKEYPASS.
Print a NULL-separated list of all directories of the current directory tree
Print content of 'domains.txt' with removed first one of dot-delimited fields
Find SUID files
Find all ES* and FS_* files under current directory
display all soft links in current folder
Report file system containing path-to-file disk usage human-readable.
Gets IP address of 'eth0' network interface.
find and delete all the empty directories in the current folder and all its sub directories too
Saves calendar of $month, $year in the 'cal' variable.
Search /etc for files modified within the last day
search for the directory "ora10" in the entire file system
Replace all occurrences of word "foo" with "bar" in *.c and *.h files from the current directory tree
remove all the files in the present directory which have space in their name.
Make directories to "$TARGET_PATH" as needed without causing an error if it exists
Find all *.cgi (case insensitive) files/directories under current directory and change their permission to 755
Write "Hello, world" to standard output and to "/tmp/outfile"
display all the files in the current folder which have been modified in the last 24 hours
Locates bzip2 command in a system.
Set file permission to 664 and directory permission to 775 for all files and directories under htdocs
display all the html files in the current folder
Find all php files in current directory and delete lines matching the regex '<\?php \/\*\*\/eval(base64_decode(.*));.*\?>' in those files
find all the files in the file system that belong to the user www
Print the current shell
Print the contents of "n"
test if the 2nd column in file A is in the reverse order of the second column of file B
Sort lines in "FILE" to standard output preserving only unique lines
Create links for all files in the current directory tree that are more than 1000 days old in "/home/user/archives"
Print A record for domain 'domain.' from 'ns1.newnameserver' nameserver
Copy and always overwrite all files in "/zzz/zzz" to "/xxx/xxx"
Find all regular files on the system whose size is greater than 20000k and print their names and sizes
find all the files in the file system which have been modified in the last 10 minutes
Find string "STRING" in files residing in the current directory tree, case insensitive
search for soft links in current folder and display those links which are not pointed to files in current folder
Print out every command that is executed in the script
Execute all arguments to a shell script and write the output to console and "$FILE"
find httpd.conf file in /etc directory
Look for files with wide open permissions
Find recursively all regular files in the current directory skipping hidden files and directories matching pattern '.?*'
Search the current directory recursively for files with the exact permissions u=rwx,g=rx,o=rx
Connect to host "$USER_AT_HOST" in master mode in the background without executing any commands and set the ControlPath to "$SSHSOCKET"
display the count of all normal/regular files in current directory
Go into the first directory whose name contains 1670
Find the directories whose names contain "New Parts" at level 3 of the current directory tree and create symlinks to them in /cygdrive/c/Views
Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar
Replace all occurrence of "subdomainA.example.com" with "subdomainB.example.com" in all files under /home/www and below
find all the files that have been modified in the last 2 days
Find all files/directories under current directory that were modified exactly 30 minutes ago
Print which files differ in "dir1" and "dir2" recursively
copy the entire contents of the current directory to another directory, while preserving the permissions, times, and ownership of every file and sub-directory
Find all pdf files excluding *_signed.pdf files under /some/dir with null character as the delimiter
Display the last dot-separated field, in this case "com".
Finds recursively all files having extension .c, .h in '/path/' that contain 'pattern', and prints matched strings with string number and file name.
find all files in /usr/bin and run the "file" command on them.
Find all links pointing to /path/to/foo.txt
Search "input.txt" for regex patterns only matching those listed in "ignore.txt", list the unique lines and prefix with the number of occurrences
Print file system disk space usage with a grand total
Search for files/directories that are readable for everybody, have at least one write bit set but are not executable for anybody
Rename "svnlog.py" to "svnlog"
Delete files in /var/tmp/stuff and below that have not been modified in over 90 days
Find broken symlinks in current directory
display all the files  in the current folder excluding the current folder and do not search in the sub directories
display all the soft links in a  folder which are not broken
Find all files under current directory with 755 permission and change their permission to 644
find all jpg files in current folder
Search the file hierarchy for files larger than 100000 KB without searching any mounted removable media
find all the files that have been modified in the last 2 day
List all *.jpg files/directories in entire file system
Prints newline, word, and byte count for each *.py in a current folder.
Recursively finds files like 'example.com', ignoring case differences, and filters out files with 'beta' in path.
Use "vagrant-ssh" as the config file and ssh into "default" host
Decompress and extract '/usr/src/redhat/SOURCES/source-one.tar.gz'
find all the files in the file system which have been changed in the last 24 hours.
Save absolute path of the script filename in variable "MY_PATH"
Resolve all symlinks in path to "firefox" binary if it exists in path, resulting in absolute path with no symlinks.
Compress files excluding *.Z files
find all the files in the current folder that have been accessed in today from the start of the day
Find and remove multiple files such as *.mp3 or *.txt under current directory
Unzip "file.gz", list the unique first comma separated field prefixed by the number of occurrences, sort from least frequent to most frequent
Find all syslog directories under /var/log directory
Force create a hard link in "/usr/local/bin" to "findpdftext"
Set timestamp of B to the timestamp in stat format specified by variable "old_time"
For each line which has a common first field in file1.csv and file2.txt, output the first 4 fields of file1.csv
Puts the job 1 in the background.
Find all regular files in the current directory tree that match pattern 'btree*.c'
Search /usr, /home, /tmp for *.jar files
Stores date of last month day in the 'lastdaymonth' variable.
Find all directories whose name is Tecmint in / directory
List all *.txt files/directories under current directory ensuring white space safety
Find all *.java files under current directory containing the string 'String'
Make directories to "/tmp/test/blah/oops/something" as needed
change the permissions of mp3 files in the folder /var/ftp/mp3 to 644
find all the files which have been changed after the modification of a file.
Find all files/directories that are newer than 'backup.tar.gz' by modification time
find all the files ending with ".sh" in the folder /dir excluding those wth the names foo and bar.
Find all files in /home/kos and below whose names end in ".tmp"
Search the current directory recursively for MOV files
Strip all '\' and newlines from $output and save the result to variable 'output'
returns a list of  files modification newer than poop
Abort the shell or script on the first failed command
Find all *.c files under and below the current directory that contain "wait_event_interruptible"
Find all files/directories named 'myfile' under your home directory
Create tar archive "foo.tar" and copy all files from directory tree /tmp/a1 to it
display all the directories in the folder /path/to/dest except tmp and cache directories
delete all the broken symbolic links from the folder /usr/ports/packages
Recursively search for all files with names ending with "_test.rb", renaming them to end with "_spec.rb", using at most 4 concurrent processes.
Find all .py files in the current directory except "setup.py" and those beginning with "test_"
search for the files "foo.txt" in the current folder and rename it to foo.xml
display all the regular/normal files in the current folder which have been modified in the last 24 hours
search for a word in all the files in the current directory and display the list of matched files.
find all the files in the current folder which have been modified in the last 60 minutes
Add cron lists from "filename" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab.
Do not immediately exit the shell if a command fails
Search the current directory tree for *cache, *xml, and *html files
Find all files/directories under current directory and print them twice in each line
Go to previous working directory.
Get current directory name without full path, ie. the part after the last /
Search non-recursively directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way
Find all files under maximum 1 level down the ./subfolder and ./subfolder/*/  paths
Rename all "thumbs" directories to "thumb" in the current directory and 1 level below
display all the normal/regular files in the current folder
find all directories with the name "lib64" in the usr folder and replace space with ':'
display all the files in the home folder which begin with "arrow"
Set permissions for directories in `foldername' and its subdirectories to 755
find all directory list which have empty list in /tmp directory
Find all 1.txt, 2.txt and 3.txt files under current directory and change the permission to 444
Recursively change the owner and group of "subdir3" to "user3"
Recursively counts non-blank lines in all files in a current folder, that match regex '\.php|\.as|\.sql|\.css|\.js', but skip folders './pma', './blog', './punbb', './js/3rdparty' and files like '*.svn'.
Unzip and untar "openssl-fips-2.0.1.tar.gz"
Append history lines from this session to the history list
Replace the spaces after line number in the output of history with ".."
Search the /usr/bin directory tree for regular files modified or created less than 10 days ago
Find all the files in entire file system  which are modified 50 days back.
Split "file.tar.gz" into files of size 1024 MB
Saves number of lines of current directory listing in 'n_max' variable.
Return the list of files named "filename" that are 50 megabytes or larger
Find all *.dbf files/directories in entire file system and print their sorted and unique parent directory paths
Unzip and untar "myarchive.tar.gz" and check for corruption
Ensure all 5 of UEDP0{1..5}_20120821.csv files exist, creating empty files for any missing ones (updates the file's timestamps)
Replace all newlines from standard input except the last with spaces
Replace the first occurrence of "foo" with "bar" on every line in .txt files from the current directory tree
Print a welcome message with the current user's user name
Format bash array "${arr}" in columns
Print a list of regular files from directory tree sort_test/ sorted with LC_COLLATE=C
Silently read $char number of symbols from file descriptor 4, without backslash escaping, and store received input in 'line' variable
display all directories in the folder Symfony
display all normal/regular files in current folder
Find all executable files under current directory and show a few lines of output from the beginning
find -name '*.js' -not -path './node_modules/*' -not -path './vendor/*'
Locate files with user permissions rwx owned by my_user
create a compressed archive "filename.tar.gz" with verbose output
Search for '/usr/bin/perl' in all regular files under current dirctory tree and also show a long listing of them
find all the files that have the word "fstab" in their name in a folder
Count md5sum of all '*.py' files in a current folder with subfolders.
display all text files in the folder /tmp/1
Print the list of all subdirectories of the current directory
Rename "original.filename" to "new.original.filename"
Search the current directory tree for hidden files skipping .htaccess
Add executable permission to "pretty-print"
Print the number of entries (files, directories, symlinks, etc.) in the subdirectories of the current directory, stopping search at any device mount points.
Set permissions of all files under "/opt/lampp/htdocs" to 644
Find all files under /myfiles with 647 permission
Read a line from standard input with prompt "Are you alright? (y/n) " and save the response to variable "RESP"
Recursively change owner and group to "tomcat7" of "webapps", "temp", "logs", "work", and "conf"
List all mounted filesystems
Go into the first directory whose name contains 1670
Set timestamp of old_file.dat to specified timestamp.
Display the contents of 'your_file' wrapping lines to maximum 80 characters, and waiting for user interaction after each page.
find and image in current folder (case insensitive search)
force delete all the files that have been modified in the last 3 days
Moves the file that named like file $1 from '/tmp' folder to the folder where $2 file is located.
Print file system disk space usage of the current directory's file system
Find the file with inode number 211028 in the current dirrectory tree and move it to newname.dir
Search the /var/www/ tree for files owned by root or unknown group and change their group to 'apache'
Print the number of packets sent, received, and the percentage lost for each ping request to "google.com"
search files in current folder using name patterns
Find all files/directories under current directory with a Depth-First search
Recursively findsfiles with text pattern in current folder, ingnoring case differences, prefixes each matched line with number in file and suppresses error messages about nonexistent or unreadable files.
Disables shell option 'nocasematch'.
Find all files under current directory and make them read-only for owner, read & writable by group and remove read-write-execute permission
Extract the second-to-last slash-separated path component, ie. "90_2a5" in this case.
Remove all .mpg files in the /home/luser directory tree
Find all files/directories in level 1 down the $queue directory with all positional parameters appended with the find command
Delete all contents form the files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory excluding other partitions
SSH into "myhost.com" as user "myname" with a check every 60 seconds that the server is still alive
Delete in the background all files in /var/tmp/stuff1 and below that have not been modified in over 90 days
Find all image.pdf files under ./polkadots
Counts lines of /dir/file.txt file.
display a long listing of all the files in the /var folder which are bigger than 10MB. print0 is used to handle the files which have new lines in their names
find the file arrow.jpg in the entire file system
sleep for 5 seconds
Print lines of 'file' reverted order, and reverted characterwise
display all the files in the current folder which hare in the sub directory trees of the folders which begin with the word "kt" followed by a digit
Split "$FILENAME" into files with at most 20 lines each with a prefix "xyz"
find all the regular/normal files in the folder "myfiles" which have the permission 647.
Recursively change the owner to "user" and group to "www-data" of "yourprojectfoldername"
Find all files/directories that belong to the group 'accts' under '/apps' directory tree
search for the word hello in all the text files in the temp folder and delete them
find file named foo.txt under current directory.
Output the last slash-separated component of specified path, in this case "data_report_PD_import_script_ABF1_6"
Display a count of regular files in each directory at the current level.
Find all files/directories named 'testfile.txt' under current directory tree
Find the unique owners of all the files in the /bin directory
Search the directories given as arguments to the Bash script for files whose name is not "ss"
search for files which are writable by either their owner or their group
Save the full path of command "~/f" to variable "foo"
Creates temporary folder, and saves current folder path   joined with created temporary folder path in 'tdir' variable.
Report total file systems disk usage in 1T blocks.
find all files with the first letter “e” or “f” and last one x in /usr/bin directory:
Find all directories under /directory-path and change their permission to 2755
Report file systems disk usage using POSIX output format.
create a symbolic link named "test" to file ".bashrc"
Find files/directories under '/dir' directory tree that are newer than 'yesterday.ref' file and older than 'today.ref' file by modification time
Print last four bytes of string '0a.00.1 usb controller some text device 4dc9'
Prints path location of $BASH_SOURCE file.
For each line in file2 whose first field appears as a first field in file1, print an output line constructed following the specified -o format.
List in detail regular files from the current directory tree whose names match Perl regular expression '\w+-\d+x\d+\.\w+$'
search for files in current folder using name patterns
find all files in the current folder which have not been accessed in the last 7 days or which are bigger than 20KB
Connect to host "server_b" as ssh user "user" and copy local file "/my_folder/my_file.xml" to server_b's directory "/my_new_folder/".
find all the video files in the home folder
Find directories modified within the last 7 days
Print files created/modified in the last day
Display the file size of file '/data/sflow_log' in bytes
Find all directories under '/var/www' directory tree excluding '/var/www/web-release-data' and '/var/www/web-development-data' directories and their sub-directories
Find files ending in "f"
Split "infile" into 2 files of about equal size
Kill all processes matching the string "myProcessName"
Prints process tree of user 'user' processes.
Make directories "$@" and replace "mkdir: created directory " with "$USER created folder " in the output
find all the html files in the current folder and replace the end of each line with a pattern
Creates temporary folder in /tmp/ (by default) with 10-letter suffux.
Search for "pattern" in "file" and join each line by a space
Find & calculate total number of caractor  in all .txt file from current directory
Find all the files in the current directory
Find all *.php (case insensitive) and *.js files (case insensitive) under /home/jul/here excluding  /home/jul/here/exclude/* paths
Find all files/directories in entire file system more than 700 Megabytes
Find all file.ext files/directories under current directory with "FooBar" in their paths and copy them into the current directory
Change the owner and group of "it" to "root"
Clean up all zombie processes by sending SIGTERM signal to their parent process, which requests them to terminate.
Read a line of standard input in an interactive shell
Write to standard error a trace for each command after it expands the command and before it executes it
Finds $a pattern in a $b string, and returns exit code 0 if found, suppressing any visible output.
find all '*.c' files under $HOME directory which context contains sprintf
Split "hugefile.txt" into files with 100000 lines each starting with "part." and using numeric suffixes
Find and remove all .txt regular files under the current directory and below
Print "RDBMS exit code : $RC  " to the console and append to "${LOG_FILE}"
Find all $2 files in $1 path and search for the regex expanded by $3 in those files excluding the files with /proc in their paths
Find all read-only files
Rotates the dirs stack so that the second directory (counting from the right of the list shown by `dirs', starting with zero) is at the top.
Replace "foo" with "bar" in all PHP files in the current directory tree
Find "*.dat" files recursively in the current directory, print the lines starting on line 5 to the console and save to "concat.txt"
Copy the owner and group of "oldfile" to "newfile"
Find all *.tar.gz files/directories under /directory/whatever which were modified more than $DAYS ago
Find files in the current directory tree whose size is greater than 24000 bytes
find all ".flac" files starting with "cmn-" and search for files having CJK characters using unicodes
Find all the files recursively in directories or files taken from the glob pattern /tmp/test/* that have been modified today
Recursively finds string with text "foo" in all files of a current folder.
display all the hidden files in the folder /home
Delete all .svn subdirectories under current directory
Find all .txt files in the /home/user directory tree and copy them to /home/backup
Print symlink resolved script file name
Make a copy of the entire contents of SRCFOLDER called "DESTFOLDER", if DESTFOLDER exists, the copy will be placed within it.
find all the files ending with ".coffee" in the current folder and search for the words "re" in each line
Split "input_file" into files of at most 100 lines each with prefix "output_file"
archive all files in a current directory modified in the last 30 days
Find all files/directories with '.o' extension under '/lib/modules' directory tree
Find & Substitute Only 2nd Occurrence of a Word Using sed s//2 in all .txt files
Find all l files in the 'foo' folder but ones with name like '*Music*' to the 'bar' folder.
Find writable files in the current directory tree
Force the group stickiness for directories under /var/www
Prints a random line from $FILE
find all the mp3 files in the entire file system whose size is bigger than 10MB
Find all Name* files under ../../$name-module and rename them by replacing 'Name' with $Name (will be expanded in the current shell) in their names
Display unique names of logged in users
Take a file path from standard input and remove it.
Find all files in maximum 1 level down the current directory that were modified less than 1 day ago
Find all .sh files in or below the current directory and move them to folder ~/back.scripts
Recursively copies '$1' directory to '$2' directory.
Find all files named 'new' under current directory tree and display their contents
Find all files/directories under /path/to/dir/* paths and print the timestamp in YmdHMS format along with their paths and object of symlinks
Search for 'specific string' in all files matching the name pattern '“*.[txt|TXT]”' under current directory tree
Find all files under current directory excluding hidden files
Allow all users to execute "myscript.sh"
find all normal/regular files in the entire file system having the word "filename" in their name.
Recursively search current directory for all files with name ending with ".t1", change this to .t2
Read a line from standard input into variable "message" with escaped prompt "\nPlease Enter\na Message: '"
Pushes current folder to the directory stack.
display a long listing of all regular files  in current folder which have been modified in the last 60 minutes
Removes 'folderName', and removes all content within if 'folderName' is folder.
display the long listing detials of all the files in the folder junk which is in home folder.
Create a symolic link in "/usr/local/bin/" to "/Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl"
Change to directory 'xyz' and resolve any symlinks in the resulting path, making the physical path the current one.
Search for files in the current user's home directory and below for files that have not been accessed for more than 100 days and ask the user for permission to delete each file, one by one.
Find files owned by nonexistent groups
replace the word apple with orange in all the regular/normal files in the current folder
Counts lines in file $file and prints number only.
List all files in the current directory tree that were last modified more than 60 minutes ago
Change the permission to 644 for all files under current directory
find all files read less than 1 minute ago
Find all btree*.c files under current directory
Search for files greater than 20MB under your home directory (/home/user)
Make directories and parents as needed to "${raw_folder}" and "${split_folder}"
find directory which name is Cookbook under /users/al
Change the ownership of "/etc/udev/rules.d/51-android.rules" to "root"
Find all files/directories that are owned by user 'dave' under current user's home directory tree
Make directories "project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat/a}" as needed and do not cause an error if it exists
find all the files that have been modified today
Delete all lines matching "some string here" in "yourfile"
Query SRV records for domain '_kerberos._udp.foo.com'
Change user to "amzadm" and group to "root" of "/usr/bin/aws"
Read a line from standard input and save received words sequentially in variables XPID XUSERID XPRIORITY XVIRTUAL XRESIDENT XSHARED XSTATE XCPU XMEM XTIME XCOMMAND
Print out the contents of all *.txt files in the home directory
Show all of the .conf files in Pat's user folder and subdirectories using the less pager
count lines of C or C++ or Obj-C code under the current directory
Find all files/directories named 'foo.rb' under current directory tree
Read a line from standard input with a timeout of 10 seconds
List all processes with detailed information
find all files in the current folder which are bigger than 10bytes
Search all files in the current directory tree whose names end in "1" for string "1"
Find all /path/to/check/* regular files without descending into any directory
display all normal / regular files in current folder in reverse order
Find .txt files on the system whose size is greater than 12000 bytes
List files in directory "one" and "two" that do not exist in the other
Find all *.py (case insensitive) files/directories under dir directory ignoring .git path
find directories  that have been modified in the last seven days
Remove files under current directory with inode number $inum
Find all files with extension .aac in the /home directory tree
Display kernel name, release, and version.
Display bash function definition of "foobar"
Search for "largecalculation" in all processes owned by the current user
Interpret /etc/bashrc in the current shell, ignoring lines that contain "mesg".
use regex with find command
Save the canonical filename of the script in variable "me"
Find all regular files with '.what_to_find' extension in the entire filesystem and move them to directory '/new_directory'
Creates temporary file and saves path to it in a 'tmpfile' variable.
Count the number of characters in the list of regular files from the current directory tree
Run script $2 on remote host $1 using interpreter $INTERPRETER with pseudo-terminal allocation
display all the empty files in the folder /opt (file size 0 bytes)
Find all the files in entire file system which are greater than 50MB and less than 100MB.
Show manual for the find command
Find all directories under $root and replace all newlines with : (colon) in the output
find all the files in home folder which have been modified in the last 24 hours
change permission of all the files in the entire file system which have permissions 777.
Finds file 'Subscription.java' and changes to containing folder.
List all files in the current directory tree that were last modified between "mar 03, 2010 09:00" and "mar 11, 2010"
Move all *.pdf.marker files and their corresponding *.pdf files under ${INPUT} to ${OUTPUT}
Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*
See the word count of every *.txt file in the home directory
Find all configration files in Home directory & Subtitute permanently in files
Find all the regular files under directory 'dir1' that are at least N levels deep
Find all files which have 211028 inode number in current directory then Locating and renaming unprintable directories
Print lines 10000 to 10010 from input "seq 1 100000"
Remove all regular files under '/var/log/remote' directory tree that have not been modified in the last 14 days where day count starts from today
Create a new RSA key for ssh with no passphrase, store it in ~/.ssh/id_rsa without prompting to overwrite if this file exists, and minimize output from ssh-keygen.
Extracts a bz2 file.
Find all *.epub, *.mobi, *.chm, *.rtf, *.lit and *.djvu files/directories under current directory
Find all directories under current directory and replace all null delimiters with : in the output then remove the last :
Find "file.xml" under the current directory and change directory to its parent
Search for "ifconfig" in the output of "history" and print 5 lines that precede and follow
Remove trailing white spaces from all files under current directory ignoring .git, .svn directories and binary files
display a list of all java or jsp files in the current folders
Change directory to the directory containing file path "$1"
Find all files in the current directory tree, except GIT files
Find a directory named 'project.images' in the entire filesystem
Count all the lines of code in all php files in current directory recursively
List directories in the current working directory and remove the trailing "/"
display all the regular/normal files in a folder
Format output of "mount" as a table
Copy directory tree preserving UID and GID and leaving user files alone
change owner and group of the file "/path/to/yourapp" to root
Find all files/directories under current directory tree that start with 'R' and end with 'VER' in their names and were modified more than 1 day ago
Search the files under and below /directory/containing/files for "pattern_to_search"
Search for 'magic' in all regular files under current directory tree
Count all the lines of all '*.c' files in current directory recursively
Print the file content of command "[whatever]"
Search the /myfiles directory tree for files last accessed more than 30 days ago
List all the .c files under the current directory and below in a 3 column format
Print the contents of "Little_Commas.TXT"
Print flow of random data, showing all non-printing characters
Print the input "hello world" to the console followed by a swap of the first two awk fields
Force create a symbolc link named "new_dir" to "/other/dir" without dereferencing "new_dir"
Gets IP address of 'en1' network interface.
Change to parent directory and resolve any symlinks in the resulting path, making the physical path the current one.
Find all files excluding files ending with 'gz', 'tmp' and 'xftp' in their names in the current directory tree and compress them with gzip not preserving timestamp and original name
The  command runs all the directories (-type d) found in the $LOGDIR directory wherein a file's data has been modified within the last 24 hours (-mtime +0) and compresses them (compress -r {}) to save disk space.
List all files with their modification time in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time and sort them according to file modification time
Print the login time and user of the first person who logged in
Shows only process trees rooted at processes of this user.
Find regular files in the current directory tree that have all executable bits set
create a tar file of all the songs on my system that have been modified in the last 180 days (which is essentially six months)
display the three largest files by size in current folder
Find all of the character devices on the system
Recursively finds files like '*.js', and filters out files with 'excludeddir' in path.
get all files in a current directory modified in the last 7 days
Search for 'It took' in all $srch1* (case insensitive) files under current directory
List the unique second "/" delimited field of every line from standard input prefixed by the number of occurrences
Search the current directory recursively for regular files with the read permission set for everybody
Remove all broken symlinks from the /usr/ports/packages directory tree
Add "Line of text here" on top of each *.py files under current directory
create directory /etc/cron.15sec
Count the number of regular files with 755 permission under current directory tree
Find all "G*.html" files modified more than 7 days ago in the current directory tree
Find all the files which were modified more than 50 days but less than 100 days ago
Delete all files in the TBD directory that were modified more than 1 day ago
find all the files in the root folder which have been modified in the last 24 hours and print them
Find directories in /proc and show only those that doesn't match the regex '/proc/[0-9]*($|/)'
Find all executable files under current directory and reverse sort them
replaces the last occurrence of 'a' with 'c' in file
Force create a symbolic link named "$lines" to "$c" without dereferencing "$lines"
Find all files and directories that have been modified in the last seven days.
List the combined path of the current working directory and "file.txt"
find files (under root file system /) that were accessed within the last 24 hours
Print the list of files in the current directory tree skipping SVN files
Prepend the reverse history number as negative values to the output of the history command with arguments "$@"
Gets a job with defined number back to the foreground.
Find all directories under 'test' directory tree whose paths match the regex '.*/course[0-9]\.[0-9]\.[0-9]\.[0-9]$'
Find all *.txt files/directories under current directory
Prints calendars of July, 2009 and July, 2010 side-by-side.
display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours.
find the ten biggest files
List (in long list format with inode number) the file under the current directory that has the oldest modification time
Print mount point of the file system containing $path.
Search for 'sometext' in all the files with '.txt' extension under current directory tree and also print the filenames
Find all files with the SUID bit set beginning with the root directory
List all files in the current directory tree larger than 1000 kb
Remove all directories called "test" from the current directory tree
Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions
Remove all files in the current directory tree that have the name "abc.xxx"
Replace all instances of "STRING_TO_REPLACE" with "REPLACE_WITH" in file "index.html" and make a backup with suffix "bak"
Find all *.log files under path/ that do not contain "string that should not occur"
Find all PNG and JPG files and append them to archive `images.tar'
Remove all files with the .c extension in the current directory tree
Find the passwd file under root and one level down.
Append "<br/>" to the end of each line in "1\n2\n3"
Show the last 10 .conf files found by `find' in the /etc directory and 1 level below
Calculate a list of duplicate md5 sum hashes for all the ".java" files in the current directory
List all *.gif files found in the current directory tree
remove top-level domain (.com, .org) from URL's in urllist.txt
Find all files that have been modified in the last seven days.
Find all the files without permission 777 in the file system
Compare sorted files 'f1.txt' and 'f2.txt' and print in three columns strings unique for first file, second file, and common ones
Find all *.htm files under current directory and print the changed names by appending 3 levels of parent directory names at the beginning and modifying the actual name to dd-nnn format
Find all directories under current directory and change their permission to 755
Print the last 10 commands in history
Find all files modified on the 7th of June, 2007, starting from the current directory
Mount a read only ntfs filesystem
find all the text files in the current folder starting with "somefiles-"  and prepend the first line
search for a regular/normal file "myfile" in the entire file system excluding the folder in excluded_path
Display the number of lines in all regular files under current directory tree and also show the total count
display the names without extensions of all the data files in current folder which have not been changed in the last 60 mins
Delete files containing whitespaces
Show the files or directories in the current directory whose names are not "MyCProgram.c"
Delete all regular files under $DIR directory tree that have been modified before file $a
Print the first line and lines with "f" as the third "," separated field in "input" and format the result as a "," delimited table
Find all files in ~/clang+llvm-3.3/bin/ and print 'basename /file/path' for each file
Find all empty regular files in the current directory and below
run ksh shell as user apache
find all normal/regular files in current folder and display them in sorted order
Cuts off last part from the path $dir, and deletes resulted folder if empty.
find all the files in the entire file system that have been modified exactly  50 days ago
list all CSS files under the current directory
Read the history file and append the contents to the history list
Resolve symbolic link of path of "python2.7"
Find all *.txt files/directories under current directory
Search the current directory recursively for regular files last accessed more than 2 minutes ago
find all the text files in the current directory which have been modified in the last 4 days and not today and copy them to another folder
Find all SGID files in entire file system
Save the contents of "numbers.txt" to variable "f"
Find all files/directories under '/usr/local' containing 'blast' (case insensitive) in their names
Search for the regex 'pattern_to_search' in all files under '/directory/containing/files' and show the matched lines as well as the file names
Copy file or folder linked to by "file" to "file"
Replace all newlines from the contents of "file" except the last with spaces
Finds IP addresses of all network interfaces.
Find all files named 'file' in 1 level down the current directory whose status were changed more than 1 hour ago
Check if "~/mnt/sdc1" is mounted
Delete all files in the /myDir directory tree that were last modified 7 days ago
Save a space separated list of process ids of currently running jobs to variable 'bgxjobs'
Display permissions, user, group, and full path for each file in the current directory tree as a list
Prints all NS servers of domain google.com.
Calculate the md5 checksum of the current directory structure and save it in variable SUM
Find all *.py files/directories under current directory
Copy directory hierarchy from the current working directory to "/path/to/backup/"
Prefix all files and directories in the current directory with "unix_"
find all the files in the current folder which have executable permission to all the users and display the ten files
Remove file with inode number 31246
Save Java home in variable "JAVA_HOME"
Print true directory name of the current directory
Find all files on the system whose names are 'autoload.php'
Recursively counts non-blank, non-comment lines in all *.c files in a current folder.
Open a session-less connection to 'host' as user 'user' in master mode with a socket "/tmp/%r@%h:%p" to enable connection sharing
split result of the command "tar [your params]" into pieces per 500 mb named as "output_prefixNNN"
Search directories called ' backup ' from /usr directory downwards and print them.
find all the file that have not been modified in the last 3 days ( considers day starting not 24 hours )
Search three folders named foo, bar, and baz for all "*.rb" files
search the word NEEDLE and substitute it with REPLACEMENT in all the php files of the current folder
Find all files under and below the current working directory with the word California in the file, and count the number of lines in the output
Change directory to the user's home directory
find in the entire file system for the file mysql
Count the number of lines in "/etc/fstab"
Print last 10 commands in history
Recursively list contents of the current directory in a tree-like format
Gets MAC address of p2p0 network interface.
Find the passwd file under the root directory and two levels down
display all the files having spaces in the current folder
display all the regular files in the current folder which have the permission 777
find all files ending with "js.compiled" in current folder
Find all files under current directory matching the posix-egrep type regex '^.*/[a-z][^/]*$'  in their names
search for all the files in the current directory which have size greater than 10KB (approx) and less than 32KB(approx).
Check whether "/full/path" is a mount point with no output and using the exit code
recursively change owner of the directory /usr/local/lib to the current user
Print bash environment variable array "fields" and its values
find all the regular/normal files in the current directory which do not have the extension comment and and redirect the output to /tmp/list
Execute "ps -C java -o pcpu,state,cputime,etimes" every second
find all the files in the folder "myfiles" which have been modified exactly 48 hours back.
Find all files/directories named file1 in maximum 2 levels down the current directory
Changes group ownership of 'myprog' to 'groupb'.
display a long listing of all the regular/normal files in the file system which have set uid bit or set gid bit enabled.
Show current date in "%Y-%m-%d" format
Print name of the file system containing $path.
Remove files that are greater than 1MB in size under current directory
Find files in the current directory and below that are 2000 kB in size
Find all files in your home directory and below that are smaller than 100M.
Recursively removes all files like any-cased '*.pyc' in a current folder.
Copies all files under the current directory but ones with '*/not-from-here/*' in path to the '/dest/' directory.
Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding "*"  before it's passed to find.
Show manual page for the find utility
display all the files in the file system which belong to the user "wnj" and which are modified after the file "ttt"
Prints total count of lines of all *.py files in a current folder and subfolders.
display a long listing of all the java files in the current folder in sorted order
Find all directories starting from YOUR_STARTING_DIRECTORY that contain the string "99966" in their names
finda ll the files in the current folder that are modified today.
find all the files in the current folder which have been modified in the 10 minutes ago
List all unique parent directories of .class files found under the current directory
Make 3 directories named "~/Labs/lab4a/folder" followed by the number 1, 2, or 3
View history using "less"
find all the files with the name september ( case insensitive )
find all the files starting with "config" in the folder Symfony
get a PID of a process with name 'test.sh &'
find all the files in the entire file system starting with the word top
Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play
Sort the lines of the file 'inputfile', keep only the uniq lines and change it in-place
Search  all directory from /usr downwards for files whose inode number is 1234 and print them .
Delete characters in columns 36 through 40 from the output of "finger"
Compares two listings 'ls' and 'ls *Music*', showing only strings that unique for first listing.
Find all the SGID files in the current directory tree
Remove all files whose names end with "~" in the /home/peter directory tree
Change directory to the directory containing the executable file of command "oracle"
Merge each line of standard input into a single comma separated line
Test if a file named 'file' in the current directory is more than 1 hour old
Find all files under current directory whose status was changed less than 3 days ago, sort them and show last 5 lines of output with only their paths
find all the database files in the folder /var/named
Find all files/directories owned by user 'michel' under current directory
Display differences between a and b side-by-side
Print the files in the current directory as a list of comma separated values
search for all pdf files in the folder "/home/pdf" which have been accessed in the last 60*24 hours
Find all regular files under '/home/john/scripts' directory tree excluding files with '.ksh' extension
Replace the first occurrence of "string1" on each line with "string2" in all regular files in the current directory tree
Search the *.c files residing in the current directory tree for string "blash"
display all the regular/normal files in the folder /path/ which have not been modified today ( from day start ie, 00:00 )
Count the number of lines in all ".php" files in the current directory tree
search for text files in the directory "/home/user1" and copy them to the directory /home/backup
Find all files in the current directory tree named 'FILES.EXT'
find all the files in the current directory which start with t and have been modified between one hour (60 minutes) and 12 hours (720 minutes) ago.
Use awk command 'FNR==NR { array[$1,$2]=$8; next } ($1,$2) in array { print $0 ";" array[$1,$2] }' on compressed files "input1.vcf.gz" and "input2.vcf.gz"
Create directorie(s) 'some/path' as required in the current directory
Run checksums recursively from the current directory, and give back the filenames of all identical checksum results
find files in the current directory with pattern` '*.[ch]' which are contain ‘thing’ string and print file names which can contain spaces
filter output of bind -p by regex
Display standard input as octal bytes
Takes folder path from string '/path/to/copy/file/to/is/very/deep/there' and created it with all parents.
Merge already sorted files "file*.txt" and split the result into files of at most 100000 lines each with a prefix "sorted_file"
Make directory "/etc/cron.5minute"
Finds recursion-related options of a 'grep' utility.
Find all *.mov files under current directory
Saves listing of a current folder in 'OUTPUT' variable.
Print only first line of 'file' content, formatted as 29-symbol wide column, regarding space symbol as a word separator
Search for lines that have zero or more whitespace characters before "http://" and number the uniquely sorted output
View line 500 to line 500 + 501 in gzipped file "bigfile.z"
split content of the file inputfile except lines started with "^t:" into pieces per 200 lines
Find all *.jpg files under current directory
Search the home directory tree for files owned by sam
Find all directories in level 1 down the $queue directory
Rename "file0001.txt" to "1.txt"
Print a sorted list of *.so files in the bla directory tree
Print the current working directory with resolved symbolic links
Print each line in "file1" and file2" separated by tabs and "file3" separated by a space
Print first 11 characters from $line, print a tab, print the md5 sum of the file specified by the 13th and onward characters from $line and print a null character at end without a trailing new line
create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine)
Find files with 777 permissions and change them to 755
Display the content of file "f" in home directory if it exists and is executable
Find all regular files in the entire filesystem that belong to the group 'users'
search for the word "mysql" in all the files in the current containing the word "notes" in their name
Prints random line from file $FILE.
Find the largest 10 files (regular files) under current directory
recursively delete, without prompting, directories under /data/bin/test, that are older than 10 days and where the name starts with a number
find all the normal/regular files in the folder "pathfolder" excluding all hidden files and display the count
Decompress and extract 'archive.tar.gz' into '/destination'
Find all files matching shell pattern "foo/bar" in the foo directory tree
Read a line from standard input in an interactive shell into variable "input" with prompt "Do that? [Y,n]" and suggestion "Y"
List files under current directory according to their size in descending order
Make a POST request to "http://dweet.io/dweet/for/cycy42" with data "PiIP" set to the IP address of the system
Delete all regular files that reside in directory $OUTPUTDIR and below, and were last modified more than 7 days ago
Save the absolute path of the current script to variable "SELF"
Execute "script.awk" on "file" and format the output as a table
Find all the .c files in the current directory tree that contain the string ‘stdlib.h’
Find all files/directories under current directory and put the output into full_backup_dir variable
Recursively find the latest modified "zip" file in the current directory
Show all running processes with a name matching "postgres"
Deletes folder like /tmp/*/* or deeper, older than +7 days if they don`t contain files or other folders.
search for the file, filename.txt in the folder /home
Find all files in $dir directory without going into sub-directories
search for the directory starting with "ora10" in the entire file system
search for all the files in the folder /data/images which are modified after /tmp/foo
display all the files on the current folder excluding those that are present in the folder "./src/emacs"
Search for 'example' in all regular files under current directory tree
Finds string beginning with 'IFS' in a 'set' output.
Extract data from HTML table in "mycode.html"
Search for the extended regex expanded by"$MONTH\/$YEAR.*GET.*ad=$ADVERTISER HTTP\/1" in the decompressed contents of the /var/log/apache2/access*.gz files that are newer than ./tmpoldfile and older than ./tmpnewfile
Set the permissions of all directories inside the current directory tree to ug=rwx,o=
Find all directories under /path/to/base/dir and change their permission to 755
Find all files/directories newer than ttt or owned by user 'wn' in entire file system
Create intermediate directories ~/foo/bar/ as required and directories baz, bif, bang
Change permissions of ".bash_logout", ".bashrc", and ".profile" to 444
Find all files/directories under '/var/tmp' directory tree that belong to a user with user id 1000
Finds files in 'directory' folder with the same name and location but different content than files in 'directory.original' folder and saves location of such files to 'directories' variable.
search for a files "cart1" in the folder junk which is in home folder and move the folder to ~/junk/A.
List subdirectories in the current directory
Search for files/directories with the case insensitive pattern anaconda.* in /var/log directory and create an archive (file.tar) of the last file found
Remove the last 3 characters from 987654321, keeping only 987654
Remove junk files modified more than 31 days ago recursively
Set up a remote port forward from port 10022 on host "server" to port 22 on localhost
Find the empty directories and files under current directory
search for all the files in the current folder which start with gen and end with bt2 and assign the output list to the variable var.
Perform a default cPanel configuration
find all files that belong to root user
Display a long listing of the oldest file under '/hom/backups' directory tree
Find all regular files on the system whose size is greater than 20000k
Replace all occurrence of "log_errors = Off" with "log_errors = On" in all 'php.ini' files in the current directory tree
List all files in a current folder, separating names with comma
Suffix all files and folders in the current directory with "_SUF"
change the owner and group of all the directories in the current folder and /home/admin/data/ to admin & admin
Search everywhere for a file called `httpd.conf' that is newer than /etc/apache-perl/httpd.conf
find files under the current directory containing a space in the filename and delete them
Delete all non digits from index "$i" in bash array "depsAlastmodified" and print the hex dump as characters
Read a line from standard input and save each word in the bash array variable "arr"
Archive any files changed in the last day from "remote_host" to "local_dir"
Count the number of files named 'job.history' under '/data/SpoolIn' directory tree that match 'FAIL' in their contents
Find all .gz archives in the current directory tree
find the regular js files which path does not contains '*/test/*'  and name does not contains '*-min-*' or '*console*'
display all the regular files in the current folder which dont not have the permission 777
Move "phantomjs-1.8.1-linux-x86_64.tar.bz2" to "/usr/local/share/" directory
Go back to last directory.
Search the current directory tree for hidden files
Find all files that were last accessed more than 7 days ago under /home
Extract path and query part from URL
Search the /home/weedly directory tree for regular files named myfile
List all environment variables (name and value) whose name starts with GOROOT
Create a symbolic link in the current directory for each file .dbf under the directories matching "/home/michael/foxpro/mount/A[1FV]/[12][0-9][0-9][0-9]"
find all files in the current directory which are bigger than 2MB
delete all the directories empty directories in the current folder
Simulate a full login
Recursively finds and compresses all files in a current folder.
find all data files in current folder which have not been changed in the last 60 minutes and display their name without extension
Set the 'xtrace' shell option
Display differences in "/tmp/ksh-9725.log" when compared to "/tmp/ksh-9781.log"
Save count of lines from file $file matching with pattern $filter and not matching with pattern $nfilter in variable 'totalLineCnt'
Create a symbolic link in the current directory to "../config/init"
Look for files whose names begin with letters a-j
display all files in the current folder and do not search in the sub directories
find all the files in the current folder and search for the word "vps admin" in them.
Prints the length and contents of the longest line in filename
Create the directory '.npm-global' in the user's home directory(~).
Print the contents of "numbers.txt"
Gunzip all files matching "file*.gz" and answer "n" to any prompts
Find all directories under /path/to/base/cache, /path/to/base/tmp, /path/to/base/logs  and change their permission to 755
Find all files/directories under current directory and count the number of lines for the output
Delete all files under '/home/backups' directory tree with '.tgz' or '.gz' extension (case insensitive) that were modified more thant 60 days ago
List files in the current directory and below that are exactly 1234 bytes in size
Find files not matching the posix extended regex '.+\-[0-9]{2,4}x[0-9]{2,4}\.jpg' in their paths under Folder1 and copy them to Folder2
Sort tab separated file "file" using a version sort for field 6 and a numeric sort for field 7
search for a word in all the shell scripts in the current folder and display the matched files.(case insensitive search in grep commad)
Search all files from the /tmp directory tree for the string "search string"
Calculate the md5 sum of all files in the current directory with the filename printed first
Print the first 10 files or directories found in the current directory tree by `find'
Check if the $somedir directory is empty
display files ending with ".ext" in current folder excluding those that are present in the list list.txt
Remove all broken symbolic links in /usr/ports/packages
Calculate md5 sum of empty string
Saves space separated content of $RAW_LOG_DIR in FILES variable
Print the list of the current directory's subdirectories
Mount "ntfs-3g" filesystem "/dev/mapper/myvolume" on "/media/volume"
display all the files in the current folder.
Print space separated list of numbers from "$start" to "$end"
Save full path of command "rm" to variable "RM"
Change permission to 000 of all directories named '.texturedata' under '/path/to/look/in/' directory tree
Change permissions to 755 for all directories in the /path/to/dir directory tree
Check if the file "somelink" links to exists
Execute "ls -l" every 0.5 seconds
find all the regular/normal files in the /path folder and delete them
find all files that are readable or writable by their owner
Filter out current date in current time zone from the GMT+30 and GMT+20 representations of current date and show the last one
Returns the single most recent file in a directory
Find files/directories in entire file system that have been modified in the last minute
Search for files/directories which are writable by both their owner and their group
Find files and directories with group id 1003
Output only the filetype suffix of "foo.tar.gz", in this case "gz"
Find all *.java files under current directory and archive them to myfile.tar
Print pathnames of all files in the current directory and below skipping directories named SCCS and files in them
Isolate first comma-delimited field of each line in "file", discard consecutive duplicates, and search "file" for first matching occurrence of that field.
Find all files/directories named 'query' (case insensitive) under current directory tree
List each directory in the current directory prefixed with its disk usage in human readable format and sorted from smallest to largest
search for version in system.info files.
Move all files and directories in the current directory to "/tmp/blah/"
delete all the files in the current folder which have been modified in the last 14*24 hours
Repeat "image.png" 10 times on a single line
list symbolic links under the directory "$directory"
display all the files in the home folder which end with ".xbm"
Find all *shp* directories under current directory and move all regular files inside those directories to ../shp_all/
Find all files/directories under $something directory
Search the regular files of the current directory tree for string "whatever"
Find all regular files in the "aaa" directory
search for the file "foobar.txt" in the folder "/home/mywebsite"
Replace any sequence of spaces in file 'text.txt' with single space and print 4th space separated field
Create a symbolic link in target directory "$tmpdir" for each file under the current directory
Set 644 permission to all regular files under current directory
Search the current directory tree for files whose names are not "a.txt"
create directories mnt and point
find all the files ending with jpg in current folder and display their count ( case insensitive )
Find files which are more than 2 days old under  ${userdir}/${i}/incoming directory
Find all files that have additional permissions
change permissions of files older than 30 days
Create a hard link named "my-hard-link" to "myfile.txt"
Find all directories named "0" in the current directory tree and create a single tar archive of their RS* subdirectories
Count all directories under current directory
Find all regular files that contain 'linux' (case insensitive) in their names under '/root' directory tree
Find all files under media/ directory and change their permission to 600
find all the files in the home folder which are less than 42 Bytes
Find and list all files on your current directory and show a few lines of output from the beginning
Search the current directory tree for files containing "sh" in their names
Change the permission to 0644 for all files under current directory
Remove all files and directories in the /home directory tree whose names are "Trash"
Look for SUID files and directories
Change the ownership of all aluno1's files in the current directory and below to aluno2
find all the symbolic links in the current folder and follow to the pointing file
Print file type information of the "java" executable
Calculate the md5 sum of the tar archive of "dir"
Change owner to "$1" and group to "httpd" of ".htaccess"
Find all regular files under /home/www and replace every occurrences of 'subdomainA.example.com' with 'subdomainB.example.com' in those files invoking sed as few times as possible
search for the file picasso in the folder /home/calvin/ (case insensitive search)
Find all regular files under $FOLDER directory tree that start with '".' and end with '"' in their names and were modified in less than $RETENTION days excluding the files whose contents match one of the regular expressions defined per line in file $SKIP_FILE
change the owner of all the files in folder /u/netinst to netinst
Print the names and sizes of regular files residing in the "tmp" directory tree
Archive "_vimrc" to "~/.vimrc" suppressing non-error messages and compressing data during transmission
find all the files in the file system which have been changed 1 minute ago.
list all .c or .sh regular files.
Print "Total generated: " followed by the number of unique lines in "$generated_ports"
Replace "foo" with "bar" in all files in the current directory tree except hidden ones
find setuid files and directories writing the details to /root/suid.txt , and find large files writing the details to /root/big.txt, traversing the filesystem just once
Find strings with 'Features' in /var/run/dmesg.boot' file
Remove all regular files from the current directory tree that were modified a day ago
Find all *.csv files under /foo/bar and move them to some_dir
Find all test.txt files/directories under current directory
Display inputfile all on one line (replace newlines by spaces)
List all files under current directory with their sizes and paths
Create a symbolc link named "public_html" to "current/app/webroot" under the current working directory
Search for the regex expanded by the variable $SEARCH in all regular files under $DIR directory tree
Remove all regular files from the current directory tree whose names do not end with "ignore1" or "ignore2"
Search the current directory tree for directories
Find files in the current directory and below that are newer than /bin/sh
Get the disk space used by all *.txt (case insensitive) files/directories under folder 1 and folder2
Look in /home/dm and below for files with 'uniform' in their names
find all files with pattern` '*song*abc2009*.jpg' and replace "abc2009" with "def2010"
display all normal/regular files or directories in the folder "$ORIG_DIR"
Find all files matching the pattern "${pattern}" in their name and execute ${my_command} for each of them with the file path as argument
Remove all *.txt files in the home directory tree with confirmation
Print space separated numbers from 1 to 10
list regular files ending in .mbox
Count the number of lines in all ".txt" files
Find all files under /mnt/naspath directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter
display all the files in the folder "$ORIG_DIR"
Find all directories under htdocs directory and set their permission to 775
Find all filenames ending with .c in the /usr directory tree
display all the files in the current folder which have not been modified in the last 7 days and which are not in the list "file.lst"
Delete all files not owned by valid users
Send one ping request to local machine.
Split "$SOURCE_FILE" into files of at most 100 lines each
Search every directory except the subdirectory excluded_path for a regular file 'myfile'
Search for 'some string' in all *.axvw files under current directory and show the matched lines with line numbers
Print the current date followed by ' doing stuff'
Create compressed archive of all the files in the current directory tree that have been modified in the last 7 days
list all samba files in /var/l* directory ( /var/lib or /var/log )
Print the directory name of the real full path of "relative/path/to/file" where each symbolic link component must exist
List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan and sort them according to file modification time
Find all files in the current directory recursively with "linkin park" in their names and copy them to /Users/tommye/Desktop/LP, preserving path hierarchy
Run an awk program on every TXT file found in the current directory tree
delete all the regular files in the temp folder which have not been modified in the last 24 hours
Search for 'example' in all regular files from the current directory
Find all empty directories under /tmp and below
Execute "ls -l data.temp" every 2 seconds
Find all files under $musicdir directory
Change permissions of all directories in the ~/dir_data directory tree in accordance with mode `a+xr,u+w'
get the root access
Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them
find all the text files in the current folder and do not  search in the sub directories
Show the last 10 .conf files found by `find' in the /etc directory
Shows size of compressed file in .bz2 archive.
Find disk usage of all files inside the directory
Find all regular files whose names contain "@" in directory tree ~/$folder
find all the files in the current directory that have the word "lib" in them
Find & Write Changes to a File and Print the Changes Using sed s//gpw
Save the current date to 'DATE' variable
Find all the files that were modified within the last day
find all the files ending with .ini in the current directory.
find files changed in the last 1 day
Find all PHP files under current directory that contain only one line
Locating large files (> 100 MB) in /home/ for 'cleaning'
verbosely create intermediate directoriy tmp as required and directory boostinst
Recursively changes group ownership of every folder in a current directory to the name of that folder.
Search for all *.conf files in entire file system
list all processes with its PIDs
display all text files in a folder
Change permissions to 0755 for all directories in the /path directory tree
Delete history entry at offset, defined in first argument of executed script
Change the ownership to the user daisy for all directories under current directory that are owned by harry
Print the last command in history
Find all files and directories in the current directory tree except those whose name is "dirname", case insensitive
Find all files owned by the user daniel in the current directory and below.
Finds the folder where temporary files would be written to.
Make directories to "/my/other/path/here/" as needed
Save hexadecimal bytes 7 and 8 in binary file "file.moi" to variable "year"
Search subdirectory `Linux' in the current directory for file `teste.tex'
Find directories that are directly under /home/user/workspace directory (no-subdirectories) and were modified more than 30 days ago and print a message saying that the directory wasn't modified during last 30 days
Find all files/directories under current directory excluding the paths that match the POSIX extended regex ".*def/incoming.*|.*456/incoming.*"
Write the current date and time followed by " 1" to the console and append to "log.csv"
Read a line from standard input into variable "text" with the prompt " Enter Here: "
Replace all newlines from standard input except the last with spaces
Prints calendar of $month, $year, and redirects all output to the awk script 'cal.awk', with predefined variable 'day=$day'.
Source executable "virtualenvwrapper.sh" found in $PATH
Sort and print each unique line in "myfile.txt"
Run "command" on server "host" as user "user"
Display all variables with names starting with "derby" in a Window's command line
Find recursively all files whose names begin with "foo"
Find all files/directories with permission $permissions under $directory directory tree
Find all files/directories under /myfiles following symlinks if needed
Find all files on the system that are world writeable
Delete all files named 'sample' (case insensitive) under '/home/user/Series' directory tree with superuser privilege
search for all the ".c" files in the folder "/home/david" which have been modified in the last 10 minutes
display all the text files in current folder
delete all the mp3 files in the home folder
Delete all hidden files/directories under $some_directory
search for the word "methodNameHere" in all the python files in the folder "/mycool/project/" and display color on the matched lines in the output
Find all top-level files in the current folder but ones with name like '*Music*' to the 'dest/' folder.
Find all files/directories with '.bar' extension in maximum 2 levels down the current directory
Recursively change the owner and group of "subdir2" to "user2"
Print file names of all files ending with '*.csv' in  '/home/ABC/files/' directory
Find all *.py files under current directory
Cut off three last symbols from string '1234567890  *'
Set the exit code($?) to '0'.
delete all the files ending with "~" in current folder
Find all *.java files under current directory containing the string 'String'
Print a time stamp for each successful ping to "host"
create directory es if it is not exist and create direcoty LC_MESSAGES
Print the terminal file of the users who are logged in with "admin" in their name
Find and delete all core files in the user's home directory and below.
Lists content of compressed text file.
Print comma separated gaps in file "file" that contains new line separated ordered numbers
Delete all empty directories in the "test" directory tree
Repeat "image.png" 10 times on a single line
Recursively changes group ownership of everything within a current directory to 'repogroup'.
Prints long listing of file 'file.ext'.
Search for the regex ^catalina in the first line of each file under current directory
Find hard links to the same file lpi104-6/file1 in the directory tree lpi104-6
Look for files with wide open permissions
Infinitely print "1" then "0"
Remove duplicate phrases and keep the original order of lines in "$infile"
find the oldest normal file in the current directory
create a md5sum for all the instances of the file MyCProgram.c in current folder
Display the last slash-separated part of each filename path in file.txt
Print appended data in "/var/log/some.log" that match "foo" and "bar"
Find all files/directories under current directory that are 10MB in size
Find all .sql files in the current directory recursively and print their path names separated by zeroes
Create a symbolic lnk named "$1/link" to "$dir"
create directory /tmp/foo
Find all $1 files/directories under current directory and enter into the parent directory of the first one found
Search for "ifconfig" in the output of "history" and print 5 lines that precede and follow
Find all *.jpg files and copy them to /
Add newline before all 2nd and consequent occurrences of '3d3d' in file 'temp' and write each line from the output to files with prefix 'temp' and numeric suffixes
find all directories that names are 'project.images' and display details
Mount remote "smbfs" filesystem "//username@server/share" on "/users/username/smb/share" as soft
Find files in entire file system that are writable by group or other
List all files in the current directory tree that were modified 60 minutes ago
Print "#include" statements found in "file2" that are not in "file1"
Print IP addresses of the host name
grep for the last occurrence of text between two tags
Search the current directory tree for executable regular files
find all the files in the folder "/mp3-collection" which are bigger than 10MB excluding those that start with the word Metallica
Perform case-insensitive search for file `TeSt123.txt' on the system
Finds pattern text ignoring letter case in all .js files, prints matched strings and name of file with that strings.
Find all .sh files in the current directory tree and remove them
Source "lib/B" relative to the directory of the executing shell script, will fail if currently running script is not in PATH.
Filters only directories from long file listing of a current directory, and prints their names.
Search the entire file hierarchy for all regular files owned by olduser and change their ownership to newuser.
Print canonical filename of "/path/there/../../" even if it does not exist
Prepend date to ping output to google.com
Format space separated fields in "filename" as a table
display all the files in the current folder
Find and print the names of all files found in the current directory and all of its sub-directories.
Search the /path directory tree for files that do not have a valid user or group
Remove all files and directories called "test" from the current directory tree
Print all unique file paths under "dir1" compared to "dir2"
Get domain name with 'google' from address $1
Find all regular files whose names do not end in "*.html"
Find all *.ini files
Find all files under current directory
split file /etc/gconf/schemas/gnome-terminal.schemas into pieces per 1000000 lines
List all *.txt files/directories under current directory
Remove files cart4, cart5, cart6 in directory ~/junk
Print the $N'th line from file by replacing commas (',') with newlines
download a file "http://download.oracle.com/otn-pub/java/jce/8/jce_policy-8.zip" using cookies "oraclelicense=accept-securebackup-cookie"
Prints full path to files in a current folder.
Change permissions of "/usr/bin/wget" to 777
Archive "path/to/working/copy" to "path/to/export" excluding files or directories named ".svn"
Sort strings of 'test.txt' file by second from the end field
Exclude directory from find . command
Change all cron jobs running "anm.sh" to be run every 10 minutes instead of 5 minutes.
Find all files under current directory and append a null character at the end of each of their paths
Find all the files that are not named "MyCProgram.c" in the current directory only and without regards to case.
Search for all files in the current directory recursively whose names end with "Linkin Park"
display all the files in the entire file system which have set uid bit set.
Remount "rfs" filesystem "/dev/stl12" on "/system" with read and write permission
Archive "/path/to/files/source" to "user@remoteip:/path/to/files/destination" via ssh on port 2121
Remove all files under /myfiles that were accessed more than 30 days ago
Print information of the process running the current script as the current user
Creates temporary file with name formatted like '.script.XXXXXX' in '/tmp/' folder and saves path to it in 'script2' variable.
Display all files in the current directory tree that match "*foo"
Make directory "TestProject"
Display inputfile all on one line (replace newlines by spaces)
find regular  file named foo.txt under root / directory.
List the files in the /etc directory tree containing text '128.200.34.'
Find apparent size of a target directory
Add "Line of text here" on top of each *.py files under current directory
Find all the files/directories under '/usr/local' directory tree which have been modified within the last day
Find files on the system bigger than 50MB but smaller than 100MB
Search the current directory recursively for files whose size is between 10 and 50 MB
Prints Kb size of all top-level files and folders in a current folder in descending order in human readable format.
Finds string with text "string to be searched" in any cased files like "*.cs" recursively in a current folder.
Find all *.foo files under current directory and print their contents
Removes 55, adds a 10-digit line number, and rearranges the date for each line in "input"
Find all regular files in the current directory tree, except GIT files
Set permissions to 2770 for all directories in the current directory tree
find all the non compressed files in the current directory and compress them.
Sort file "foo.txt" by line to standard output
Rename all .txt files to .bak in the current directory tree
Archive "/home/path" to "path" on host "server" showing progress and statistics and remove files in the destination not found in the source
Find all files/directories named Root under current directory and copy them to newRoot
List environment variables whose name contains "X"
Removes all files from current folder but 3 newest ones
search for all perl files in the folder /nas/projects/mgmt/scripts/perl which have been modified yesterday
Prints long listing of ${0} file.
Lists all subdirectories in the current directory with the trailing slash removed
Find files with the extension .conf in the /etc directory
Recursively removes all files and folders named '.svn' in a current folder.
Displays the count of of each unique line read from standard input
Find all the files under /home directory with name tecmint.txt
display all the directories in the folder /usr/share
Sort standard input in alphabetical order
Copies all files like "*foo*" under the current directory to the '/your/dest' directory.
find a difference between website content of "http://tldp.org/LDP/abs/html/" and "http://www.redhat.com/mirrors/LDP/LDP/abs/html/"
Search regular files from the /path/to/dir directory tree for lines that contain "_START" and are enclosed in lines "@GROUP" and "@END_GROUP"
Pipe output of "yes" to "more" and append the first 3 lines to "file"
Find the total size of *.jpg files within the directory tree ./photos/john_doe
Find all files with name ending with .txt and display only the filenames without full paths
Execute the file utility for each file found under /etc and below
Print line number of each line in /etc/passwd file, where current user name is found
prints absolute file paths for files in current directory
Display differences between /tmp/test1 and /tmp/test2 side-by-side.
Display the 5 smallest files in the current directory and its sub-directories ignoring any empty files.
Find files/directories that have no owner or group under /path
Find all *.plist files/directories under current directory
display the version of find command
find all the php/javascript files in current folder using regular expressions
create a tar ball of all pdf files in current folder
Find all the files whose name is tecmint.txt and contains both capital and small letters in /home directory
Check the environment variables generated by switching to the root account.
Print '-exec is an action so an implicit -print is not applied' for every file/directory found by the name 'file' under current directory tree
Find files that were modified 7 days ago and archive them
Print contents of "file" as space separated hexadecimal bytes on a single line
find all files in the current folder which start with pro
Decompresses file 'xac.bz2', redirecting output to standard out.
find all files that were modified between 90 to 100 days ago in home directory and delete then .
Print the grand total file system disk space usage with block sizes in units of TiB
Search for 'ireg' in all PHP files under 'project' directory tree and show only the files that match
Search the current directory tree for executable regular files
Request IP address for each domain name received on the command input
Remove all files and directories under '/home/foo' directory tree that match with one of the name patterns '.DS_Store', '._.DS_Store' , '._*', '.TemporaryItems' or '.apdisk'
Find all *shp* directories under current directory and move their contents to ../shp_all/
search for a word in all the shell scripts in the current folder and display the matched files.
Find all files/directories not with the name 'query_to_avoid' under current directory
Pushes to the dirs stack directory path of the current script, or current directory path if executed from bash shell.
find files in /tmp directory that named are core and deletes them, single or double quotes, spaces or newlines are correctly handled
find all normal/regular files in current folder and replace a word in all these files
Report all files in /mydir1 and /mydir2 larger than 2000 blocks and accessed in over 30 days
use regex with find command
Set permissions to 700 for directories under var/
Find all files/directories in entire file system that are owned by "syslog" user
find the file "foo.txt" in the current folder and assign the output to a variable
search for all the files with the name "dummy" in the current folder
Print a sorted list of the extensions of the regular files from the current directory tree
Save the user name of the current user to variable "me"
Find all *.html files under current directory
Print 'bla.txt' if at least one file with such name is present below the current directory.
Search the home directory for files accessed more than 10 days ago
Find user daniel's files of type jpeg
Look for any files that were modified 2-5 days ago
bind word "foobar" to key code "\e[24~"
Search the /Path directory tree for files whose pathnames match pattern "/Path/bar*" and whose names match pattern "file_name*"
Print file information of command "passwd"
Save IP addresses of the host name in variable "ip"
Show the subdirectories of the current directory
List all environment variables (name and value) whose name either equals PATH or starts with GOBIN
compresses all the files in the current folder with default depth
Find all directories in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print only unique paths
Find all *.txt files under current directory, change their permission to 666 and copy them to /dst/ directory
search for MP3 files in the current folder and subfolders exclude dir1 AND dir2
Sets shell option 'globstar'.
Find all files in the directory $directory or below with the permissions specificed by $permissions.
display all files in a folder
Find all files in the /home/ directory tree that were last accessed more than 7 days ago
Print the last 10 commands in history
Display differences between files "a.txt" and "b.txt" side-by-side and do not output common lines.
search for the file chapter1 in the folder /work
Find files that were modified more than 7 days ago and archive them
Recursively copy "dir_b" to "dir_a" and delete any new files in "dir_a"
Find a hostname that resolves to IP '173.194.33.71'
display a long listing of all the directories in current directory
Find files and directories newer than CompareFile under current directory
find all the files which have not been modified in the last 1 year and display the total disk usage of them  in GB
show all .cpp, .c, .h, .hpp files in the folder ~/src
Print the total disk usage in bytes of all files listed in "files.txt"
Find all 777 permission files and use chmod command to set permissions to 644
Search  in current directory downwards all files whose size is 10 blocks .
Find all .rpm files and change their permissions to 755
Delete all files with '.old' extension under current directory tree
find all the files in the entire filesystem which belong to the user root and display the ten files.
Find the first file/directory under $DIR which matches the $TMP_DIR in its path
find all raw images in the current folder and pass them one at a time to the xargs command and enable parallel processing of the files
Query about which keys invoke the named function
Send reverse requests to get domain name for each address in 'my_ips' list
Find all .* files excluding list_files (case insensitive) under current directory
List all files in the current directory tree that were last modified on the 3rd of March, 2010 or later
Kills all child process and process itself having id 24901.
Print a randomly sorted list of numbers from 1 to 10 to file "/tmp/lst" and the screen followed by " -------"
Find files/directories modified within the last day under /etc
Find all directories under /home/username/tmp and set their permission to 770
Search all the regular files in the current directory tree for "example"
search for the file foo.txt in the current folder and open it in vi editor
display all the users in the current folder that belong to the group "sunk"
Find all files/directories under ./var/log directory
Disable wildcard expansion and name globbing
Search for 'string' case insensitively in all files under current directory tree and show the matched lines with their filenames
Unzip "path/to/test/file.gz" to standard output and save all lines matching "my regex" to files with a 1000000 limit
Print the contents of "my_script.py"
Search for files that are at least 1.1GB
Find all directories under /path/to/base/dir and change their permission to 755
Recursively rename all files under /your/target/path replacing 'special' with 'regular' - all file/diretory names may not include spaces, and directory names containing such files may not contain the word 'special' in their name.
Display the contents of file 'filename' excluding lines starting with # or empty/space-only lines, waiting for user interaction after each page.
Lists all files that matches path pattern with wildcards.
List all files/directories under current directory with their inode numbers, disk space, permission, number of hard links, user name, group name, size, status change time in Y-m-d format and name filed,  then write the outptut to /tmp/files.txt
Print the last 10 lines of '/var/log/syslog', printing out any additional data appended to the file
Find and delete all hard links in the /home directory to file1
List *.pl directories in the current directory tree
Keep only the last two hyphen-separated sections of "abc-def-ghi-jkl"
Search for 'string-to-find' in all files under current directory tree matching the regex 'filename-regex.\*\.html' in their paths and show the matched lines along with the filenames
Search for files whose size is between 100 kilobytes and 500 kilobytes
Creates temporary file with name formatted like 'emacs-manager.XXXXXX' in '/tmp/' folder and saves path to it in 'tmp_file' variable.
Archive "somedir/./foo/bar/baz.c" to "remote:/tmp/" preserving the relative path of "foo/bar/baz.c"
search for the word "foo" in all the regular/normal files in the directory "/path/to/dir"
Prints directory where the executing script ($0) is located.
Search the home directory tree for files last modified more than a year ago
Recursively find all files in the directory "posns" and split each one into files of at most 10000 lines each
Find all .gif files in the /var/www directory tree
Find all files in your home directory and below that are larger than 100M.
Decompress "file2.txt" and "file1.txt" and print lines in "file1.txt" that match the 5th tab separated field in "file2.txt"
Change owner to "bob" and group to "sftponly" of "/home/bob/writable"
Search the current directory recursively for text files containing at least one character
Page through the contents of 'file', but excess from lines that don't fit within the screen/window width is cut.
Find files that match the executable bit for owner or group
Print the full real path of "/dev/disk/by-uuid/$1" followed by "is mounted"
Find all files with '.conf' extension under '/etc' directory going into at most 2 level deep and show the last 10 of them
Search the directory tree /tmp for regular files using zero delimiter for output
search for the pattern in all the regular/normal files in the entire file system
Find all *.mp4 files under directory named 'working' and show the first one found
Find all files under current directory and print them appending a null character at the end of each file paths
display all the log files in the folder /var/log, print0 is used to handle files with only spaces in their names or which have newlines in their names
Find all files/directories named 'photo.jpg' under current directory tree
Calculate the total disk usage for each ".jpg" file on the system and prepend the system host name to the output
check the type of files in the folder /usr/bin
Measure the disk space taken up by all *.txt files in directory trees folder1 and folder2
Find 10 most recently changed files in the current directory tree
Search the *.code files from the current directory tree for string 'pattern'
Set permissions to 600 for regular files under media/
Display the number of sub-directories for all directories under current directory tree, sort them according to the decreasing order of the number and show only the first 10 of them
find all the files in the current folder that have been modified in the last 24*3 hours
search for all the directories in the current directory and do not search in sub directories
Change to folder where the oracle binary is.
display all regular/normal files in a directory
Find all files under /home/username/public_html/sites/all/modules and set their permission to 640
Get the current shell's executable name from the output of 'ps'.
find all text files in the current directory and display them page wise
Show the epoch in default date/time format
Print all user names and terminals of users who are logged in
download file  "https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh" and execute it
Prints process tree of the current process with parent processes.
Gets domain name from dig reverse lookup.
Prints week day of a 31 day in a current month.
display all empty files(files with sisze 0 bytes) in home folder
Search the /myfiles directory tree for files that are 5 512 byte blocks in size
change the permissions of all the directories in the current folder
search for all the regular/normal files with the name "access.log" in the folder /var/www which are bigger than 100MB
Uncompress and unarchive "data.tar.gz"
Search the current directory and all of its sub-directory for any PDF files being careful to prevent the shell from expanding anything in '*.pdf'  before it'ss passed to find.
find all the ".c" files in the folder "/home/you" which have been accessed in the last 30*24 hours
Search the current directory for files whose names start with "messages." ignoring SVN, GIT, and .anythingElseIwannaIgnore files
Search "inputfile" for lines starting with "t:" and group the results in files with at most 200 lines each
change cgi files to mode 755
Split "input.txt" into files with 1 line each and use a prefix "output." and a suffix length of 5
Force delete all files in the temp folder which have not been accesses in the last 240 hours
Print which files differ in "/tmp/dir1" and "/tmp/dir2" recursively
Recursively finds all files in root folder and prints all strings with 'text-to-find-here' from that files, preceding matched string with filename.
search files  in the file system excluding those in the paths "10_Recommended" and "/export/repo"
find all files in the current folder which are of size 0 bytes.
Search the files under and below /directory/containing/files for "text to search"
Search for 'js' in all files under current directory that match 'some string' in their names
Print lines in the sorted contents of "file2" that are not in the sorted contents of "file1"
find all the files in the home folder which have been modified in the last 7 days
Find files in the "dir" directory tree whose names are 33 characters in length
Disables shell option 'compat31'.
Split "input.txt" into files of at most 10 bytes each with prefix "xxx/split-file"
Save the short system host name to variable "hostname"
find all the regular/normal files in the current folder which belong to the users with the user id's between 500 and 1000
Display mime type of file specified by variable "file"
Display a sorted count of all the characters in "filename"
Search the /Applications directory tree for *.app directories
Look for *.jpg files on the system
Rename file extension '.andnav' (case insensitive) to '.tile' for all files/directories under current directory tree
display all files in the current folder expect text files
Search the current directory tree for executable files and searchable directories
Print each line in parallel in files "tmp/sample-XXX.tim" and "tmp/sample-XXX.log"
Print the grand total disk usage of all files listed in "files.txt"
Find all files/directories under current directory tree whose paths start with './sr' and end with 'sc'
find all regular files  then display the number of occurrences of banana without lines not proper end
Recursively set all permissions under "/directory" to 755
Find all regular files under current directory
Find all the files on the system that have been modified within the last hour
find all the files in the entire file system that have been changed exactly  60 days  and display ten files
run ls command on files found
search for all the files in current folder which start with "file2015-0" and move them to frst 400 fiiles  to another folder
Search all files in the current directory tree that are named "whatever" for "whatever"
display all the header files  and cpp files in the current folder
Search for the regex "\$wp_version =" in all the regular files that end with '/wp-includes/version.php' (case insensitive) in their paths in directories/files taken from the glob pattern '/home/*//public_html/' and show the matched lines along with the file names
Find the directory with least modification time under current directory
Find all files named "something" in the current folder and below and run them through the ls -l command in a one batch.
Look for "testfile.txt" in the "/" directory and 1 level below
Search the current directory tree for regular files whose names begin with "orapw"
Extract any line in "file1" or "file2" which does not appear in the other
Mark variables and function which are modified or created for export to the environment of subsequent commands
display all files in current folder which are bigger than 100KB but are less than 500KB
Find all regular files in the the user's home/mail directory and search for the word "Linux".
Find all *.foo files under current directory and print their contents
Calculate the md5 sum of "yourstring"
find all the findme.txt files in the file system
Replace all instances of "STRING_TO_REPLACE" with "STRING_TO_REPLACE_IT" in file "index.html" and make a backup with suffix ".bak"
simulate a full login of user builder
display all the text files in the current folder  and do not search in the bin directory
search for a word in all the php files in the current folder and display the count of all matching lines.
Search directory tree /srv/${x} for regular files accessed at least 10080 minutes ago, and remove those files
List first 20 files under current directory
Print all files containing "word1" and "word2" in the current directory tree
Recursively change the owner and group of "/var/antoniod-data/" to "antoniod"
List all files/directories under current directory ensuring white space safety
Search the current directory recursively for files last modified within the past 24 hours
Display the first 32 bytes in "foo" as printable characters with 16 characters per line
search for multiple files in the current folder
Search directory trees /usr/share/doc, /usr/doc, and /usr/locale/doc for files named 'instr.txt'
Search directory /tmp/foo for files containing "/tmp/foo/bar" in their full names
Exclude directory from find . command
search for all the regular/normal files in the current folder which start with "my"
For each .def file under the current directory, create an empty .def.out file with current timestamp.
Go to first directory specified in PATH which contains the command 'oracle'
Find deb packages in the current directory recursively
Recursively prints .txt files in current directory
Move all files from "src/test/" to "dest" displaying progress
Find all *.ps files under $STARTDIR
search for the word echo all the bash files(files ending with .bash) in the current folder
Delete all MP3 files under /tmp
Remove all *.txt files, except robots.txt, under the given directory modified more than 5 minutes ago
Search the *.cc files in the current directory tree for string "xxx"
find files under the current directory ending in "txt" and list them, or ending in  "html" but do nothing.
Find all files files under the current directory except *.txt
Find all regular files under $DIR/tmp/daily/, sort them in reverse numerical order and copy the first two files to $DIR/tmp/weekly/
find all the directories in the current folder which begin with the words "kt" and end with a digit
find the file "httpd.log" in the entire file system
Find all files/directories named 'game' under current directory tree
Find all files that aren't owned by user www-data
create a list of all files in all subdirectories
List executable files in the current directory, sort the list and then display the differences between the list and file .gitignore.
List files in directory "one" that exist in directory "two"
Find all files/directories that contain 'packet' (case insensitive) in their names excluding directories that are bigger than 1500 bytes in size
Find all files and directories under current directory without crossing over to other partitions
Search for all files with same inode NUM
Removes all files but 5 newest ones from current folder.
Print common lines in sorted files "ignore.txt" and "input.txt"
Save the current user name in variable "myvariable"
Find files modified within the past 24 hours
Search for the string 'foo' in *.html files under /usr/src/linux directory
Remove containing directories and suffix ".wiki" from specified path, output the result.
Find all files in  /mydir  and replace every occurrences of <string1> with <string2> in those files invoking sed as few times as possible
display long listing of all the symbolic links in the current folder
Grab "variable = value" pairs from a windows style .ini file into the current shell.
Find all directories under current directory and change their permission to 644
display a long listing of all images with the name "articles" in the current folder ( print0 is used to preserve file names with new line in their name )
Find all *.rb files/directories under current directory
Set shell option 'dotglob'.
Delete all .pyc files in the current directory tree
Replace all non-punctuation characters with newlines from standard input
find all the backup files in the current folder and delete them after user confirmation
display all the files in the current folder which contains form feed (^L) and does not contain NULL
Print the list of all files in the current directory except for SVN, CVS, GIT, and binary files
find all  tools generated files  a.out , *.o and core dump files which not required to us these all junk files & delete from  current  directory .
Read one character from standard input into variable 'c'
Change permissions to 0755 for all directories in the /path directory tree
Search the current directory tree for a regular file named "file_name"
find all text files in current folder and display all files that have the alphabet a in their name
Recursively search for all regular files below directory "dir1" in currentd directory, and output the name of each, without any containing directories.
Find all regular files with permissions 777 under and below /home/user/demo/, and change their permissions to 755
Delete all files under and below the current directory
Changes group ownership of '/home/www-user/php_user.sh'  to 'www-data'.
List all files that matches both the case insensitive patterns *$1* and *$2* under /home/musicuser/Music/ directory
Find all index.* files/directories under current directory
Find recursively the latest modified .zip file in the current directory
Print epoch seconds for given time string "Oct 21 1973"
Create hard links of all files and directories matching "test/icecream/cupcake/*" or "test/mtndew/livewire/*" in "test-keep" preserving directory hierarchy
Delete all files/directories named test under maximum 2 level down the current directory
Find all files under "/path" that do not contain a "." and append ".jpg" to their file name
Save the date 222 days before today to the variable 'date_222days_before_TodayDay'
Strips two last sections from the path $pathname, and prints basename of the rest part.
Find all the files whose permissions are 777 in the current directory
Remove all files that end with 'prefs copy' in their names under '/mnt/zip' directory tree
Creates temporary folder relative to directory '/path/to/dir'.
Find all directories in the current directory tree with "music_files" in their names
Delete all files under root whose status were changed more than 30 minutes ago
find the file "filename.txt" in the entire file system
Find all text files in the home directory
Find a 400 permission file under /data directory
create archive "backup.tar.gz" from /path/to/catalog
display all text files in the folder /tmp/1 excluding those which do not have spaces in their names
Print a space separated list of numbers from 1 to 10 with no trailing new line
bind word "pwd\n" to key code "\e[24~"
Find directories named `doc' in /usr and below
Delete all .svn files/directories under current directory
find all the files with the name "datainame" in the file system which are bigger than 50MB
find all the patch files in current folder and copy them to separate folder patches
search for all "tif" images in current folder
Lists all files in a current folder, separating names with comma.
display all the html files in the current folder that have been modified exactly 7*24 hours ago
Search the files residing in the current directory tree whose names contain "bills" for "put"
Search the current directory recursively for the largest files
display files in current folder ending with "pdf" or "PDF"
Print unique lines of sorted file "a" compared with sorted file "b"
download contents from "https://www.npmjs.com/install.sh" and execute
delete all the files ending with "~" in current folder
change the ownership of all directories in the current folder
Search the /root directory recursively for the regular file named "myfile" ignoring "work" directories
search for all the mp3 files in the file system and move them to the folder /mnt/mp3
Find with combine multiple search criterias , in this command serach  files that begin with abc in there name and dont have .py extension .
search all the ".sh" files in the /usr folder and follow the symbolic links to their original file
find all directories in the current directory
Remove the "^M" characters from all *.ext files under /home directory
Find the directories whose pathnames contain "New Parts" at level 3 of the current directory tree and create symlinks to them in /cygdrive/c/Views
Display the last 3 characters of variable foo.
Run commands "df -k;uname -a" on server "192.168.79.134"
Print the given file name's extensions.
Remove files in the current directory tree modified more than 31 days ago recursively
Output lines 16224 to 16482 of 'file', and stop reading 'file' after line 16482.
find all the text files in the current folder expect those which are in the path "sk"
display all the normal/regular files in the directory FOLDER1
Mount "/dev/shm" using /etc/fstab entry
Extract host name part from URL.
get second-to-last comma-separated field of each line in file.txt
Collapse double slashes in variable "dir" into a single one.
Find all *.mp3 files under current directory
Set permissions of all directories under "/opt/lampp/htdocs" to 755
Search the current directory tree for files and directories whose names do not end in ".exe" and ".dll"
Gets IP address of 'en0' network interface.
find all js files under the build direcotry except build/external directory.
From the list of words (one per line) in list1.txt, display the number of occurrences of this word in list2.txt and sort the results from highest to lowest count.
Find all files accessed on the 29th of September, 2008, starting from the current directory
Search for the files/directories that were modified more than an hour ago
Request A record from nameserver $ns for domain name $d, filter strings with domain name and exclude lines matching 'DIG'
Removes all empty folders within $DELETEDIR folder.
Search in the current directory and all sub-directories except ./D for the file named hi.dat.
display all directories in the folder "$ORIG_DIR"
Find all files/directories named 'document' in the entire filesystem
Find files containing string "#!/bin/ksh" and append their names and matching strings to /tmp/allfiles
Read the first 10 characters from standard input in an interactive shell into variable "VAR"
Find directories with permissions 777 and change them to 755 recursively
Keep the last 3 components (directories) of $path
recursively finds all files newer than a date
find all the cpp(C++ source files), java, header files in the current directory
find all files in the file system which belong to the group users and having the word "filename" in their name.
List all files/directories under current directory with 'FooBar' in their paths ensuring white space safety
Numerically sort each line in file "out" and print the result to console
Find all *.$input_file_type files/directories under $source_dir
Sort "file" using a buffer with a size 50% of main memory
Print command line of process with pid 17709
Silently read a single character into variable "REPLY"
Print file system disk space usage
Make directory expanded by $dir variable
Synchronize "/home/user1/" to "wobgalaxy02:/home/user1/" including hidden files
Set permissions of command "node" to 755
Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories
Find all *.c files under and below the current directory that contain "wait_event_interruptible"
Search the current directory tree for files executable by at least someone
Gets back to the foreground a job with number 2.
Print each character in "Hello" as a hexadecimal value
Print the last white space separated field of every line in "file.txt" as a ", " separated list
Search for 'mystring' in all *.txt files under current directory
check find version
Mount "proc" file system on "/var/snmp3/proc"
Find all xml files under current directory
Print yesterday's date information in "%a %d/%m/%Y" format
Returns 0 if user $1 belongs to group $2.
Use multiple -exec command in find . Find all .txt files & grep banna in .txt files .
Create a new directory "existing-dir/new-dir/" on host "node"
List all leaf directories of the current directory tree
Recursively copy directory or file /something on host "myServer" to current directory on local host, connecting as ssh user matching username on local host.
find all the empty in the current folder do not search in sub directories
Removes files ~/.android/adbkey and ~/.android/adbkey.pub without prompting.
Display the content of YourFile.txt, waiting for user input at each page.
find all the files in the current directory which have the size 40 bytes in the current disk partition.
remove all the permissions for others to all the files in the current folder which have  read,write,execute access to users,group and others.
Find all files/directories owned by user 'joebob' under '/some/directory' directory tree
Convert "abc" to a string of hexadecimal bytes
Find all the files without permission 777
Save the logical current working directory to variable "basedir"
Find all files in /tmp whose names begin with the current user's name followed by "."
Compare "fastcgi_params" and "fastcgi.conf" line by line, output 3 lines of unified context, and print the C function the change is in
Find a directory named 'project.images' case insensitively in the entire filesystem and show it in long listing format
find all the files in the current directory and search for the word "pw0" in them.
Find all SUID set files
Print lines 347340107 through 347340206 in "filename"
Find all regular files with 755 permission under current directory tree and change their permission to 644
Save the first word of the first difference in ".dir_list_2" compared to ".dir_list_1" into variable "extract_dir"
Search for 'text' in all regular files under current directory tree
find all directories in the current folder
Search for 'organic' in all files with '.html' extension under ~/html directory
Print all file/directory names without white space safety under the /proc directory
List all files in the current directory tree that were last modified yesterday or later
delete all the text files from the current folder after user confirmation
Find all files that are set group ID to staff
Search for files with "demo" in their names and "sitesearch" in their path names
Numerically sort standard input by the second word of each line and output from greatest value to least value
Save number of strings with $expression pattern in 'foo.txt' to 'big_lines' variable.
Finds all files in a '/path' folder and prints long listing for them.
search all jpg images in current folder and rename them
List all files/directories under current directory by replacing all spaces with commas (,)
display a long listing of the files in current folder which have been modified in the last 60 minutes
Check if content of all top-level *.txt files in the current directory contain only unique lines
create a zip of all the files in the current folder which are bigger than 100Kb and do not go more than 2 levels during search
Search the current directory recursively for regular files last accessed 2 days ago
Search all .c and .h files in the current directory tree for string "e"
search for all regular files in the current directory which have the extension "c" or "asm"
Log into "ubuntu@ec2-XX-XXX-XXX-XXX.us-west-2.compute.amazonaws.com" using identity file "~/path/mykeypair.pem"
Give rwx permissions to the user and group of the directory named "files" leaving others without any privileges
Find all *shp* files/directories under current directory
find all files in the folder /path/to/dir which have been modified between two dates
Search the /home/user1 directory tree for files whose names end in ".bin"
Search the /home/pankaj directory for regular files whose status has changed within the last 5 minutes
find all the files in the current directory which have been accessed in the last 1 day and move them to TMP folder.
Replace all spaces with underscores in directory names under current directory.
find all the files which end with ".deb" and display their base name (strip the extension)
Follow symbolic links for the full path of "lshw"
change the ownership of all regular/normal files in the current directory(print0 is used to handle all the files which have spaces or new lines in their names)
Search the current directory tree for files and directories whose names do not end in ".exe" and ".dll"
Find all .java files whose name contains "Message"
change user and group of the file bin to user and group root:wheel
List the current directory recursively ignoring the "dir1" subdirectory
Kill the processes of user `myuser' that have been working more than 7 days
Change the permission of all regular files under current directory tree to 644
Prints folder where current script is located
Search directory lpi104-6 for files with inode number 1988884
List all files and directories (including hidden) in the current working directory in a long list format sorted by the oldest modification time
Save 'foo' into variable 'bar' in ksh
Variable PID contains a process ID, check if this process exists - resulting exit status from this command will be zero if it does and current user has permission to send it signals.
find all the files in the current folder which which have been modified yesterday and day before yesterday and whose name is of length 1
Move "/usr/bin/openssl" to directory "/root/"
Read one character from standard input into variable "REPLY"
Search for the regex '^ERROR' in all *.log files under current directory
Find all files under current directory that were modified more than 1 day ago
Open a ssh connection to user@host with X11 forwarding to run GUI programs
list all CSS files (and directories ending with “.css”) under the current directory
find StringBuffer in all *.java files, ignoring case
display long listing of all the files in the root folder which are bigger than 3KB
find all empty files in /tmp directory .
Find all files whose names end with "~" in the /home/peter directory tree, following symlinks, and delete them
Removes '/var/lib/mongodb/mongod.lock' in 'sudo' mode.
Report only total size of file systems in terabytes.
finds all directories named CVS, and deletes them and their contents.
Find files under current directory that are not newer than $date_time in regards of modification time
Change directory to the basename of "$1" with ".tar.gz" removed
list all javascipts file which whole name does not contain "directory"
Recursively change all permissions under "theDirectory/" to 777(read,write,execute for all users)
Write the output of "false" to standard output and to "/dev/null"
display all the empty files in the entire file system
Find all files under ${searchpath} that match the regex ${string1}.*${string2}.*${string3}  in their contents where ${string1} etc.. will be expanded
Find all *.dbf files/directories in entire file system
Find files and directories that are at least seven levels of nesting in the directory /usr/src
count the lines of java code for all the java files in the current directory
Remove all regular files in the current directory
Append the current date to variable 'LBUFFER'
Counts lines in each *.php file sorted by file path.
Execute 'echo -e "\033[31mHello World\033[0m"' every without color support 2 seconds
Make directories "es/LC_MESSAGES" as needed and do not error if it exists
Prints full path to files with dot in name in a current folder.
Search for files/directories which have read and write permission for their owner, and group and only read permission for others
Replace all instances of "STRING_TO_REPLACE" with "STRING_TO_REPLACE_IT" in file "index.html" and make a backup with suffix "bak" on OSX
Move all *.php~ (case insensitive) files under current directory to /mydir
Print line number "${linenum}" in file "$filename"
Count the number of times each person is logged in on the system
Display differences between directories repos1 and repos2, ignoring changes due to tab expansion, white spaces and treating absent files as empty.
Print full path of command "c++"
Force create a hard link named '/home/user/Musik/youtube converted/aesthesys~ I Am Free, That Is Why I'"'"'m Lost..mp3' with target '/home/user/Musik/mix-2012-13/aesthesys~ I Am Free, That Is Why I'"'"'m Lost..mp3'
Delete all the .c files present in the current directory and below
Search current directory for any directory named "config" and go to first match found.
Set 644 permission to all regular files under current directory
Force create a hard link named "non_secret_file.txt" to "secret_file.txt"
Search directories /res/values-en-rUS and /res/xml for XML files
print all PIDs of stopped processes
Concatenate with a space every other line in "input.txt"
find not case sensitive all directories that names are 'apt'
Find all files/directories under /path directory that were modified more than 30 minutes ago
Move all files and directories in the current directory to "/foo"
Move all directories in the current directory that match "some-dir" to "x/"
Find all *.ogg (case insensitive) files under your home directory that are less than 100MB in size
Wrap each line in "longline" to a maximum of 30 characters breaking at spaces
find all the files within your home folder accessed more than 100 days ago
Print variable "$opt" with double quotes deleted
Delete all hidden files/directories under $some_directory including $some_directory
Recursively search through directory "test" in home directory, displaying names of all directories without full paths, ie. only the name part following the last slash of each directory.
Read a line from standard input into variable "message" with prompt "Please Enter a Message: " followed by a newline
Find all hidden regular files under /tmp and below
find all the files that have been changed exactly 24 hours ago
split listing of the current directory into pieces per 500 lines named "outputXYZNNN"
List files in the current directory tree using echo
Find all .mp3 files with more then 10MB and delete them from root directory .
Continuously print the seconds since Unix epoch and the ping time to "google.com"
create a symbolic link in current directory named "my_db" to file "/media/public/xampp/mysql/data/my_db"
Interactively create a symbolic link in the current directory for "$SCRIPT_DIR/$FILE"
Find all directories under media/ directory and change their permission to 700
find regular files in the current directory, without descending into sub-directories and display as a null separated list.
Find all files in "/home/" which contain "string1", "string2" or the host name in its filename
delete all the log files in the current folder
Filter the contents of 'file' through sed commands written in 'commandfile', displaying the result.
List the largest file prefixed by its size in bytes of all files under the current directory
reverse input with comma deliminators
display all regular/normal files in the current folder which are not accessed in the last 7*24 hours
ERROR - will overwrite the executable if it's not a symlink.
Check if a drive is mounted to nfs
Find files/directories not changed in two weeks under /dev/shm
Append all PNG and JPG files to tar archive 'images.tar'
Prints file.txt without the last N bytes
Read a single character from standard input with prompt "Are you sure? (y/n) "
change the permissions of all the directories in the current folder
display all the java script files in a folder
find foo, Foo, FOo, FOO, etc., but only files
display all the text files in the home folder ( case insensitive search )
Find regular files larger than 500MB in the current directory tree
List environment variables and their values whose name matches '^\w*X\w*'
Print the list of all regular files in the current directory and below
Remove the files or directories 'bin/node', 'bin/node-waf', 'include/node', 'lib/node', 'lib/pkgconfig/nodejs.pc' and 'share/man/man1/node.1'
Extract the contents of "Input.txt.gz", list the unique first comma separated field prefixed by the number of occurrences
search for files named "WSFY321.c" in a case-insensitive manner
Display a long listing of all directories under '/nas' directory tree
Search the entire file hierarchy for files ending in '.old' and delete them.
Finds all users logged in via ssh.
Print the names of the subdirectories of /usr/local/svn/repos/ prepending "/usr/local/backup" to them
Find all regular files in the current directory tree that are not readable by all
Creae a tarball 'files.tar.gz' containing all regular files under current directory tree that are newer than 2013-12-04 and older than 2013-12-05
delete all the files in the current folder which are bigger than 1KB
Change permissions for all PHP files under the current directory tree to 755 and print the number of files changed
Rename all regular files under current directory tree with inode number 31467125 to 'new_name.html'
Find all the files which are modified more than 50 days back and less than 100 days
Print content of all files found regarding seach options '[whatever]'
Recursively change owner to "tomcat6" of "webapps", "temp", "logs", "work", and "conf"
Find file names *blast* in specfied directory
display the filenames which do not have begin with dot (.)
Find the first file/directory in ... directory and quit
Move all regular files under current directory to ./newdir
long list the detials of all the shell scripts in current directory
Compress every file in the current directory tree with gzip and keep file extensions the same
find all the files (under root file system /) that were updated in the last 24 hours
search for all the files in the current directory which have been modified in the last 24 hours.
find all the files in the entire file system that have been modified between 50 to 100 days and display ten files
Print the list of directories that are present in the /mnt/raid directory tree
Print common lines of files "file1", "file2", "file3", and "file4"
Filter /path/to/logfile for any lines containing the specified date, paging interactively through the output.
Removes 'foo' file.
Find files with 002 permission in entire file system with the null character as the delimiter
Print only group names from /etc/group.
Find regular files in the current directory that are writable by their owner
Find all empty files in the current directory and delete them
List directories in the current working directory and remove the trailing "/"
Print the full path of command "rails"
display all the files in the current folder for the files which have been accessed in the last 24 hours
Remove all files and directories called "test" from the current directory tree
Convert ";" separated list "luke;yoda;leila" to new line separated list
Find all regular files in minimum 1 level down the $dir directory
Replace all occurrences of edx (case insensitive) with gurukul in all *.css (case insensitive) files under ./cms/djangoapps/contentstore/views directory
Delete all hidden files under $some_directory
Recursively copy directories "A" and "D" to directory "/path/to/target/directory" on host "anotherhost", connecting as ssh user matching current user on local host, via default TCP port for ssh (22).
Find any file that has "disc" somewhere in its name in the current directory and all of its sub-directories.
Read a single character from standard input into variable "doit" with prompt "Do that? [y,n]"
Print the second space separated fields from standard input
Search the current directory and all of its sub-directories for the file 'file1'.
find all the files in the home folder that have been modified between 24 to 48 hours
list jobs including its PIDs
Search the current directory tree for files whose names do not end in ".exe" and ".dll"
Make $WEEKS_TO_SAVE+1 directories named "weekly.N" where N ranges from 0 to "$WEEKS_TO_SAVE"
Counts non-empty lines in file fileName.
Sort the contents of file "ips.txt", eliminate duplicate entries, and prefix each entry with number of occurrences.
Find all TXT files on the system and copy them to /tmp/txt
Gets IP address of 'eth0' network interface.
Print content of all files ending with '*.foo' in current directory recursively
search normal files called ' banckup '  from /usr directory downward and print them.
Create a rsa key of 2048 bits with comment "michael" and store it in file "key".
display long list of all the perl files in the current folder
Search for '“foobar”' in all files starting with '‘' and ending with '’' and contain '.' in their names in the entire filesystem and display only the matched files
Removes all empty folders with modification time more that 10 minutes ago from $homeDirData folder.
search for a word in all the fies in the current folder
search for all the regular files in the folder /home which have the permission 077
search files in the folder /home which have been modified after /tmp/after and before /tmp/before
Add the execute and read permission for all and the write permission for the user to the dir_data directory and all of its sub-directories.
Write a random list of numbers to /tmp/lst and stdout.
Invoke a trusted X11 forwarding SSH connection with the server $ssh_server as user $ssh_user
Print the IP addresses for the current host name
Show the list of files that are not owned by user wnj or are not newer than file `ttt'
delete all the tmp files ( files with the extension tmp ) in the /tmp folder
delete all text files in the home folder after user confirmation
Move all the .c files from the current directory tree to temp/
Replace spaces with underscores in the names of all files and directories in the "/tmp" directory tree
Count the number of areas that differ in "file1" and "file2" with 0 lines of unified context
Output all lines in 'file' which contain a tab character.
find all the html files in the current folder and delete a line
Copy all .patch files from the current directory tree to patches/
View the bash manpage, starting with the view positioned at the first occurrence of the expression "BASH_SOURCE".
Find all *.xml.bz2 files under current directory
List all empty files in the current directory tree
Lists '/tmp/hashmap.$1' file or folder '/tmp/hashmap.$1' content one file per line.
Search for the string 'magic' in all regular files under current directory tree and display long listing of them
List all files under and below the directory given as variable $ARCH1
Request that the master ssh connection "officefirewall" exits
Prints the file path composed from the path where symlink target file is located, and name of the symbolic link itself.
Print which files differ in "PATH1/" and "PATH2/" recursively excluding any files that match any pattern in "file1"
Allow all users to execute '$pathToShell"myShell.sh"'
copy the file header.shtml to each directory under dir1, dir2, dir3, or dir4
Search the current directory tree for files whose names end in "rb" or "js"
Split "file.tar.gz" into files of size 1024 MB with a prefix of "file.tar.gz.part-"
Find all files under current directory
dispaly all the empty regular/normal files in the current folder
Find all files starting from the current directory that match regular expression '.*Message.*\.java'
Find and uncompress all files in the current directory tree ending in ".csv.gz"
Replace ",," with ", ," in "$file" and display the "," delimited result as a table in "less" with a shift value of 5 and line numbers
Find all regular files starting from the current directory
Gets IP address of first network interface which name matches pattern "venet0:0\|eth0".
Add the .abc suffix to the names of all *.txt regular files in the current directory tree
search for the word "foo" in all the regular/normal files with the name "file-pattern" in the directory "/path/to/dir"
Get files that last had their meta information changed more than 3 days ago
Rename file ~/junk/cart1 to ~/junk/A
Recursively print all files and directories in the current directory tree including hidden files
Delete all files/directories older than 48 hours in /path/to/files* paths
Print  "Cannot acquire lock - already locked by " followed by content of $lockfile file
Search the current directory tree for .VER files
Search the local subdirectory tree of the current working directory and the /tmp directory tree for directories named mydir
Display differences between file1 and file2 side-by-side.
Find all .c and .C files in the current directory tree that contain "main(" and copy them to directory test1/
Print numbers from 1 to 10 with 2 values per line
create an archive excluding files matching patterns listed in /path/to/exclude.txt
List all files and directories residing in the current directory and below
Saves date of the first Sunday in month $mo of year $yo in the 'do' variable.
Create tar.gz files older than one day logs
add read permission to others for the files in the current folder having the name "rc.conf" in their name.
Decompress and sort "$part0" and "$part1" of files in different processes
Search the ./in_save directory for regular files and view the result using pager `more'
Copy all files with '.png' (case insensitive) extension under '/home/mine' directory tree to '/home/mine/pngcoppies/' directory with new names constructed by prepending 'copy' in their names
Find all .svn directories under current directory and delete them
display all files in current folder ending with "~" or "#" using regular expression
Find all regular files under current directory tree containing 'some text' in their names without descending into hidden directories and excluding hidden files
Send one ping request to host whose name or IP address is specified by variable "ip", using network interface eth9.
Receive pattern to search for on the standard input and print only matching part of lines from file 'f.html'
Remount "/dev/sda7" partition as executable
Find files/directories named 'file.txt' that belong to user 'tutonics' in the entire filesystem
Print paths to all subdirectories inside of a directory
list the details of all the directories in the current folder
Find files with inode number 199053
Calculate md5 checksum of $line and save to variable 'md5'
Remove leading and trailing spaces or tabs from "$string"
Remove all regular files found in and below /path
Find all Read Only files in entire file system and show a few lines of output from the beginning
File "files.txt" contains a list of files, copy all files listed to host "remote", connecting as ssh user "user", and copying the files to this user's home directory - this will not work with files/directory names containing spaces.
Sets shell option 'nullglob'.
Create a symbolic link in directory "new" for each file in "original" directory tree
Print a count of duplicate lines in "filename" sorted by most frequent
Search all of /usr for any directory named 'My Files', for each directory found, copy it to /iscsi preserving full paths and attributes, then remove it.
Find executable files
Find out all files owned by user vivek
Print the names and sizes of regular files residing in the "tmp" directory tree
find all the configuration files in the file system
find all the directories with the name "DIRNAME" in the current folder and force delete them
Perform a default Plesk configuration
Find all directories in the current directory tree that were last modified more than 5 minutes ago but less than 60 minutes ago
List current user's crontab.
find CSS files, omitting results containing "CVS"
Remove all .mpg files in the /home/luser directory tree
List all files except for those in directory SCCS
Print the list of files and directories of the current directory including "."
Find all files named 'Makefile' in the /usr/ports directory tree and count the number of lines in them matching regular expression '^MASTER_SITE.*CPAN'
Split "date.csv" into files with at most 100 lines each
Print the list of all directories under the current directory and below
Read a line from standard input into variable "i" with the prompt " Again? Y/n "
copy all the mp3 files from current folder to another folder
Print every three lines of "file" as a comma separated line
Read a line from standard input
create an archive using 7zhelper.sh as a compress program
Save number of lines in 'file.txt' file in 'nbLines' variable
Find recursively all Python files in the current directory and search them for the word ‘import’
Print 3 newline separated "y"s
forcibly change owner to all files and directories in current directory to user www-data
Find every directory under "0001" and make new directories replacing "0001" with "0002" at the beginning of their names.
Recursively change the user and group of all files in "/var/lib/jenkins" to "root"
Prints all Saturday days of a current month.
Print the names of all files and directories in the current directory tree
Pass a wildcard to scp by escaping it: copy all files with names starting with "files" in directory "/location" on host "server" to current directory on local machine, displaying debug info and preserving timestamps and permissions on copied files.
Search the current directory recursively for files writable for `others'
Filters unique lines by matching against the first column of a .csv file
Find files/directories named 'aaa.txt' under current directory tree
Print the IP address of your SSH session
Stores system load average number in the 'proc_load_average' variable.
SSH using parameters in $@ in master mode in the background without executing any commands and set the ControlPath to "$MASTERSOCK"
Find all files under /path and calculate their md5sum
Get a sorted list of the longest line with line number for each file under current directory
Find broken links
Search the current directory tree for files whose names begin with "my" and end with "p" followed by any character, ignoring path names containing "test"
Find not-executable files under /home/www
change the permission of all the regular/normal files in the current folder from 777 to 755
Write the lines appended to "xxxx" as it appears to the console and append to "yyyy" in the background
Prints long listing of directories "./my dir" and "./anotherdir" sorted from oldest to newest, with appended indicators.
Delete empty regular files
Delete all broken symbolic links under '/usr/ports/packages' directory tree
Remove all *.swp files under current directory ensuring white space safety
Compare the contents of gzip-ompressed files "file1" and "file2"
Recursively finds all '*.pdf' files in a current folder and removes them without prompting.
find all the directories in current folder which start with test
Delete all files named "filename" in the current directory tree, except those with paths ending in "/myfolder/filename"
find all normal/regular files in current folder which end with "~" or which begin and end with "#" and and and delete them
Find regular non-hidden files containing `some text' in their names with hidden directories optimization
Recursively change the owner and group of all files in the current directory to "apache"
Get only the latest version of the file 'filename' under current directory
display the contents of all the files in the current folder which start with test (case insensitive search)
Print the first line of output after alphabetically sorting the file "set"
display all files which have been modified between two dates in current folder
Recursively print all files and directories in the current directory tree
delete all the text files in the current folder
Find files in the current directory and below that are less than 500 kB in size
Find all files/directories that contain the string literal '`$VERSION`' in their names under current directory tree
search for the file "myletter.doc" in the home folder
Print concatenated content of all files ending with '.foo' under the current folder
search for the file ".user.log" in a folder
Delete all regular files with '.txt' extension that were modified in more than 25 minutes ago in maximum 1 level down the directory '/home/u20806/public_html'
Count the number of equal lines in "file1.txt" and "file2.txt"
Removes 'latest' folder if empty.
find all the normal/regular files in the current folder which have been accessed in the last 24 hours and display a long listing of them
update the permission of all the php files in current directory and save the output to a file
Search all *.c files from the current directory tree for "hogehoge"
change the ownership of all the files in the file system from edwarda to earnestc
Recursively set all permissions under "/whatever/your/directory/is" to 755
Find all hidden files
Run .makeall.sh in an empty environment.
Make directories "/tmp/A", "/tmp/B", "/tmp/C", and "/tmp/ dir with spaces"
find all files in the file system which belong to no user or which have no user
Save absolute path of "$path" that must exist along with all parents to variable "abspath"
Move all files and directories in the current directory to "/foo"
Count the number of differing lines in "file1" and "file2" with 0 lines of unified context
search for all the jpg files in the folder "/mnt/hda1/zdjecia/test1/" and copy these files to the folder  /mnt/hda1/test/<same name as the found file>
display all the files in the current folder which have been modified in the last 14*24 hours
Change the owner of "/var/www/html/mysite/tmp_file_upload/" to "nobody"
Check if process ID 1 exists (init or systemd) and current user has permission to send it signals.
Find all the files/directories under '/var/adm' directory tree that have not been modified in the last 3 days
Print the current directory name without full path
Print whether the unique contents of "set1" and "set2" differ
find all the files in the current folder which have been modified for the ffiles that are at least one week old (7 days) but less then 30 days old
Find all files/directories named 'Waldo' under 'Books' directory tree that is located in user's home directory
Gets IP address of ${NET_IF} network interface.
Display all lines contained in 'dax-weekly.csv' in reverse order.
Numerically sort each line in file "bb" and output the result to console from greatest value to least value
Show files in maximum 1 level down the current directory that were modified less than 1 day ago from today
Opens gcc info manual and goes to a node pointed by index entry "funroll-loops".
Create symlinks to all  /home/folder1/*.txt files with the same name in current directory
Print numbers from 1 to 30 with equalized 0 padding
Show the date in default format for tomorrow + 2 days + 10 minutes
List all files under the current working directory tree
Find all files except files with '.gz' extension in the current directory non-recursively and compress them with gzip
search all undo files(ending with .undo) in the current folder and calculate the total size of them
find all the files that were modified two days ago
Send each byte in "/home/cscape/Desktop/file" to awk script "x.awk"
Find all regular files under test directory
Enables shell option 'promptvars'.
Delete all .svn directories under current directory
display all the regular files in the current folder that are bigger than 10KB
Delete all 1US* (case insensitive) files under current directory
Change permissions of ".git/hooks/prepare-commit-msg" to 777
Find all directories recursively starting from / and skipping the contents of /proc/, and count them
Search directories /opt, /usr, /var for regular file foo
Find all files/directories under /var/www/some/subset and change their owner and group to www-data
Search the .java files from the current directory tree for TODO lines
List all *.txt files/directories under /etc
Find smallest file in the current directory with find commad
Find all files/directories in entire file system that have  "write" bit set for either the owner, the group, or others
Find all directories in maximum 2 levels down the /tmp/test directory
Remove all .gz files in the current directory tree
Find files under /usr that are the same age or older than file `FirstFile'
Removes all empty folders under current folder.
Print the file sizes along with their paths for all *.txt (case insensitive) files/directories under current directory tree
Scan every file in /etc for IPV4 addresses.
Find all directories under $1/.hg and set their SGID bit
Join comma-separated data in file1 and file2, including extra non-matching information in both files.
Find all .c, .h files in the current directory tree and search them for string "expr"
Find all aliencoders.[0-9]+ files under /home/jassi/ directory
display the number of lines in all the php files in the current folder
find all the files in the home folder which have been modified after a file
Print continuous lines of 100 random characters either "." or " "
Unzip and extract "*\(userAgent=[^=]*\) [^ =]\+=.*" from "input.gz"
Find all regular non-hidden files in the current directory and its subdirectories
Find files/directories in entire file system that were modified a day ago
List all files in the current directory tree that were modified less than 60 minutes ago
Create a symbolic link named "~/bin/subl" to "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl"
Counts all lines in $i file.
Find all directories in current directory without going into sub-directories
Search directory trees foo and bar for .java files
Archive current directory to "/some/path" on localhost, using ssh to authentify as user "me", only update files that are newer in the source directory.
Read a line of standard input with prompt "Enter the path to the file: " and suggestion "/usr/local/etc/" and save the response to variable "FILEPATH"
Find all *.c files located under /home and below
Find all directories under current directory
Copy recursively "tata/" to "tata2/" and remove read, write, and execute permission for other
Find all *.tex regular files under current directory
View history using "more"
Replace 'company' with 'newcompany' in all files under current directory and keep backups with .bakup extension
search for a word in all the files in the entire filesystem and display the matched fline along with the file name
Create a symbolic link to "$file" named "/tmp/allfiles"
Set variable 'vara' to 3
find all files in the current directory and sub-directories that were modified after the /etc/passwd file was modified
Recursively change the owner to "$USER" and group to "$GROUP" of "/var/log/cassandra"
find all *.java files/directories under current directory
recursively change owner and group of the directory  /vol/html and all files into it to user ec2-user and group apache
Print the current default full path of the "java" executable
Recursively finds all "*.pas" and "*.dfm" files and prints strings with "searchtext" ignoring text distinctions, suppressing error messages, highlighting found patterns and preceding each found string with file name and string number.
Search the /path directory tree for regular files
find all the files in the current folder which do not have the read permission
Find all files under /home/mywebsite/public_html/sites/all/modules and set their permission to 640
Print the list of files in the current directory tree skipping SVN files
find all files which name contain 'foo' and path is not dir1 or dir2
Removes empty folder 'symlink'.
Find all regular files with case insensitive pattern '*$1*' ($1 expands to first positional parameter and falls back to empty string when not given) under current directory tree and execute a command given by $2 (falls back to 'file' command when $2 is not given) with each of those files as arguments
Search the current directory tree for regular files that were changed $FTIME days ago
Check all .txt files whether they contain "needle"
List all regular files in the current directory tree modified within the last 24 hours
Print '"HTTP/1.1 200 OK', two new lines and the current date
Unzip and untar "file.tar.gz"
Find x* files/directories under /tmp directory whose status was changed less than 1 day ago and move them to ~/play
Write out the entire directory hierarchy from the current directory
replaces the last occurrence of 'a' with 'c' in file
Delete all '-' character from $1 and save the resultant string to variable 'COLUMN'
Find SGID files
Find all files and directories on the system whose name is `filedir'
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and "en" and "es" directories
Gets MAC address of en0 network interface.
Enable history and history expansion within a script
Print position number of day '9' in fourth line of calendar output for September, 2009.
Print file system disk space usage and grand total for the root file system with sizes in powers of 1000
Print unique lines in "file_a" and "file_b"
display all the files in the folder /home which do not belong to the group test
Identify CMS version/releases accross all your PHPBB installations
Search for "foo" in every file in the current directory and number the output
Find all files under /home/feeds/data without descending into *def/incoming* and *456/incoming* paths
file1.txt and file2.txt both contain a name and a number on each line. For each name whose corresponding number does not match in both files, display the "Age of ... is different" message.
Delete all regular files with '.cache' extension that were accessed more than 30 days ago under $HOME/Library/Safari/Icons directory tree
create symbolic links in current directory to all files located in directory "/original" and have filename extension ".processname"
List all files in the /myfiles directory tree
Find all *.foo files under current directory and search for 'bar' in those files
Rename recursively all files in the current directory tree that are called "article.xml" to "001_article.xml"
Print absolute path of "PATH"
search for the word "foo" in all the regular/normal files in the directory "/path/to/dir"
find all the empty regular/normal files in the current folder and delete them
Find files/directories in entire file system with at least 644 permission
create directory destdir
Find all .gz archives in the current directory tree and check if they are valid
search  in root  ( / ) directory downwards all files which have less than 2 links.
Search the src/ directory recursively for .c and .h files
Find the file in the current directory tree with inode number $inum and delete it
Find files/directories greater than 10MB in your home directory
Execute command "$cmd_str" on host "$SERVER" as user "$USER"
Write "suspend" to standard output and to file "/sys/bus/usb/devices/usb3/power/level"
find for xml files in current folder using regular expressions
Print "*Checking Partition Permission* Hostname=$(hostname) LastChecked=" followed by the current date
Copy all files matching "*.sh" in "$from/*" to "root@$host:/home/tmp/" compressing data during transmission
Find files in entire file system that are writable by group or other
display in a list of all the files that are bigger than 10KB in current folder
Serach for all the files starting with grep in man pages
List all files that have not been read in thirty days or more
Copy all files in current directory that do not match */exlude-path/* in their paths to /destination/ preserving directory structure
Find all files under current directory excluding hidden directories
List all .svn files/directories under current directory
Print the base name of the current working directory
Find files that were modified more than 7 days ago but less than 14 days ago and archive them
change owner and group of the file uid_demo to user and group root
Change the owner of "/var/www/html/mysite/images/" to "nobody"
Find all directories under and below parent_directory
Find files in the current directory tree whose names match regular expression "^.*~$\|^.*#$"
Remount "extX" filesystem "/dev/hdaX" on "/" without writing in "/etc/mtab"
Change the owner to "user" and group to "group" of files "file ..."
Format bash array "${arr}" in columns
Prints path to folder that contains target of the symbolic link ../../../../etc/passwd.
Reversibly sorts content of the '${TMP}/${SCRIPT_NAME}.name' file
Print out ln commands for each file in /home/folder1/*.txt that can be run to create symlinks appending '_CUSTOM_TEXT.txt' in their names
find all the files in the folder Musica and display them in a single line null separated
Print a single line of numbers from "001" to "010"
Save the user name in all capitals of the current user to variable "v"
Find regular files named 'findme.txt' under '/usr' and '/home' directory tree
Read a line from standard input into variable "message" with the prompt "Please Enter a Message: $cr"
search for all the files in the current directory which belong to the user "xuser1" and change the owner ship of them to "user2"
find all the directories in the current folder and create the same directory structure in a remote machine using ssh
Find all CDC* files under current directory that were accessed less than 1 day ago and delete the first and last lines from those files
Create new crontab set for user 'test' including $job and only jobs from current crontab of 'test' user that don`t contain $command
Search the current directory and two levels below for file `teste.tex'
Locate files whose status was changed less than 1 day ago
list files in /usr modified after the time which /tmp/stamp$$ modified
Remove all empty files in /tmp/ and below
Find files newer than `tmpfile' starting from the current directory
Search for 'foo' in all the java files under 'dir1', 'dir2' and 'dir3' directory tree and print only the names of the matched files
display all the files in the home folder
Create a symbolic link named "foo" to "/var/cache/apt/archives/bash_4.3-14ubuntu1_amd64.deb"
Archive "./dir" to "user@host:/path" via ssh on port 2222 and display progress
Move "tobecopied/tobeexcluded" to the current directory
Merge colon-separated information from standard input and file1.txt where the first field of both files matches, print unpairable lines from standard input, replace missing fields with "no-match", and output the second field from standard input and the second and third field from file1.txt
Search the current directory tree for all .java files newer than the file build.xml
Find files bigger than 20 megabytes in the home directory tree
display all the regular files in the current folder that are exactly 10KB
list all java file that StringBuff in context.
Set the environment variable "DISPLAY" to the system host name followed by ":0 skype"
Adjust the timestamp of file $filename by subtracting 2 hours from it
Find all files/directories under minimum 1 level down the $FOLDER directory and sort them
Generates default-formatted file name of temporary file in a /dev/mapper folder, and saves path to it in a variable 'MAPPER'.
find all the files that have been modified exactly 2 days ago
Search the /path directory tree for files lacking the group writable bit
Move files from $sourcePath to $destPath that have not been modified in the last 10 days
List the files in the /etc directory tree containing text "old1.old2.co.com"
list all javascipts file expect files under proc folder
Save the md5 sum hash of "$my_iso_file" to variable "md5"
Rename file "edited_blah.tmp" to "/etc/blah"
Find all the files on the system that have been accessed within the last hour
Search for 'some string' in all *js files under current directory and show the matched lines with line numbers
Find files whose content was modified at least 1 minute ago
Search for files which have read and write permission for their owner, and group, but which other users can read but not write to.
display all file in the home folder except ".c" files
Count the number of .gz files in directory tree /home/user1/data1/2012/mainDir
Make directory "foo" and do not cause an error if it exists
Find directories in the current directory recursively that are not "executable" by all
Find all Read Only files in the file system
Delete all files under /path/to/input/ that match the case insensitive string literal 'spammer@spammy.com' in their contents
Make directory "dir1"
lists txt or html files older than 5 days, null separated
Recursively change the owner and group of "subdir1" to "user1"
Find all the files which are modified in last 1 hour in entire file system
Find *.jpg screenshots that are bigger than 500k
Print unique lines of sorted file "b" compared with sorted file "a"
Print full date of yesterday
Prints directory where the executing script ($0) is located.
Search the /path/to/directory tree for regular files modified 61 days ago and then remove them
Give a long listing of all the  *.pl files (Perl files) beneath the current directory.
find all the core files in the entire file system and  delete them
Set permissions to 500 for directories under the current directory
Recursively set all permissions under "/folder" to 755
Find all files/directories named 'FindCommandExamples.txt' under '/root' directory tree
Search the current directory recursively for regular files last changed 2 days ago
Delete all regular files named 'IMAGE1806.jpg' under current directory tree
Mount "ext4" filesystem "/dev/xvdf1" on "/vol"
Print file information of the executable file of command "g++"
Find all directories on the system whose size is greater than 50k
Calculate and show md5 sums for every files under current directory tree
Find all files under current directory with their size and paths, reverse sort them numerically, then print the 2nd field (with space as the delimiter) of the first 4 entries
find all the xml files in the current folder except those that are present in the workspace folder and create a tarball of these files
Remove all directories called "test" from the /path/to/dir directory tree
Finds out what groups a current user has.
Find files/directories named 'TEST_3' under current directory tree
Find all MP3s in the /home directory tree
Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and no permission for other for those directories
show all directories in the current folder excluding those that are present only in the paths ./media, ./images and ./backups
Read a line from standard input with prompt "Continue (y/n)?" and save response in variable "choice"
Find all regular files starting from level 3 of directory tree ~/container and move them to the current directory
display all the files in current folder which are bigger than 10KB
Create a symbolic link in the current directory for each .jpg file under "dir"
Print appended data in "file" that match "my_pattern"
Find all SUID files in entire file system
Print differences between files in directories folder1 and folder2 recursively, with unified context, ignoring changes in the amount of white space
Answer "y" to all "Are you sure?" prompts from command "cp * /tmp"
remove all the files in the current working directory which have a specifc inode number
Write output of "ls -lR /" to standard output and to "output.file"
display the base name(name without extension) of all the ".NEF" files in the current folder
Search for files only that end with .php and look for the string $test inside those files
Find all files residing in /home/dm/Video or below that were changed less than 7 days ago
Calculate the md5 sum of "a"
find all the direcories in the current folder
Display the files/directories under current directory tree matching the regex '/$prefix$ypatt' where $prefix and $ypatt expands in the current shell
find all the files (under root file system /) that were changed within the last 24 hours
Recursively change the owner and group of "~/.ssh/" to "dev_user"
Prints process tree for each process owned by user 'username'.
Display "/tmp/file" as a table of width 30 with columns filled before rows
prints the last non-empty line of a file
find all the reglar files which ahve been changed in the last 5 minutes and do not search in the sub directories.
Save the list of all .py files under and below the current directory that contain "something" in their pathnames to output.txt
find a 'fool.scala' named regular file under /opt /usr /var those directories.
Print space separated list of numbers from "$start" to "$end"
Search the system for the file “testfile.txt”
Append the current date in '%d%m%Y-%H-%M' format, '_' and the current username, then save it in 'name' variable
Search the files in the current directory tree for lines containing string "vds admin"
Change permissions of all directories residing under and below ./debian to 755
Find all files whose name or type description includes "text", display only paths to files.
Find file `foo.bar' and delete it
find  files which full path name is /tmpfoo/bar under foo directory and print
Save the FQDN host name of the system in variable "hnd"
Print the list of all files except files named BBB
Create 998 directories one inside another with sequential names folder1, folder2, ... folder998 and create an additional folder named 'folder9991000' inside the last 'folder998' directory
search for the word "nameserver" in all the regular/normal files in the /etc directory and display the name of the file along with the matched line
Save the user name of the current user to variable "me"
Find symbolic links in /usr/lib and /usr/lib64 to files whose pathnames contain "libstdc++"
Get the directory with least access time under current directory
Save long listing of all files listed in file 'filenames.txt' to 'listing' variable
Recursively finds all files with any cased text "Text" in a current folder, and precedes found string with its number in file.
display the directory name along with the modified time  for all the files /var
Show the list of files modified less than a minute ago
Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar
get the count of all the files that have been accessed in the last 30 days
list all javascipts file which whole name does not contain excludeddir
display all scala files in the directory "src/main"
List all existing environment variables in the current shell.
find all regular files exclude .o and exclude *.swp and output line number of soc_attach if it has
Remove all *.log files from the current directory tree
Move all directories from the `sourceDir' directory tree to the `destDir' directory
Change permissions of all directories from the current directory tree to 644
For each item in array "alpha", display the basename, that is the part following the last slash, or the whole item if no slash is present.
SSH into "hostname" on port 22 as user "myName"
List the 10 largest files or directories and their sizes under (and including) "/var"
prints the names of all files in the directory tree rooted in /usr/src whose name ends with ‘.c’ and that are larger than 100 Kilobytes.
find all the files in the current folder which have the word cache in them and do not search in the sub directories of the folder.
Fetch a script from the web and interpert (run) it in the current shell, without writing the script to disk.
Print and delete all directories named 'work' under '/usr/ports/' directory tree
Copy "src/prog.js" and "images/icon.jpg" to "/tmp/package/" keeping relative path names
Create an archive named newArch from the contents of ./test directory
Recursively finds all bzip2 compressed files in a current folder and decompresses them.
find files in home directory which are modified yesterday
delete all the files in the file system which belong to the user edwarda
Print characters 2 through 4 of "abcdefg"
Search the current directory tree for files whose names do not end in ".exe" and ".dll"
Find all PHP files under current directory that contain only one non-blank line
Print a colon-separated list of all directories from the $root directory tree
Print all lines from the last occurrence of the regex 'pattern' to the end of the file 'file'
find all the files in the current folder which end with .o or with the name a.out and display them.
display all files ending with ".ext" in current folder and append the file contents of list.txt and sort them based on name and display only uniq items
Find the first file/directory under current directory and quit
find all the files in the current folder which are bigger than 10MB and less than 50MB
Delete all hidden files under $some_directory
Print the /proc directory tree, ignoring the PID-process things
Run 'join' with the number-sorted output of file1 and file2, without modifying file1 or file2: for each line with a common first field in file1 and file2, output the common field followed by the extra fields in both files.
Search for 'example' in all regular files under current directory tree and also print the filenames
Print the names of any differing files in directories "dir1/" and "dir2/"
Saves 'tmux' version in the 'tmux_version' variable.
Copy the executable "python2.7" in $PATH to "myenv/bin/python"
Find all *.txt files under the current directory whose names are not "File.txt"
Show manual of the find utility
find all files  the current folder which have not been accessed in the last 7 days and which are bigger than 20KB
Find all files/directories named 'date' under /usr
Print all '-' separated digits in file 'infile' as dot ('.') separated digits
Remove all directories in and below the current directory
Recursively finds all *.dbf files from the root folder and prints list of folders with such files.
Find '*prefs copy' files under /mnt/zip and delete them with confirmation prompt ensuring white space safety
delete all the files which start with "Tes" in the current folder
Recursively changes group ownership on every file in the ${WP_ROOT}/wp-content directory to ${WS_GROUP} group.
Removes the last 2 lines from a file
Search for all files owned by user www-data that are not larger than 100kb
Variable PID contains a process ID, send SIGTERM to this process if it exists.
Create a symbolic link in directory "/path/to/dir" for each file and directory under the current directory starting with "."
Find all filenames ending with .c in the current directory tree
find all files in the current folder with the permission 777 and modify the permissions as 755.
Remove all files in the ~/backups/mydatabasename directory recursively that were last modified more than 30 days ago
Execute python script "test.py" with "LD_PRELOAD=./linebufferedstdout.so" and write the output to console and append to "test.out"
Find all files/directories with name pattern $nombre that are at most 2 levels down the $DIR_TEMPORAL and $DIR_DESCARGA directories and show only the file names (without parent path) appended with '.torrent'
Find all directories under /home/me/"$d"
Split "abc.txt" into files with at most 1500000000 bytes each and use prefix "abc"
Reports count of processors in system.
Archive all *.xml files under current directory tree to xml.tar excluding the files that match '/workspace/' in their paths
Download "http://archive.ubuntu.com/ubuntu/pool/universe/s/splint/splint_3.1.2.dfsg1-2.diff.gz", unzip it, and view the output in "less"
Search the current directory tree for .aux files
Print a single line of numbers from "001" to "010"
Execute "date" every second
Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/
find all the regular/normal files in the /path folder and delete them
Find out all *.sh owned by user vivek
Find all $2 files in $1 path excluding /proc and search for the regex expanded by $3 in those files
Print the contents of "order.txt"
Find all regular files in the current directory tree ignoring directory ./source/script
Find all directories under and below /root that match pattern "*linux*", case insensitive
display all jpg files in the current folder
remove all the pdf files in the current folder and do not delete those in the sub folders
Find all files/directores that are newer than /etc/motd and conain the string 'top' at the beginning of their names under user's home directory tree
print top 10 largest files and directories
Remove lines matching "kpt#" from "data.txt" and add left-justified line numbers
Find *.conf files/directories only upto 2 levels down under /etc directory and show a few lines of output from the end
Search for files "file1" or "file9"
List files larger than 9MB residing in the current directory and below
Find all files that belong to user root
Print the full path of executable "lshw"
display the help of find command
Find all files/directories that are owned by user 'takuya' under current directory tree
Change the ownership of all files in the current directory tree to myuser:a-common-group-name
Print file information of command "bash"
List directories under current directory
Find all files that are set user ID to root
List current directory, waiting for user input at each page.
Copy '/path/to/source' from remote "username@computer" to local "/path/to/dest"
display all the configuration files in the current folder which are in the current tree structure
Send SIGHUP (hangup) signal to all parents of zombie processes.
Delete all regular files named 'FILE-TO-FIND' under current directory tree
Find all files/directories named 'FindCommandExamples.txt' that belong to the user 'root' in the entire filesystem
display all the regular/normal files in the folder "/home/user/demo" which have the permission 777.
Read hexadecimal bytes from device "/dev/midi1"
Search the system for regular files whose names are "filename" ignoring the case
Search the current directory tree for regular files omitting directory `omit-directory'
Search  in current directory downwards all files which  have not been accessed since last 7 days
split content of the files *.txt beginning with 1001st line into pieces per 1000 lines
find directories in the folder /usr/spool/uucp
Follows symbolic link $BASH_SOURCE, and prints path to its target.
find file which case-insensitive name is foo in current directory.
find all the png files in the current folder which are present in the pattern list search .txt
change the permissions of all the directories in the current folder, print0 is used for handling files with newlines in their file name
Find the password file between sub-directory level 2 and 4
Find all files/directories that are newer than 'ttt' by modification time or owned by the user 'wnj' in the entire filesystem
list all *.txt files in the user's home directory.
Print login information of all users except the first two and replace all instances of " " with ", "
find all the files in the current folder that end with the word bar
Search case insensitively for 'foo' in all the files with '.java' extension under current directory tree and show only the file names
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way
Print unique lines in sorted file "a.txt" compared to sorted file "b.txt"
Save directory "../../lib" relative to the executable "gcc" to variable "libdir"
Find all files/directories that belong to the group 'staff' under '/usr' directory tree
Search the regular files of the current directory tree for string "texthere"
Print file type of the executable file of command "file"
Display who is logged on and what they are doing
find the type of all the regular/normal files in the current folder
Remove all files with names like "vmware-*.log" from the current directory tree
Search everywhere for files changed within the last minute
search for the directory "config" in the current folder and change directory to it
Lists all directories in a current folder.
Find all loadable modules for current kernel, whose name includes "perf"
Find all *blue* files/directories under /myfiles
Find files/directories in entire file system newer than myfile
find files which do not have all permissions to all the users in the current directory
Find all files under /somefolder matching the case insensitive regex '\(.*error.*\)\|\(^second.*\log$\)\|\(.*FFPC\.log$\)' in their paths
Count the number of .java files in all folders rooted in the current folder
Add group write permission to all files in the current directory
display the number of lines in all the ".c" files in the current folder
Saves invoked command 'check_script_call=$(history |tail -1|grep myscript.sh )' in variable 'check_script_call', preceeding by its number in history.
Compress from standard input and print the byte count preceded with 'gzip.'
change the group of all the files in the file system which belong to the group with the gid 999
search for files that are readable for everybody, have at least on write bit set but are not executable for anybody
Search the current directory for files whose names start with "messages." ignoring SVN, GIT, and .anythingElseIwannaIgnore files
Make directorie(s) 'es/LC_MESSAGES' as needed in the current directory
Set variable 'file' to the base name of first argument to script or function, that is the part following the last slash.
check readline bindings for "\x61"
Print content of 'filename' file, showing all non-printing characters and displaying $ at the end of each line.
Display the sizes and filepaths of all files/directories sorted in ascending order of size
Remove `core' files whose status was changed more than 4 days ago
Search the /dir directory tree for files whose names match regular expression '.*2015.*\(album.*\|picture.*\)'
Search for files greater than 20MB in the entire file system and display the path and file size
Find all files under directory tree /path/to/dir whose permissions are not 644
Make directory "destdir"
Prints total count of lines of all files in a current folder and subfolders.
display all executable files in the folder /home
search for all mp3 files in the folder /home/you which have been accessed exactly 10*24 hours ago
Force delete all files in the current folder
find all the normal/regular files in the current folder which are present in the pattern file "file_list.txt"
Finds shell options with 'login' in name.
Gets IP addresses of all active network interfaces on host.
List all files from the current directory tree that were modified less than 60 minutes ago, omitting "."
Display only first and second dot-separated numbers of kernel version, ie. 4.4
search for the files "foo.txt" in the current folder
Find all regular files in and below the home directory that have been modified in the last 90 minutes
find all the files in the current folder which have a set uid set
generates a list of all files beneath the current directory whose filename DOES NOT end in .html, so it matches files like *.txt, *.jpg, and so on.
Print the files under current directory twice per line
Print the contents of "xx.sh"
Find all regular files under $dir
Remove all vmware-*.log files under current directory
List files and directories recursively
split file "${fspec} into pieces named as "xyzzyNNN" with numeric prefix from 1 to 6
Recursively removes all files and folders like 'FILE-TO-FIND' from current folder.
find all the files in the current directory and sub-directories, that were edited within the last 1 hour and execute the list command with long listing format
Remove everything in a current folder prompting user on each action.
Prints long listing of top ten most memory using processes in a system.
display all directories in the folder "PROD" and do not search in the sub directories
Find all .zip files starting from the current directory which are owned by user tommye
Search for occurrences of string "main(" in the .c files from the current directory tree
Make DNS lookup requests for domain list in file '/path/to/host-list.txt'
display a long list of all the jpg files in the home folder
Change permissions to 644 for all regular files under and below /path/to/someDirectory/
Show the list of files larger than 100 MB
Delete all files with inode number 804180
find files in current folder using name patterns and sort the display the file names in the sorted order
Find recursively all files in /path that end in "txt" and copy them to /tmp/
Remount "yaffs2" filesystem "/dev/block/mtdblk4" to "/system" as read only
Search the files from directory tree "dirname" for string "foo"
Find all files under $d directory (no sub-directories) that are executable by owner and print only their names
search for a word in all the regular files in the current folder without traversing the sub directories .
Print yesterday's date as yyy:mm:dd
Find the files in the current directory that match pattern '*.ISOLATE.*.txt' and move them to folder ./ISOLATE
List all files under current directory
print the last word in a.txt
Forward port 3307 on localhost to port 3306 on 1.2.3.4 via 'user@gateway' on port 24222
Finds more than 5 days old files in two directories  and compresses them.
Print "huge-file.log" starting at line 1000001
View manual page of find utility
prints the last occurrence of text between two tags
Find all the Sticky Bit set files whose permission are 551
Remove all files under /home/user/Maildir/.SPAM/cur
display all the files in the file system which do not belong to the user "wnj" and which are modified before the file "ttt"
Read one character from standard input into variable "REPLY"
display the file name and creation month of top 11 files in the entire file system
Find all hidden regular files starting from the current directory
Find only number of hard link & name of files from long list
Change permissions to u=rw,g=r,o= for all files in the current directory tree
List file contents of compressed file 'compressed.tar.gz'
Display all environment variables, functions, and aliases, pausing for user interaction after each page of output.
Join columns in "file1" and "file2" if their first field matches and format the output as a table
find all the files in the folder "/usr/app/etl/01/OTH/log/tra" which have been modified  in the last 240 hours  excluding hidden files and those with the name "/usr/app/etl/01/CLE/par/files_to_skip.par"
List subdirectories in the current directory
Counts lines in file $file ignoring '//' commented lines, lines with spaces only and empty lines.
Find all files named 'foo' under current directory tree without descending into directories named 'foo'
List files larger than 10MB in the /var directory recursively
change owner and group  of all files and directory into current directory to user and group apache
Print the list of files and directories of the /etc directory
Remove all .txt files in and below the current directory
Recursively change the owner to "$USER" and group to "$GROUP" of "/var/lib/cassandra"
Creates temporary file in a TMPDIR folder or /tmp folder if TMPDIR doesn`t defined, with file name like current shell name and '-XXXXX'-formatted suffix, and saves created path to the 'tempFile' variable.
Find all files larger than 100M and delete them
tar all files in the current folder and ask for user confirmation before creating the tar ball
find all the files that have been modified in the last 1 day ago
Locate all files "needle.txt"
Find text files modified less than 5 days ago
Returns unsuccessful exit code on each found file like '*tests*' within current directory.
Print all filenames in /usr/src except for those that are of the form '*,v' or '.*,v'
Move server.log to 'logs' directory with new name as the current date formatted as "%Y%m%d%H%M" and with '.log' extension
Find all *.c files under and below the current directory that contain "hogehoge"
Remove all .sh files in the current directory tree whose names begin with "new"
Remove all vmware-*.log files under current directory
Print second section of space-separated data coming from stdin.
Find files/directories under current directory and print them as null terminated strings.
Delete interactively all the files/directories with inode number 782263 under current directory tree
Find all the files in file system which are accessed 50 days back
Report file system containing path to the current working directory disk usage in kilobytes.
Search for the string 'git' in all the files under current directory tree without traversing into '.git' folder and excluding files that have 'git' in their names
delete all the backup files in current directory
List all files/directories under current directory
remove all the files with the name "Trash" in the folder /home
Search the system for directories named "needle"
Creates temporary file in TMPDIR folder or /tmp/ if TMPDIR is not defined, named by template ${tempname}.XXXXXX, and saves path to new file in  a TMPPS_PREFIX variable.
search for all non empty regular/normal files in the current folder and empty them ie., delete the content not the file
Replace ",," with ", ," twice in "data.csv" and display the "," delimited result as a table
Search everywhere for hidden file `.profile'
find the depth of all the files in current folder and display the depth and file name
Search the file system for regular files whose names are shorter than 25 characters
display all files in the entire file system excluding those that are in the transfer directory
Search for 'mystring' in all *.txt files under current directory
Creates temporary file in a current folder and saves path to it in 'f' variable.
find all the files in the current directory and change the permissions to 775.
Find ".c" and ".h" files in the current directory tree and print line numbers and lines containing "#include"
Print the sorted unique column of usernames of users who are currently logged in without the header
search for the directory "mysql" in the entire file system
Prints long listing of content in a root folder, including hidden files, with human-readable sizes, and stores output to '/root/test.out' file.
ssh into "hostname" as user "buck"
show all the files  in current directory
Find all *.txt files/directories under your home directory
Find all *.mp4 files under /foo/bar and move them to /some/path
Search the current directory recursively for regular files last accessed 2 minutes ago
Print the ping time of a single request to "8.8.8.8"
Find all CSS files that do something with HTML ID #content
Print the number of lines in file.txt.
List all *.ogg files under your home directory along with their size
Remove trailing white spaces from all files under dir directory and keep backups of the originals
Lists all manual pages.
Prints day of first Tuesday in a month.
Save absolute path of "$path" that may not exist to variable "abspath"
Convert the content of variable 'CLEAN' to small letters
Find all directories under $1/.hg and set their SGID bit
Find all regular files with space in their names under current directory and rename them by replacing all spaces with _
Send a single ping request with a TTL of 1 to "192.168.1.1"
find all files in the current folder which have not been changed in the last 48 hours
Delete empty lines from standard input
display all files in the current folder that have been modified in the last 24 hours whose name has only 1 letter
Find all files/directories with space in their names under $1 directory
display all files in current folder in sorted order of depth
Print content of '1' file
display long listing of all the text files in the current folder (plus at the end executes quickly by sending bulk data as input to the command in exec)
Find all files that were last accessed less than7 days ago under /home
Set variable PING to 1 if it's possible to ping host ADDRESS, to 0 otherwise.
display all the regular files in the current folder excluding those that are present in the path "git"
Find all *.ext files/directories under current directory and print their path and parent directory path
Delete all .svn files/directories under current directory
Search the current directory tree for regular files that can be read by noone
Prints calendar of April of 2012, and redirects output to 't' file and 'more' pager tool.
Remove all the files and directories that are in /dir1 but not in /dir2.
Move all files/directories under current directory to destDir
Find all files under and below /dir that were changed or created less than 60 minutes ago
Find files ending in "*macs"
List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan and sort them according to file modification time
Remove the last two components (directories) of $path
Request that the master ssh connection "otherHosttunnel" exits
display all the files in the home folder which begin with "arrow" and end with "xbm"
change owner of the file process to user root
Copies all files under current directory like '*FooBar*' to the '~/foo/bar' directory.
Find all *.m4a files/directories under /home/family/Music directory
Sort "file1.txt" and output the result to "file1.txt"
Print the list of regular files in the current directory and all subdirectories
Removes resursively all files and folders named "Thumbs.db", ignoring case distincts.
Prints name of temporary file but doesn`t create nothing.
Search the /Path directory tree for files matching pattern "file_name*" and containing "bar" in their pathnames
Counts total lines in PHP and JS files.
display all the symbolic links in the current folder
Find all files starting from / that belong to user1
Print a colon-separated list of all directories from the ~/code directory tree
Gets list of IP addresses of all network interfaces.
Read standard input and replace any repeated characters except spaces with a single instance
change the owner of the files which belong to the group 1000 to username and modify only the symbolic link not the originally pointed file
List the directory paths of all file.ext files under present working directory
Split "file.txt" excluding the first line into files of at most 4 lines each and with a prefix "split_"
Create a symbolic link in target directory "~/newlinks" to "$source"
find a.out, *.o and core files under the current directory and sub-directories and delete them.
Print info about all mounted file systems
Print file size and user name with color support for each file in the current directory tree
search for the file "file" in current folder and save the output to the same file
Write the shell's input to standard error as it is read
Create intermediate directories "b and "c" as required and directory "c"
Run 'chmod 0644' on all files in the current directory tree
Monitor 3 specific process IDs: 18884, 18892, and 18919 (GNU specific)
Show all lines in file2 that don't contain the first field of any line in file1.
Exclude directory from find . command
Create a ssh key with no passphrase and store it in "outfile".
Print which files differ in "folder1" and "folder2" excluding "node_modules" recursively, output in two columns, and paginate the output
Create symbolic link "$1/link" to the absolute path of "$2"
Search for all files newer than file /tmp/t1 but not newer than file /tmp/t2
run ls command on *.pl files
Delete all empty directories under current directory
Find all your text files
Find files which are more than 2 days old under  ${userdir}/${i}/incoming directory and remove them
Find all regular files under current directory tree that contain 'some text' in their names excluding paths that contain dot files/directories
Look for `regexp' in binary files
Lists all subdirectories in a current folder, removing trailing slash.
Find all files under current directory and set read-write permission for owner, read permission for group and no permission for other for those files
Search the .log files in the current directory tree for string "The SAS System"
Change directory to the output of command '~/marker.sh go "$@"'
remove all the DS_Store files in the current directory
List all directories in current directory, works even if they have weird names or names starting with a dash.
Recursively changes group ownership of everything within a current folder and having group 'X_GNAME' to 'Y_GNAME'.
Print local files without descending non-local directories
find all the files in the current folder and display adding quotations to each file and replace spaces with new line
Changes group ownership of /sys/class/gpio/export and /sys/class/gpio/unexport to 'gpio'.
Add a number prefix followed by ')' to each line in "$string"
Find all files in entire file system which are larger than 20000KB
Verbosely compresses all files on sixth and seventh depth level keeping original files in place.
Find *.html files in the current directory tree that were modified less than 7 days ago
search for swap files (.swp files) in temp folder and remove them
find all the configuration files in /etc folder along with the last access & modification time
Calculate md5 sum of file $item and save it to variable 'md5'
Find all regular files under current directory (no subdirectories) and replace every occurrences of 'toreplace' with 'replace' in those files
Find all files under /path/to/base/dir and change their permission to 644
Wrap each line in "file.txt" to fit in 80 characters
Search for $GROUP at the beginning of each line in /etc/group and print the last colon (':') separated entry with comma replaced with newlines
Find symlinks under and below the "test" directory and replace them with the content of the linked files
Search the file system for regular files whose names are shorter than 25 characters
Search the regular files of the current directory tree for string "foo"
display all the files  in the current folder excluding the perl files
Find all files/directories with '.mp4' extension and all regular files with '.flv' extension, sort them according to their names and display the first 500 of them
List all broken symlinks excluding cyclic links under current directory
find foo, Foo, FOo, FOO, etc.
Search the current directory up to depth level 2 for files and directories
only get md5sum of a file
Search the current directory tree for files last accessed more than 10 days ago
Create 5 empty .txt files
Prints lines count in each *.c file of a current folder and total count.
find all the files that are modified in the last 1 day
Set the host name to "myServersHostname"
Compare *.csv files in the current directory tree with their analogs stored in /some/other/path/ prompting before running `diff'
find all the files in the current directory ending with ".i"
Find all files more than 700 megabytes
find files which full path name like '*f' at current directory and print
Print a frequency count of column two for every file in the current directory
List all regular files under current directory ensuring white space safety
find all the png files in current folder which are present in the pattern list file "search.txt" and copy them to another directory
Count the number of unique lines in sorted file "a.txt" compared to sorted file "b.txt"
Subtract all columns in "File2" from "File1" except the first
Sort and compare files "$def.out" and "$def-new.out"
Convert relative path "/x/y/../../a/b/z/../c/d" into absolute path with resolved symbolic links
View history using "vim" in read only mode
Change the owner of all files in "/empty_dir/" to "root" using at most 10 files at a time
search for a word in all the php files in the current folder and display the matching lines.
Prints ten latest modified files within the current directory.
Print the list of regular files from the current directory tree that were modified less than 2 days ago
Find in the current direcoty whose suffix is .tmp , find will not serach recursively limit of find is 2 subdirectory .
display all the files in the current folder which are present in the path "./src/emacs"
gives the chars in line 5 and chars 5 to 8 of line 5, in tst.txt
Find all files/directories that contain 'target' (case insensitive) in their names under current directory no-recursively
Find all files whose names end with "~" in the /home/peter directory tree, following symlinks, and delete them
Finds all the log* files in /myDir recursively that are more than 7 days older, skipping already created .bz2 archives and compresses them.
Convert all characters in "$a" to upper case and save to variable "b"
Save standard input to variable 'stdin' until the first character encoded as '\004' is read
Change directory to the download directory specified in the current user's user-dirs.dirs file
Split "$file" into files with at most 1000 lines each and use a prefix length of 5
find all the text files in the current folder
Read a line of standard input into variable "input_cmd" with prompt "command : "
change the permissions of all the directories in the current folder
Recursively finds all *.txt files and prints strings with "text_pattern" ignoring text distincts.
Search the current directory for files whose names start with "messages." ignoring SVN and CVS files
Find all regular files that start with stat
Find things changed today
sleep for 500 seconds
Print numbers from 1 to 5 without separating spaces
Find all files named `file1' starting from /
Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories
List all the emptry files in thecurrent directory only.
List in detail the regular files from the /somelocation/log_output directory tree that were last changed more than 40 days ago
Search /usr/local recursively for directories whose names end with a number 0-9
Read a line from standard input into variable "REPLY" with prompt "$*"
Search all of /usr for any directory named 'My Files', for each directory found, copy it to /iscsi preserving full paths and attributes.
display all the java script files in the current folder
display all directories in current folder
search in current directory downwards all files whose size is less then 10 bytes
Delete all files that have not been accessed in the last 30 days
find all the files in the current directory which are bigger than 1000MB
Search the /usr/local/doc directory tree for .texi files
Display differences between files dir1.txt and dir2.txt.
Find all the files in file system which are modified 50 days back
Save the system host name into variable "HOST"
change the permissions of all regular/normal files in the file system
search for all tar.gz compress files  in the current folder
Add a date time stamp to every line of output in "ping google.com"
Read a line from standard input with prompt "Is this a good question (y/n)? " and save the response to variable "answer"
Find any hidden regular files in the current directory and its sub-directories that were modified after .cshrc was last modified.
Set trace prompt to print seconds, nnoseconds, script name, and line number
Create a symbolic link in the current directory for each hidden file or directory in "git-stuff/home/" excluding "." and ".."
List all files under current directory that are greater than 10000000x512 bytes in size
find all the files in the current folder which are bigger than 9MB
Check whether "$path_in_question" is a mount point
Print "hello" followed by the current user name
search  in current directory downwards all files which were accessed exactly 7 days back
Check if current system is running in 64-bit addressing.
find all the directories in the current folder which have been modified in 24 hours and move them to the folder  /path/to/target-dir
Remove all directories called "test" from the current directory tree
Count the number of all directories under directory '/mount/point' non-recursively
Finds strings with text "text" in all files named "string to be searched" recursively in a current folder.
Counts lines of myfile.txt file.
find all the files in the entire file system that have been accessed exactly  50 days ago
display a long list of all the directories which have files ending with ".todo"
Print file information of command "studio"
Split the output of "ls" into files of at most 500 lines each with prefix "outputXYZ."
Print a welcome message with the current user's user name
Remove the file with inode number 752010
Find all files/directories with '.txt' extension that are less than 100 KB in size under '/home' directory tree
Find all regular files under ${path} without following symlinks
Find all files owned by user `comp'
Print characters in variable "$a" that exist in variable "$b"
Create a table from '111 22 3\n4 555 66\n' with columns separated by a single space
Find all empty files under a certain path
Print a sorted list of the extensions of the regular files from the current directory tree with counts per extension
Print the current working directory without a trailing newline
find the "MyCProgram.c" file (case insensitive find) under the current directory
Find all files under the current directory that are not the same file as "/home/nez/file.txt"
Recursively copy directory "/path/to/data/myappdata" to "user@host:/remote/path/to/data/myappdata"
display the manual page of find
Remove the "^M" characters from all *.ext files under /home directory
Change owner to "root" and group to "wheel" of "adbind.bash"
change the owner and group of all the normal/regular files in the current folder and /home/admin/data/ to admin & admin
Find all files matching "abc*" in the current directory and append "\tok"
Archive directory "/mnt/data" to "/media/WD_Disk_1/current_working_data/", deleting any extraneous files in destination, compress data during copy.
Getting a detailed list of files/dirs
Remove all vmware-*.log files under current directory
Add a cron job to existing list, without removing existing ones, ro tun "scripty.sh" at 2:01 am, 3rd day of april (4th month), if that day happens to be a friday (5th day of the week starting with sunday=0).
Changes to the directory where 'ssh' executable is located.
create directory subdirectory
Find all regular files under $DIR directory tree with ".$TYPE" extension (case insensitive) where $TYPE expands in the current shell
Search for "search term" in a sorted list of all files under current directory
List jobs and their process ids and print them by replacing newline with '^'
Recursively removes all files and folders like 'FILE-TO-FIND' from current folder.
Compose filepath as folder path where file $f is located, and lowercase filename of $f file, and save it in 'g' variable
change owner and group of the all files with group owner vboxusers into home directory to user and group kent
Find all the files which are greater than 50MB and less than 100MB
Print file extension assuming there is only one dot in the file name.
Search the system for files and directories owned by user `admin'
Find all directories that have been modified in the last seven days.
search for a word in all the php files in the current folder and display the count of all matching lines.
search for regular/normal file with the name "myfile" in the entire file system
find all the files in the folder /opt which have been modified exactly 20 days ago
Find all directories under and below directory "folder_name", and change their permissions to 775
replaces the second to last line of file
Find all files whose names contain the string 'xpilot' which exist within '/usr/local/games'
change the permissions of all the regular/normal files in the current folder
Print every found file like '*.cfg' under '/path/to/files/' directory followed by its content, and wait 2 seconds after each printed file
Save the directory of the full path to the current script in variable "dir"
Print numbers from 1 to 10 with 2 values per line
Pipe the output of ls into "read var" in its separate process
Search for all jpg images on the system and archive them
Search /usr/bin for regular files that were last accessed more than 100 days ago
Create a symbolc link in the current directory to "target"
Find all files under foldername directory and set their permission to 644
Copy "*.cc", "*.h", and "SConstruct" to "rsync://localhost:40001/bledge_ce" using blocking IO
Find all files under and below the current working directory with the word California in the file
kill all jobs
Copy all .png files from the home directory tree to imagesdir/
find all the text files in the entire filesystem which belong to the user root and display the ten files.
Rename "old" to "tmp"
Print the content of the file 'file' deleting the last four lines
display list of all the files in the current directory
find all the normal/regular files in /etc/sysconfig which have been accesses in the last 30 minutes
Archive "src" to "dst" updating files existing in "dst"
Find all directories under /var/www directory and set their permission to 755
Find all the regular files under $DIR directory tree which have been modified before the file $a excluding the file $a and delete them
Look for file `Chapter1' under /usr and /home
Find all *.plist files/directories under current directory
List each file or directory in the current directory prefixed with its filesize in MB and sorted from smallest to largest
Search the `images' directory tree for regular files
login as user postgres
find files under the current directory called "foo" or "bar"
find all the files in the folder /opt which have been modified between 20 to 50 days ago
Archive "/path/to/files" on host "remotemachine" authentifying as user "user" and compressing data during transmission, copy symlinks as symlinks.
Decompress and unarchive "hello-0.2.tar.gz"
Truncate all non-empty regular files under the current directory
display all scala files in the directory "src/main"
split file data.csv into pieces per 100 lines
Rename "file001abc.txt" to "abc1.txt"
Show the mv commands that would rename the *.so files in the current directory tree prepending their names with "lib"
Rename "file.txt" in directories "v_1", "v_2", and "v_3" each to "v_1.txt", "v_2.txt", and "v_3.txt" respectively and print the conversion
Replace all instances of "STRING_TO_REPLACE" with "STRING_TO_REPLACE_IT" in "index.html" and write the output to standard output and "index.html"
Locate all *.csv files under the current directory tree
Find text in whole directory tree
display a long listing of all the directories in the current folder
display the list of all the normal files excluding hidden files which have been accessed in the last 500 days
Change the owner of "destination_dir" to "user"
display all the files in the current folder along with the modification time and display file names of the last 10 modified files
Find all files/directories named 'top' in the entire filesystem
Find all files starting from the current directory that contain '.java' in their pathnames
Lookup information for user "vivek"
Delete and count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days
Search for "vid=123" in all compressed files found under "/my_home" matching "*log.20140226*"
find all files in the folder "myfiles" which are exactly 5 bytes
Print the drive and mount point of the last mounted drive
Prints process tree for the current process with ASCII line drawing characters.
display all the regular/normal files ending with ".mod" in a folder
find all the reguar/normal php files in current directory.
Find & replace broken symbolic links
Sets shell options 'globstar', 'dotglob' and 'nullglob'.
Ungzip and untar all files matching "www-backup.tar.*"
Find '.java' files with checksum 0bee89b07a248e27c83fc3d5951213c1 in the current directory
Read a line from standard input into variable "password" without echoing the input and using the prompt "Password: "
Find all regular files in /usr/bin accessed more than 20 days ago
Remove last two underscore-delimited fields and following characters in "t1_t2_t3_tn1_tn2.sh" keeping only "t1_t2_t3"
Execute "ls" every 2 seconds
Format the contents of "[file]" in a neat table
display all the files in the current folder which have been modified in the last 5*24 hours
Copy file "exist" from directory "/file/that" to a new file named "file" in "/location/for/new"
find all the error, access, ssl_engine and rewrite logs which are bigger than 300MB and are less then 5GB in the folder /opt
using exec in find command to dispaly the searched files
Remove all *.doc files from the current directory tree
Print short DNS lookup for each domain name in a file 'list'
Print first field from semicolon-seprated line $string.
Print the current working directory prepended by "pwd: "
Find all files/directories that start with 'onlyme' in their names under maximum 2 levels down the current directory
Numerically sort file "files" by the second "-" separated value of each line ordered from least value to highest value
find all the empty directories in current folder and delete them
Look for regular files in the directory trees 'deferred', 'active', 'maildrop', 'incoming' under /var/spool/postfix/
List each file or directory in the current directory prefixed with its filesize in bytes and sorted from smallest to largest
Gets MAC address of eth0 network interface.
Create a symbolic link relative to link location named "$dest_dir/$orig_name" to "$orig_dest"
Find all directories in the /path/to/base/dir tree
Write contents of "/sys/kernel/debug/tracing/trace_pipe" to standard output and to "tracelog.txt" executing as a root user
The cpio command is a copy command designed to copy files into and out of a cpio or tar archive, automatically preserving permissions, times, and ownership of files and subdirectories.
Search the directories matching pattern "/path/to/some/dir/*[0-9]" for level 1 subdirectories
Set permissions to ug=rwx,o= for directories inside the ./default/files tree
long list al the files in the current directory which have only read permission to the group
Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string "debug ("
Sort numerically and compare files "ruby.test" and "sort.test"
Find all *.gz files/directories under asia and emea directory
Archive file 'file' with bzip2 tool, store compressed data to a file 'logfile' and also print to screen
find all files in the current folder whose size is less than 50KB
Find all files/directories under /myfiles that were accessed more than 30 days ago
Find all files/directories that do not contain 'photo' in their names under current directory tree
Recursively finds and compresses all files in the directory '/path/to/dir'
Recursively prints all folders in a current folder that contain files like "*.class".
Print whether the sorted contents of "set1" and "set2" differ
Disables shell option 'dotglob'.
Find all *.swp files/directories under current directory
Find all regular files in the current directory tree that are not readable by anyone
Extract any line in "f1" or "f2" which does not appear in the other
recursively delete, without prompting, directories under /data/bin/test, that are older than 10 days and where the name starts with a number
Find and remove zero bytes files from user's directories .
searches through the root filesystem ("/") for the file named Chapter1.
List all php files below current directory whose full pathname name does not include "libs", "tmp", "tests", or "vendor", sorted by number of lines, letting the user page interactively through the output.
find all files in current folder which are exactly 300MB
Exclude directory from find . command
Find regular files that are larger than 2GB
recursively change owner of the directory /tmp to the current user
Print each line in "set1" and "set2" that does not exist in the other
Set the 'xtrace' shell option
Find all Subscription.java files/directories under current directory and enter into the parent directory of the first one found
Copy all files below the current directory whose names contain "FooBar" to directory foo/bar/ in user's home directory.
Save the short host name appended with ".mysqldb" in variable "DBPREFIX"
List all files in the current directory tree that were modified 60 minutes ago
Find all directories whose name is root in / directory
Find broken symlinks in current directory
Find all files under $source_dir that match the regex expanded by $input_file_type in their paths
Search for files/directories which are writable by either their owner or their group
Find all regular .html files in the /var/www directory tree
change the ownership of all the files in the file system from edwarda to earnestc
Reports count of processors in system.
find all the text files in the file system and search only in the disk partition of the root.
Print each logged in user's full name
display a long listing of all the files in the current folder which are bigger than 10KB
Calculate the md5 sum of the file "filename" and print only the hash
Find all files with the name "MyProgram.c" in the current directory and all of it's sub-directories.
Move all files from the `sourceDir' directory tree to the `destDir' directory
find all the file that have been modified in the last 3 days ( considers day starting not 24 hours )
Decompress and extract 'libxml2-sources-2.7.7.tar.gz'
Print the host name
Display environment variable "_" of the current shell
Find all readme.txt files/directories under your home directory
Print the most repeated line in "list2.txt" that exists in "list1.txt" prefixed by the number of occurrences
Rename "blah2" to "blah2-new"
Find regular files under '/somefolder' directory tree satisfying the options/conditions/operations provided in ${ARGS[@]} array with find command
Save the current working directory with resolved symbolic links to variable "real1"
Find all files with the extension jpg regardless of case
Find all test1.h files under current directory
Find all sample*_1.txt files/directories under current directory
Find all the files named 'vimrc' anywhere on the system
Open "charm" executable file in vim
List all files from the current directory tree that were modified less than 60 minutes ago
force delete all the directories the folder "test folder"
search for the file "filename" in the entire file system
Compresses file 'example.log' keeping original file in place.
List all files under current directory matching the regex '.*(c|h|cpp)$'
Copies defined file to the target folder without overwriting existing files.
find directories under the $LOGDIR directory where there have been no modifications for 5 days and deletes them.
Report file systems disk usage in kilobytes.
Print numbers from 1 to 5 without separating spaces and without a newline
display all directories in a folder
Print information about all users who are logged in
Print the ping statistics of 4 requests to "www.google.com"
Print the second line of output of "ls -l"
Search for 'foo' in all regular files under 'sources' directory tree and show the matched lines with filenames
Sends current job to the background.
Find all files/directories with 664 permission under current directory tree
display all the files in the home folder which have not been modified in the last 365*24 hours
Set up SSH connection forwarding in the background with no terminal or command execution from localhost port 8888 to "proxyhost" port 8888 and a reverse connection from "officefirewall" port 22222 to "localhost" port 22
Print unique lines of sorted file "A.txt" compared to sorted file "B.txt"
Takes first text field from file 'file.txt' as a domain name and gets short A record for this one.
Sort all directory names matching folder_* and go to the last one.
Find all files/directories under current directory and append a null character at the end of each path
files all files which expect directories and display count of them
Archive "foo/bar/baz.c" to "remote:/tmp/" preserving the relative path of "foo/bar/baz.c"
Search the specified group for the given "filename
search for all the perl files in the folder /nas/projects/mgmt/scripts/perl which have been modified 8-10 days ago.
Find all files/directories under 'A' directory tree excluding directory 'A/a' and all of it's contents
search in the current folder for the file with the name "test" ( case insensitive search )
Print a 2 byte hexadecimal value, printable character, and octal value of "$1"
Append all regular files modified in the last 24 hours to the "$archive.tar" tar archive
list all the drectories present in the current directory and do not search in the sub directories.
Find files whose names match the pattern given by the 2nd argument $2 of the Bash script and replace string $3 with $4 in them
Display what flags mount points are mounted with
Delete all __temp__* files/directories under current directory tree
Make directories to "$2" as needed
Search the current directory tree for files larger than 10MB but smaller than 50MB
Replace the occurrences of "HOGE" with "MOGA" once per each line of the .yaml files from the current directory tree
Set trace prompt to print seconds.nanoseconds
Print numbered list of all third-level files under the current directory
Find .java files in the current directory tree that contain 'TODO', and print their pathnames
find all files in the current folder that are not modified in the last 10 minutes
Remove all *.tmp files from the /tmp directory tree
search for all the text files in the folder /foo and delete them
Find all hidden files under /tmp
Send TERM signal to process with id listed in '/var/run/DataBaseSynchronizerClient.pid' file
Find all files/directories under current directory with null character as the delimiter
Join strings from 'file1' and 'file2', discarding excessive strings from largest file, and printing first, second and third space-separated field from first file, and third and fourth field from second file as a join result
Enables shell options 'expand_aliases', 'extglob', 'xpg_echo'.
find all the files in the file system which have been modified in the last 30*24 hours
Set the bash environmental variable "PROMPT_COMMAND" to save the output of the last executed command to variable "LAST" and file '/tmp/x"
Prints shell option 'globstar' with indication of its status.
Immediately terminate all processes whose command or arguments match "myProcessName"
Find all files/directories that are owned by user 'eric' under current directory tree
Recursively change the owner and group of "/opt/antoniod/" to "antoniod"
display all the directories in the current folder which start with processor followed by digit and ends with .1 or .2
Search all files in the current directory tree whose names contain "." for "SearchString"
Print position number of day '9' in fourth line of calendar output for September, 2009.
display all the files in the folder "/Users/Me/Desktop" which belong to the user "popo" and which have the permission 777
Find all files/directories under whatever and ... directory and copy them to /var/tmp
search for text files in the current folder which do not have write access to others
List .html files in the current directory tree that contain string "base\-maps" but do NOT contain string "base\-maps\-bot"
display the list of all the files in the current directory which have been accssed in the last 500 days exluding hidden files
Find all files/directories under current directory with the null character as the delimiter
Find all files/directories in current directory and execute the script itself with minimal invocation for those files/directories
Recursively finds all files and prints all strings with 'text-to-find-here' from that files.
Look for any instance of "ds1337" in the modules.alias file matching current kernel release
Print all lines of "seq 10" except the last 3
Get the total sizes of all files under current directory
Print the sorted uniqe list of folders in compressed archive nginx-1.0.0.tar.gz
Find .cpp files that differs in subdirectories PATH1 and PATH2.
Set variable "fname" to the basename of path specified in variable "f", that is remove everything up to the last slash if present.
Find all directories at level 3 of directory tree $from_dir
Search directory trees /tmp and /var/tmp for "testfile.txt"
Create a symbolic link named "~/bin/subl" to "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl"
Numerically sort file "table" by the fourth character of the second field, ignoring leading spaces
Remove files that are less than 1MB in size under current directory
Find files accessed at 23:59
search for all the regular/normal files  in the /etc folder which have been modified in the last 24 hours
display all normal/regular files in current directory
Prints current directory name
Find all executable upvoter-* files/symlinks under maximum 1 level down the {} directory
Recursively removes all empty folders under current path, printing info message on each operation, and suppressing error messages if folder is not empty.
display all files ending with "ini" in current folder
Execute commands from "$file" in the current shell.
Find all *.ogg (case insensitive) files/directories under your home directory
Compress all files with '.txt' extension under current directory
Changes group ownership of 'public' and 'private' to 'god'.
Print linker search path using gcc formatted on new lines
Archive "/path/to/sfolder/" to "name@remote.server:/path/to/remote/dfolder" preserving hard links and compressing the data during transmission
Print the current directory
Create intermediate directories as required and directory /tmp/test/blah/oops/something
Find all *.mp3, *.aif*, *.m4p, *.wav, *.flac files under $musicdir directory
Find all .php files starting from the root directory /
Delete recursively empty files named 'bad'
Change permissions to 777 for all directories in the current directory tree
List all files in the /var directory tree whose size is greater than 10 megabytes
Find all files/directories under '/directory_path' directory tree that have been modified within the last day
Search in current directory downwards all files whose owner is aa1 and grop is grp .
display all the files in the entire file system
Lists all top-level files in a '/home/dreftymac/' folder.
display all the files in the current folder excluding the directory aa
find any files or directories called ".svn" under the current directory and run a recursive delete (without prompting) command on each one.
Remove files that are less than 1MB in size under current directory
List each unique character in "file" prefixed by number of occurrences
Copies 'src' to 'dest' preserving overwriting the existing files.
Find files/directories writable by group and others under the /path directory
Search only for directories
display all the file in the folder /home/david/ which start with the word "index"
Display an amount of processes running with a certain name
change the group of all the files in the folder /u/netinst/ to staff
find all the files in the file system whcih have been modified in the last 1 day
Count total number of lines in all *txt files  in current directory
Search all non-hidden files in the current directory and all non-hidden sub-directories for the file hi.dat.
find all text files in the current directory
Archive directory "tata" to directory "tata2", compressing data during copy.
Make a list of all files in the current directory tree, except *.png and *.class, and view it in the vim editor
Print three lines of "some line " followed by a random number
Remount "/path/to/chroot/jail/usr/bin" as read only
Find all directories in /path/to/dir/ without going into sub-directories
Find files that are orphaned
find all the file which name (name can contains space) end with c or h and content contain 'thing'
check if myfile has 0644 permissions
search for the ip "192.168.1.5" in all the files in /etc folder
Count the number of lines in all files in the xargstest/ directory tree that match pattern 'file??'
Find all files/directories under current directory with 'foobar' (case insensitive) in their names and copy them to ~/foo/bar
Search /dev/shm and /tmp for regular files not changed in two weeks
Search for first match of the regex 're' in all *.coffee files under current directory and print the file names
display all the files in current folder which have not been modified in the last 7 days
Search regular files from the /path/to/dir directory tree for lines that contain "_START" and are enclosed in lines "@GROUP" and "@END_GROUP"
List the last entry of the numerically sorted list of all files and folders under "/foldername"
Find all the files that were modified exactly one day ago
change owner of the file destination_dir to user "user:
Counts all non-blank lines in the $i file.
Get the disk space used by all *.txt (case insensitive) files/directories under current directory
Move all files/directories under current directory to ~/play
Move all files matching patterns "*.old", ".old", ".*.old" from the current directory to directory "../old/"
Set permissions for files in `foldername' to 777
Find all OGG files in the home directory larger than 20 megabytes
Finds out what groups a given user has.
List all active cron jobs, displaying only the command.
Recursively removes all files like '*.pyc' in a current folder.
Print second section of data coming from stdin where sections are separated by one or more whitespace.
Execute the first instance of "parallel" found in the PATH, passing it all parameters received by the script/function
Calculate md5 sum of file $ecriv
Print IP addresses of the host name
Recursively change ownership of "~/.npm" to the current user
Search *.x files from the current directory tree for string "fred"
Returns exit status 0 and prints exit status of previous command.
Find all files named "file.ext" in the current directory tree and print the path names of the directories they are in
display all the files in the current folder which have been modified in the last 24 hours excluding all directories
Search the current directory for all regular files executable by 'user', 'group', and 'others'
find all files in the current folder which have been modified after /etc/passwd
Print relative path of device of disk with UUID "b928a862-6b3c-45a8-82fe-8f1db2863be3"
Create 6-letter named temporary directory in a folder path that is provided as the first positional parameter, and save the path to it in a variable 'tmp'
find in the entire file system for the files which have sticky bit.
search for mp3 files in the folder /mp3collection which are smaller than 5MB
Remount "/dev/block/mtdblock3" on "/system" with read and write permission
remove all the files in current folder which have the extension "DS_Store"
Prints name of a current shell binary file.
Continuously send ping requests to broadcast address "10.10.0.255" and print the IP addresses who respond
Search for 'invalidTemplateName' in all regular files in directories/files taken from the glob pattern './online_admin/*/UTF-8/*' and show the matched lines with the filenames
Find all files in /dir1 and print only the filenames (not paths)
Find all php files in the current directory
Find all files under path_to_dir
List all *.txt files/directories under /etc
Saves logged in users names in 'tmp' variable.
Get A record for domain $domain
Create 6-letter named temporary file in a folder path $file1, and save the path to it in a variable 'tmpfile'
find all jpg,png,jpeg,pdf,tif,tiff,bmp and other image formats using regular expressions excluding those ending with "_ocr.pdf"
remove all the "core" files in the current folder which have not been changed in the last 4 days.
List all *.java files/directories under /home/bluher with their full paths
find all the files ending with .mp3 or .jpg
recursively change owner and group of the directory and group of the directory and all files into it to user and group dev_user
display all the text files and hidden files in the home folder
Search for "YOURSTRING" in all files under current directory
Remove the last two alphanumeric file extensions from "mpc-1.0.1.tar.gz"
Show what content owned by root has been modified within the last day
Search everywhere for directories named `root'
delete all the regular files in the temp folder which have not been changed in the last 15*24 hours
display the count of all the directories present in a folder
display all the regular files in the current folder that are modified after the file "file.log"
Show human-readable file type description of file "/mnt/c/BOOT.INI"
Find all files/directories under current directory and print their paths
Calculate the md5sum of the executable file of command "gcc"
Print the help message for tree
Find all *shp* directories under current directory and move '*' (literal) file/directory inside those directories to shp_all
Find all files under ${searchpath} that match the regex ${string1}.*${string2}.*${string3}  in their contents where ${string1} etc.. will be expanded
Make a copy of file.txt in all directories in current directory - names may not contain spaces.
Change every directory under "/var/www/html/" to have permissions 775
Force create a symbolic link named "id_rsa" to "$keyname"
List all leaf directories of the current directory tree
Show manual page of find
Mount the "vboxsf" filesystem "myFileName" on "~/destination"
Find all files/directories under current directory and print their paths
Find all files that belongs to group 'root' under / directory and show a few lines of output from the beginning
login as user root
Find a single file called tecmint.txt and remove it
search for all empty directories in the folder /home
find all the normal/regular files in the current folder which have been modified in the last 24 hours and display a long listing of them
Search /var/log for logs larger than 10 megabytes
Print the 5th space separated fields in "file" as a comma separated list
find all the jpg files in current folder and sort them
Lists file descriptors of a current process.
display the top 20 biggest files in the current folder which are present in the same partition as that of the current folder
Prompt user to type a list of cron jobs directly at the terminal, then use these replacing previously existing cron jobs.
Unzip all ".gz" files in the current directory tree excluding files containing "dvportgroups", "nsanity", "vcsupport", "viclient", and "vsantraces"
display all the hidden directories in the directory "/dir/to/search/"
Remove duplicate lines in "file_name" and print the output on stdout
Print the first 32 hexadecimal characters from "/dev/urandom"
display all the files and directories with the name "CVS"  from /usr/src folder that are at least seven levels deep and do not descend onto the folders
Find all files/directories containing 'blah' (case insensitive) in their names that were modified in less than 2 days ago uder current directory tree
Search for empty files
Copies file 'file1' to each of directories 'dir1', 'dir2', 'dir3'.
count the total number of lines that are present in all the normal/regular files
search for a shell script in the current folder and display the current folder path
Find all sample*_1.txt files/directories under current directory and print 'program  sample*-out sample*_1.txt sample*_2.txt' for each of them
display long listing of all the text files in the current folder
Find *.java files in the current directory with GNU find and replace foo with bar in those files
Set the permissions of all directories inside the current directory tree to u=rwx,g=rx,o=x
Search the files from the current directory tree for "chrome"
find all the directories with the name "uploads" in current folder
Find every file under the directory /home owned by the user joe.
Run an awk program on every TXT file found in the current directory tree
Find files matching regular expression regexp
Recursively copy "original_dir" to "copy_dir" preserving file/dir timestamps, displaying progress, and skipping files which match in size, keeps partially transferred files.
search for the file job.hostory in the folder "/data/Spoolln"
display list of all the regular/normal files in the current folder which start with "my"
Show the list of files modified more than 31 days ago
Compare files 'file1' and 'file2' and print in three columns strings unique for first file, second file, and common ones
Changes group ownership of 'target_directory' to 'target_group'.
Saves byte size of all content of $1 folder in 'uiTotalSize' variable.
Display operating system type, ie. GNU/Linux
forcible create a symbolic link named "/etc/file.conf" to file "/etc/configuration/file.conf"
Lists all files in a current folder, separating names with comma.
Search for files/directories which are writable by both their owner and their group
Split "file.txt" into files of at most 1 MiB in size with a numeric suffix and prefix "file"
Return all of the .conf files in Pat's user folder and subdirectories
Remove all a.out, *.o, and core files under the current directory
Find all regular files matching the name pattern '*.?htm*' under '/srv/www' and '/var/html' directory tree
list regular files under the user's home directory that are over 100KB and have not been accessed in over 30 days.
display all the files in the usr folder and those that are in the path local
Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'unexec.rmdir%D'
Merge colon-separated information from file1 and file2 where first field of both files matches
Change permissions to 700 for directories at the current level and deeper
Find all files under /home/username/public_html/sites/default/files and set their permission to 660
Find files belonging to the given owner
recursively change owner of the directory /Users/xxx/Library/Developer/Xcode/Templates and all files to user xxx
Find all files of the user with UID=1000
Identify CMS version/releases accross all your Wordpress websites
Search the current directory recursively for files last modified within the past 24 hours ignoring paths ./es* and ./en*
Find all files/directories under /proc and run ls command on each.
split file t.txt into pieces per 30000000 lines named as "t.NN" with numeric suffix
Find all files modified less than 5 minutes ago, and page interactively through the output.
search for regular files in the current folder which path is not  "./.*" and not "./*/.*"
Execute "ls -l" every 2 seconds
delete all the files in the current folder  which do not belong to any user
Saves path to the $SCRIPT file in the SCRIPTPATH variable.
Find all fglrx-libGL* files under and below debian/fglrx/
display all the files in the /usr folder which have the permissions 777
Remove all .txt files in and below the current directory
Delete all files/directories named 'file' under current directory tree
Shows status of a shell option 'nullglob'.
find all files starting with capital letter in the current folder
Set permissions for files in `foldername' and its subdirectories to 644
find all the files in the entire file system that have been modified exactly 7 days before which end with "conf"
Print login name and full name of all users currently logged in and delete instances of "of group.*"
find all the normal/regualar files in the current folder which have a size of 10KB and display a long listing details of them.
List all leaf directories (directories which don't contain any sub-directory) under current directory
Finds strings having text "searched-string" in all files recursively in a current folder.
Print which files differ between "dir1/" and "dir2/"
start 2 sleep processes in the background
Find all httpd.conf files in entire file system
Find all files/directories in entire file system that are exactly 50 bytes
find all the files in the entire file system whose size is between 50Mb to 100MB
Find files/directories named 'foo.bar' in the root filesystem partition
List empty directories in the current directory tree
Create a variable CDATE in the current shell that contains the date in '%Y-%m-%d %H:%M:%S' format , and a variable EPOCH that contains the seconds since epoch
Delete all files/directories with inode number 117672808 under current directory tree
search all the files in the current folder using regex
Prints calendar for a current month without first day of a week.
Change the owner and group of "uid_demo" to "root"
Copy *.txt files from the dir/ directory tree along with their parent directories
renames all ".htm" files to ".html" files
Search the files from the current directory tree for "foo"
Save the absolute path of "$path" to variable "fullpath"
Set up local port forwards in the background with no terminal or command execution from port 4431 to host "www1" port 443 and port 4432 to host "www2" port 443 via the host "colocatedserver"
Find all TXT files in the current directory and copy them to directory "$HOME/newdir"
Searches the manual page names and descriptions by 'disk' keyword.
Create a symbolic link named "$1/link" to the existing full and real path of "$2"
Find all .bak files starting from the current directory and delete them
find  directory which case-insensitive name is too in currect directory
Archive all ".txt" files in the current directory to "/path/to/dest" keeping partially transferred files
replaces the last occurrence of 'a' with 'c'
delete all the "wmv" "wma" files in the currnet folder,
Search the /mnt/raid/upload directory tree for files that have been modified within the last 7 days
Print "$somedir is empty" if $somedir is empty
Split the first 100 lines of "datafile" into files with at most 1700 bytes each preserving lines
Execute the 'echo' command on each file from the current directory tree individually
Delete all empty files and directories in the "test" directory tree
Make "bar" executable
Print the current directory
delete all the files in the file system which belong to the user edwarda after user confirmation
Print a single line of numbers from "001" to "100"
Remove leading and trailing spaces or tabs from "   wordA wordB wordC   "
find all the files in the entire file system which belong to the user "roger"
Search the .sh files in the current directory tree for string "ksh"
create a cpio archive of the entire contents the current directory while preserving the permissions, times, and ownership of every file and sub-directory
Find all files named "MyCProgam.c" (ignoring the case) and calculate each file's md5sum.
find all files in current folder and display the total lines in them
Find all files on the system whose names are 'drush'
Remove the last 2 tab-separated fields of each line in file pointed to by filename
dispaly a long listig of all the files in the current folder which are bigger than 100KB
Read a line from standard input into the first argument ("$1") using an interactive shell with prompt "> "
Find all files/directories under current directory bypassing file hierarchies in lexicographical order
Enable history expansion in a script
Moves file '$2' to the folder where '$1' file is located.
List all nfs mount points on the system
search for all the files in the current directory which have the name a.out or core or which end with .o and delete them.
display the list of all the text files present in the current directory excluding the search in certain paths.
search for all the mp3 files in the folder /home/you which have been accessed 24 ago
search for directories in the folder "test" which end with 5 digits using regular expressions
Remove files in current directory according to the filenames found in ~/clang+llvm-3.3/bin/
Changes group ownership of 'logdir' to 'loggroup'.
Move all directories in the current directory tree that have been modified in the last day to "/path/to/target-dir"
find all the files in the file system which belong to the groep "users" and with the name "dateiname"
Remove all .txt files in and below the current directory
Update the history file in the current session
Remove all files containing 'sample' (case insensitive) in their names under '/home/user/Series' directory tree
display all the files in the current folder which have the word "bills" in their name
Split "data.tsv" into files of at most 100 MiB preserving lines and use a prefix of "data.tsv." and numeric suffixes
Find all directories under current directory with 755 permission and change their permission to 644
delete all the log files which have not been modified in the last 5 days after user confirmation
Delete all files in the current user's home directory and its sub-directories that have not been accessed for more than 100 days.
List all .jpg files in the home directory tree in a fast way
Set variable "finalName" to the second-to-last slash-separated path component of variable "path"
Write '"myname="Test"' to the console and append to "$CONFIG" as root
Find all regular files that reside in the current directory tree and were last modified more than 7 days ago
Make directories "$@" verbosely and replace "mkdir: created directory " with "jar-jar: yea, weesa gotta " in the output
Print the base name of the current working directory
Find files and directories that are at least seven levels of nesting in the directory /usr/src excluding CVS directory
Add line numbers to each non-blank line in "file" starting with number 1000001
Recursively change the owner and group of all files in the current directory to "apache"
Replace all the mathes to regex '<script type="text\/javascript" charset="utf-8" src="file.js"><\/script>.*' with '<script type="text\/javascript" charset="utf-8" src="file2.js"><\/script>' in all HTML files under $DIR directory tree modifying the files in-place
Find all .txt files in the user's home directory and below.
List files under $CURR_DIR which were modified, accessed or whose status were changed $FTIME ago replacing the $CURR_DIR path string to './'
find all files in the current directory which are bigger than 4MB
Find PHP files containing 2 or more classes
SSH into $1 with login name 'pete'
extract 'archive.tar.gz' to /destination
find all files in the current folder which have been modified in the last 24 hours
Make directory "saxon_docs"
display all the html files in the current folder excluding search in the paths ./foo, ./bar.
List all files and directories residing in the current directory and below
Show all lines as they are executed and stop at the first command returning nonzero
Find all files/directories with 'my key phrase' in their names under current directory
search all the files in the current folder using name patterns
find all the php files in the current folder
Archive "/top/a/b/c/d" to host "remote" using relative path names
print all files in the directories except the ./src/emacs directory
find all the normal files in the home directory which have been accesed in the last 30 days with the size greater than or equal to 100k.
Find all files/directories under current directory
recursively change owner of the directory and all files into it to user  nobody
find all the files in the /usr folder which have modification date less than or equal to the file "/FirstFile"
Print a colon-separated list of all directories from the ~/code directory tree, except hidden ones and those below them
kill all background processes
Search for 'some string' in all *.axvw files under current directory and show the matched lines with line numbers
Rename all *.html files under and below the current directory to *.var
change owner of the files into directory "/mydir" with ".txt" extension to user root
List all files in the current directory tree except for those in the ./src/emacs directory
display all the files in the current folder and do not search in sub directories and move them to the directory /directory1/directory2.
Finds recursively all files in '/path/' excluding folders dir1, dir2 and all like *.dst, that contain 'pattern', and prints matched strings with string number and file name.
Find all files/directories containing 'farm' in their names under '/usr/share' directory tree
Create an empty index.html in each directory under the current one, updating timestamps of already existing index.html files.
set a crontab to create or update the timestamp of "washere2" in the current directory every 30 minutes.
Find all files/directories named 'file' and print them with null character as the delimiter instead of newline
Print the IP addresses of the host name
Gets IP address of first listed network interface in system.
Print the first two bytes of "my_driver" in octal
List all hidden regular files from the current directory separating them with zeroes
Search the current directory tree for *.wav files that have "export" in their pathnames
Rename "original.filename" to "new.original.filename"
Find all *.rb (regular) files under current directory ensuring white space safety and print at most two file names/paths per line
Show the list of files that are owned by user wnj or are newer than file `ttt'
Search in current directory downwards all files whose size is 10 bytes ( Characters ) .
create a tar of all png & jpg images in the current folder
Save the day of the year from the time string "20131220" to variable 'DATECOMING'
find out what group a given user has
Display the entire file system in a tree-like format
Clears the terminal screen.
find all the files in the folder .home/calvin which have been modified in th last 45 minutes
Search the current directory tree for symlinks pointing at other symlinks
Find all *.[ch] files under current directory
Raise an error if there is a reference to a non-existent environment variable and exit the shell immediately if there is any error
List all regular files modified more than 61 days
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them
Find all directories that start with stat
find all the symbolic links in the current folder that are broken
Replace all matches with the regex expanded by $P_FROM with the text expanded by $P_TO in all regular files under current directory not going into subdirectories and modify the files in-place
Display last 100 lines of file-with-line-too-long.txt, waiting for user input after each page.
Find regular files readable by the world
search for the file "process.txt" in the current folder (case insensitive search)
Print unique lines in sorted "file1" compared to sorted file "file2"
Finds if environment variable like 'DUALCASE' exists in environment.
Print "y" for each line in "file2.txt" found in "file1.txt" and a blank newline otherwise
change the owner of all the files in the current directory
find all the text files in the current folder
Copy directory structure from directory 'olddir' to 'newdir'
Extract any line in "set1" which does not appear in "set2"
List all leaf directories (directories which don't contain any sub-directory) under current directory
Delete all ".DS_Store" files/directories under test directory
find  files which  full path name is /tmp/foo/bar under foo directory and print
remove all the log files which have not been modified in the last 5 days
Connect to "$USER_AT_HOST" using connection sharing on "$SSHSOCKET" and request the master to exit
find all the files in the file system which have the permission 777 and with the name "dateiname"
Print short TXT record of domain o-o.myaddr.l.google.com from nameserver ns1.google.com
Find all files with '.conf' extension under '/etc' directory tree that have been modified in the last 30 minutes
Count the number of regular files in directory tree ${DIRECTORY} that contain a vowel in their names
Find all files under images directory
Delete all the files found in the current directory tree whose names begin with "heapdump"
display all the empty files in the current folder( files of size 0 bytes)
Push the directory containing the first existing command found in all arguments to the directory stack.
Find all *1234.56789* files/directories under current directory
display the number of lines in all the ".c" files in the current folder
Find all files under current directory whose file type description contains "image", display only path to each file.
Print the list of files modified within a fortnight ago removing the leading ./ from the file names
Find all files in the current directory tree whose size is greater than 1MB, and move them to the "files" folder
Print '-ok is an action so an implicit -print is not applied' with confirmation from the user for each file or directory found by the name 'file' under current directory tree
Find all your jsp's, map them to your localhost webserver, and invoke a wget (fetch) on them
find all files in the a direcotry which have been modified in exactly 1 day back
Copies file '/boot/config-`uname -r`' to the  '.config', printing info message and prompting before owerwriting files.
Print the list of regular files from the current directory that were last modified on November, 22
Search the current directory tree for directories lacking execute permissions for user, group, or others
display the names without extensions of all the data files in current folder and do not search in sub folders and which have not been changed in the last 60 mins
Search all the regular files in the current directory for "example"
Displays status of currently active network interfaces.
find all gzip files in a folder
Merge lines whose first comma-separated field in file 'in1' also appears as a first comma-separated in file 'in2', also outputting unmatched lines from 'in2' - both files must be sorted, and the output format of each line will be: first field of in1, second field of in2, and third field of in2.
Set the bash prompt to "username@hostname"
Print appended data in "/var/log/syslog" as the file grows
Connect to host "remotehost" as ssh user "user" to copy remote file "/location/KMST_DataFile_*.kms" to current directory on local host.
Print unique lines of sorted file "second.txt" compared to sorted file "first.txt"
Decompress "/file/address/file.tar.gz" to standard output
Count all the mp3 files in the music user's home and subdirs.
Send each byte in "/home/cscape/Desktop/table.sql" to awk
change the group of all regular/normal files in the current directory
Recursively copy "dir_a" to "dir_b" and delete any new files in "dir_b"
find files with pattern` '*.h' and print comparison between file and /tmp/master directory
Find files/directories named 'articles.jpg' under current directory tree and change their permission to 644
Find files in the current directory tree whose size is less than 24000 bytes
Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string "debug ("
display all instances of the .profile file in the entire file system
find all the files in current directory of size exactly 6MB.
Find root's files in the current directory tree
Locate symbolic links in /usr and below
Find all *.mp3 (case insensitive) files/directories under /tmp and remove them
For each line in 'file', print "result = " followed by the line backwards.
Find directories that are directly under $workspace_ts directory (no-subdirectories) and were modified less than 30 days ago
Search the current directory tree for all files matching pattern "*.rb"
Print 7 spaces in a row
Mount "ext4" filesystem "/dev/xvdf" on "/vol"
Remove all *.mp3 files in tmp directory but not in it's subdirectories
Search all files in the current directory tree that are named "whatever" for "you_search_for_it"
Find all directories named "nasa"
Find all files/directories with '.what_to_find' extension under current directory tree and show the list by excluding paths that contain 'excludeddir1' and 'excludeddir2'
Show manual page of find utility
Remove all characters except ";" and digits from standard input
Change permissions to 600 for all regular .rb files in the current directory tree
Find all files/directories named $something under current directory
Print all distinct characters in input "He likes cats, really?"
Find all *.txt files under / and print their sizes and paths
Display a named character dump of "test.sh"
List all files in current directory whose name or file type description contains the word "ASCII".
Search the current directory tree for files matching regular expression '^myfile[0-9][0-9]?$'
Create a symbolic link named "temp" to "newtarget"
recursively change owner and group of the directory /your/directory/to/fuel/ and all files into it to user and group nginx
find all of the files that are readable
Find all files/directories under current directory that match the case insensitive glob pattern {EA,FS}_*
Find files that don’t have 644 permissions
Search the xargstest/ directory recursively for files matching pattern 'file??'
Recursively change the owner and group of all files in the current directory to "andrewr"
Remove all files in and below the current directory whose names begin with "not"
compress all the non-compressed  files in the current directory.
find all the links in the current folder which are broken
Find every file/directory under the directory /home owned by the user joe
Gets IP addresses of all active network interfaces.
Gets IP address of 'eth0' network interface.
Creates 5-letter random file name and saves it in 'rand_str' variable.
List all files/directories under current directory using comma (,) as the delimiter for different fields in the output
Change permissions to 755 for all subdirectories of the current directory
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them
Display all lines containing PROBES in the current kernel's compile-time config file.
set MyVariable to the value of VARIABLE_NAME
Find all files/directories with '.tar.gz' extension under $DIR/tmp/daily/ directory tree, sort them numerically and show the last 3 of them
display all pdf files in the current folder
find all the files in the current folder which are writable
returns the first 100 bytes in the file
Find all empty directories under current directory
Change permissions of all regular files in the ~/dir_data directory tree in accordance with mode `a-x,u+w'
ssh into "ssh.myhost.net" as user "myusername" and run command "mkdir -p $2"
Find all empty directories under $somedir and copy /my/configfile into those directories
display all files in current folder using regular expression
Identify CMS version/releases accross all your Drupal websites
find the file with inode $inum under the current directory and delete it
This will remove all files (type f) modified longer than 14 days ago under /root/Maildir/ recursively from there and deeper (mindepth 1
Add "execute" to the permissions of all directories in the home directory tree
Connect to port 1234 of specified IP address or hostname as ssh user "user", and copy all visible files in /var/www/mywebsite/dumps/ on this host to local directory /myNewPathOnCurrentLocalMachine - this directory must already exist on local host.
Ping all hosts in file "ips" twice
Delete characters in columns 36 through 40 from the output of "finger"
Serach for all the files containing grep in man pages
Find all files in the `work' directory tree, pass them to grep and search for "profit"
Merge colon-separated information from standard input and file1.txt where the first field of both files matches, print unpairable lines from both files, replace missing fields with "no-match", and output the second field from standard input and the second and third field from file1.txt
display table of files with their name, owner, and size in bytes.
Remove all *.mp3 files in tmp directory but not in it's subdirectories
Remove all "core" regular files in the /tmp/ directory tree
display all normal/regular files in current folder which have readable permission
find all the files that have been modified exactly yesterday (from 00:00 to 23:59 yesterday)
Find files not matching the patterns 'Image*-70x70*' and 'Image*-100x100*' in their names under Folder1 and copy them to Folder2
find file end with  '.txt' in current directory.
Trim leading and trailing whitespace from variable 'var'.
find all txt files under the current folder except ./directory folder
find for a word in all the regular files in the current directory
display all the "C" files in the current folder
Show the subdirectories of the current directory
Recursively finds all files in a current folder excluding already compressed files and compresses them with level 9.
Print "I am USER and the program named ls is in LS_PATH" where "USER" is the current user's user name and "LS_PATH" is the full path of the command "ls"
Remount "/home/evgeny" with the "suid" flag set
Find all files/directories named 'findcommandexamples.txt' (case insensitive) in the entire filesystem
Gets IP address of 'eth0' network interface.
Find files in /var/tmp/stuff and below that have not been modified in over 90 days
Print the sorted unique column of usernames of users who are currently logged in
Find files in the /travelphotos that are greater than 200k in size but do not have "2015" anywhere in the file name
Find all  'custlist*' files under current directory
Print the last file extension from standard input
List all files in the /hometest directory tree whose names are "Trash", and their sizes
Find all files under current directory that were modified more than 7 days ago and delete them
Write standard input to standard output and file "/tmp/arjhaiX4"
Find all *.rb (regular) files under current directory and change their mode to 600
Remove all files matching the pattern *[+{;"\\=?~()<>&*|$ ]* under current directory
find all readable files
Find all .sh files in the current directory tree and remove them
find all  files that match "[a-f0-9\-]{36}\.jpg" of grep
Search the current directory recursively for files containing "needle text"
replace the word foo to bar in the current folder in all the regular/normal files containing the word "baz" in their name (does not update the file)
display all sqlite files in the current directory along with their timestamp
Find all symbolic links under '/some/directory' driectory tree
Find all files that were last modified less than7 days ago under /home
Save IP addresses of the host name in variable "ip"
Move all directories in the current directory tree that have been modified in the last day to "/path/to/target-dir"
Find all files under $1 directory excluding hidden files and append a null character at the end of each of their paths
Print all files in the current directory tree as a comma separated list
List each file or directory in the current directory prefixed by its filesize in bytes and sorted from smallest to largest
create directory temp into home directory
Save the short DNS lookup output of $WORKSTATION to 'WORKSTATION_IP' variable
Find all files under current directory with their size and paths, reverse sort them numerically, then print the 2nd field (with space as the delimiter) of the first 4 entries
List all *fink* files/directories under current directory
Find all files/directories under current directory appending a null character at the end of each file name/path
wait 2 seconds and then print "hello"
Counts lines in each of *.php files in a current folder and subfolders and prints total count.
Find files and directories modified within the last 7 days
Search the .java files from the current directory tree for TODO lines
search for all the files in the entire file system which have either suid or sgid bit enabled and find of diff of these files with the file "files.secure".
Find all directories under $d directory and set read-write-execute permission for owner and group and no permission for other for those directories
Compresses all '*.xml' files under current directory with 'bzip2' utility.
Make directory "/tmp/googleTestMock"
create a tar ball of all the jpg and png images in the current folder
Create an empty file "foo" in each directory under the current directory containing a file named "bar".
Find the password file between sub-directory level 2 and 4.
Print the characters in $b that match with any character in $a without printing any newline
Calculate md5 checksum of '/etc/localtime' and save the first space separated part in variable 'checksum'
find all the text files in the home directory
Look for directory `Cookbook'
Find all files in the current directory and its sub-directories that have been modified sometime in the last 24 hours.
Connect to host 'hostname' as user 'username' by forcing host key confirmation
List all variables (names and values) whose name or value contains X.
Find files whose data was modified within the given days of the month
Creates temporary file by template provided in option '-t'.
Find all the files which are accessed in last 1 hour
Remove all files/directories in the current directory without '.git' and '.gitignore'
Copy directory hierarchy "dir" and all its .txt files to "dir_txt"
Delete all empty directories in minimum 2 levels down the root directory
Opens menu item 'Basic Shell Features' -> 'Shell Expansions' -> 'Filename Expansion' -> 'Pattern Matching' in the 'bash' manual.
Saves folder path where target of symbolic link $file file is located in 'base' variable.
Search for the regex "+\S\+" in file 'in.txt' and print the matches by replacing newlines with comma (',')
Find all regular files in the current directory tree and count them
Search the current directory tree for all .java files that were last modified at least 7 days ago
Display difference between one.txt and two.txt side-by-side.
Find all or single file called tecmint.txt under the / directory of owner root
Look up for 'myip.opendns.com' in server 'resolver1.opendns.com' and save the terse output in 'IP' variable
Change directory to "/path/to/pdf"
List all *.txt files/directories under /etc
Format output of 'file' content to columns with wide not less than 80 pixels
Search for regular files of the user bluher in the file system
Find largest file in linux with find command
Search the current directory tree for files whose name is ".note", case insensitive
display all the files in current folder
Change owner to "$user" and group to "$group" of "$file"
Recursively copies 'SRCFOLDER' to the 'DESTFOLDER/'
Search for Subscription.java under current directory, and go to directory containing it.
Print unique list of who is logged in and the time of login formatted in columns
find all the cpp files in current folder
Find all *~ files/directories under dir and  print an rm command for each of them for deletion
Find all catalina* files/directories under /path/to/search/in
Verbosely compresses all files on fourth and fifth depth level keeping original files in place.
Forcibly removes ${temp} file.
Remove all .txt files in and below the current directory
Prints sequentially listing of a current folder and calendar of a current month.
Find all /home/folder1/*.txt files and create symlinks appending '_CUSTOM_TEXT.txt' in their names
find all the html files in the current folder which have been modified in the last 7 days
Find files matching `.ssh*' and append their anmes to file `ssh-stuff'
Print lines in the sorted contents of "a.txt" that are not in the sorted contents of "b.txt"
create a symbolic link with absolute path "/cygdrive/c/Program Files" to file "/cygdrive/c/ProgramFiles"
Change all directories under "./storage/" to owner "apache" and group "laravel"
Save the system load average for the past 1 minute of the currently logged in user to variable 'proc_load_average'
Delete all files and directories
Rename file extension '.andnav' to '.tile' for all files/directories under current directory tree
Remove "_dbg" from all file or directory names under the current directory
display a long list of all regular/normal files in the file system which belong to the root and with suid bit set
Save the user name of the current user to variable "x"
find all teh script files in a directory
Receive input and print it to terminal preceeding with line number
Expand bash array "myargs" as arguments to "mv"
Find all MP3 files in the home directory tree that were modified in the last 24 hours
execute a command in 10 seconds
Find all the files which were accessed 50 days ago
find all files in the current directory and sub-directories that were accessed after modifying /etc/hosts
Print content of all files found regarding seach options '[whatever]'
Remove all regular files from the current directory tree whose names do not end with "txt"
Print the names of all the files from directory tree ~/some/directory whose names end in "rb"
display all files in the current folder which do not belong to the user john
Find the 5 largest regular files in the current directory and below.
Search for the string 'device' in all regular files in the entire filesystem
Remove all files in and below the current directory whose names begin with "not"
Find all files under and below /dir that were accessed less than 60 minutes ago
List all regular files in the current directory tree
Display the count of regular files under 'home/magie/d2' directory tree which have execute permission to all the users
Find the process id of mysql
Remove all *.sql files in the $backup_path directory that were last modified more than 5 days ago
Print string "123" once with '1' replaced by 'a' and second time replaced by 'b'
Finds IP address of 'eth0' network interface.
Unpack all *.gz archives in the current directory tree
Find all "YourProgramName" regular files in the current directory tree and print the full paths to the directories containing them
SSH into server "app1" as the current user
Search for regular files of the grooup 'users' in the file system
Find all python files under current directory tree, save the list to 'output.txt' and search for 'something' in those files
Print a tab separated table in "table.txt" with cell borders
search for "flac" files in current folder using regular expressions
find all regular files in current directory and replace the word searc to replace in them.
Find all files/directories under '/home/user/' directory tree whose status were changed 10 minutes ago
Print 'This should print the filename twice if an implicit -print is applied: ' appended with file paths for all files named 'file' under current directory tree
find all the files in the home folder which end with ".tex"
Delete all .svn files/directories under current directory
Find and print the full pathname of all PDF files in the current directory and its sub-directories.
Find all files under ./lib/app and sort them
Archive "src-dir" to "dest-dir" on "remote-user@remote-host" and delete any files in "dest-dir" not found in "src-dir"
delete all the regular files in the temp folder which have not been modified in the last 24 hours
Locate all files in the current directory and below that have "testfile" in their names regardless of the case
display all the files in the directory modules
Write "deb blah ... blah" to standard output and append to "/etc/apt/sources.list" as root
Insert the current host name on line 15 of "test.html"
Print the file sizes along with their paths for all *.txt (case insensitive) files/directories under current directory tree
list *.pdf files under the /home/user/Desktop directory.
Recursively removes all files named '.svn' in a current folder, and prints messages on each action.
find all the directories in the different folders excluding search in the sub directories and create these folders in the current directory
Print a line of 10 '#' characters
Set permissions to 755 for every subdirectory of the current directory
find all the files in the current folder and display adding quotations to each file and replace spaces with new line
start from current directory, skip the directory src/emacs and all files and directories under it, and print the names of the other files found
Print only the number of lines in file "$f"
Find files in the current directory tree whose status was changed within the last 60 minutes
display all the files in the file system which are present in nfs system
find all the files starting with "config" in the folder Symfony ( case insensitive search)
search for the pattern "tgt/etc/file1" in the files tgt/etc/file2, tgt/etc/file3
Search the current directory tree for file "a.txt"
force create hard link between $GIT_DIR/../apresentacao/apresentacao.pdf and $GIT_DIR/../capa/apresentacao.pdf
Find all files in the /etc folder that have been modified within the last 30 days and copy them to /a/path/.
Find recursively all empty directories in the current directory
display files ending with ".ext" in current folder which are present in the file "foo"
Print sorted list of strings from 'ip_addresses' file, with number of occurrences of each string.
Find all files that contain the case insensitive regex 'stringtofind' in maximum 1 level down the / directory without descending into other partitions
remove all the core files in the home folder
Finds all folders that contain 'ssh' file and have 'bin' in path.
create directory TestProject
bind "\C-i" to "complete" function
Remove ESC key bind
find all the files in the file system which hae set uid enabled and save them to /root/suid.txt and those which have size greater than 100MB save them to /root/big.txt
Change the group to `temp' for all files in the current directory tree that belong to group `root'
Sets shell option 'nounset'.
Find directories that have "755" permissions and modify them to have "700" permissions
Send one ping request to host with local address in the 192.168.1.x range, with last number specified by variable "COUNTER", and output only lines containing "ms" to standard output.
Search the .VER files from the current directory tree for Perl regular expression "Model-Manufacturer:.\n."
Search for "pattern" in all the .c files in the current directory tree
Unsets shell option 'extglob'.
Composes full process tree with process id numbers, and prints only those strings that contain 'git'.
Find files matching an exact set of permissions
Get domain name of $ip and save it to the variable 'reverse'
Verbosely change ownership of "$file" to "root"
split processed content of the file temp into pieces per 1 line named "tempNNN" with numeric suffix
search for all the files in the current directory which have the group staff and have write permission enabled to the user and display them.
Find all files/directories with '.js' extension under current directory tree without descending into './directory'
List root's regular files with permissions 4000
Try to determine the type of contents in "myfile" located in user's home directory.
Create an empty index.html, or update its timestamp if it already exists.
Views text content of compressed FileB file in TarFile archive.
find all the configuration or text files in current directory
Search core files in current direcory and delete .
search for the file "process.txt" in the entire file system (case insensitive search)
Count the number of "x" characters in "filename"
Find files with 002 permission in entire file system and print them with the string 'has world write permissions' appended after every path
find all the files in the home folder which are less than 300Bytes
Search /some/directory for files that are owned by the user "joebob"
display list of all the regular/normal files in the home folder which are exactly 6579 bytes
Prints long listing of "$dir/$file" file.
Find all files under current directory and set read permission for group and other for these files
Unzip "daily_backup.sql.gz" and search for lines matching "'x'|/x/"
Find all 400 permission files under /data directory, print 'Modifying ' appended with file path for each of them and change their permission to 755
List files in the current directory and below except for GIT files
display a long listing of all the files in the current directory
Split "mybigfile.txt" into files of at most 200000 lines each
display all files in the current folder which end with extension "myfile" followed by two digits
Print second section of space-separated data from text file "a".
Change to location of '$TARGET_FILE' file.
Creates temporary folder in TMPDIR (if defined) or in '/tmp/', and stores path to created folder in 'tmpdir' variable.
Print only common strings in content of files 'file1.sorted' and 'file2.sorted'
Remove all "core" files that were last changed more than 4 days ago from the current directory tree
Find regular files that have SUID or SGID set
Read the raw input of "/dev/input/mice" as hexadecimal bytes with 3 bytes per line
create directory /tmp/new
Copy local file "$1" to host "$2" into host directory "$3"
Find all files under /path and below writable by `group' and `other'
find all the directories in the current folder
Add group write permission to all files and directories in the current directory including hidden files and excluding ".."
search all jpg files in current folder
Find all files residing in /home/dm/Video or below that were last changed at least 10 days ago
Print inode, permissions, size, and modification date of all files in the current directory tree as a list with an extra column prepended
Prints process tree of a process having id $mypid, with command options and process id number.
Find all directories under current directory and change their permission to 700
Removes only lowest level subfolders from current directory tree (folders without files and another folders within).
Find all files named "filename" in the current directory tree, not descending into "FOLDER1" directories
Find *.c and *.sh files
Remove all .txt files from the /full/path/dir directory tree
Find all files/directories under '/etc' directory tree that are greater than 5MB and print their sizes and names
Find '.git' directories in directory tree /home/madhu/release/workspace
List all regular files under current directory (not white space sage)
Remove all files 'a.out' and *.o in the home directory tree that were accessed more than 7 days ago
Search the current directory for files whose names start with "messages." ignoring SVN files
Change all file permissions to 664 and all directory permissions to 775 in directory tree "htdocs"
Find the top 25 files according to their size in the current directory and its subdirectories
Change permissions of "mksdcard" to 755
Remove all .tmp files in and below /tmp
Find all files/directories named 'articles.jpg' under '/home/username/public_html/images' directory tree
Find all files/directories named 'foo' under current directory tree without descending into directories named 'foo'
Measure the disk space taken up by all TXT files in the current directory tree
Remove all libEGL* files from the current directory tree
Copies files 'src/prog.js' and 'images/icon.jpg' with fully-defined path to '/tmp/package' directory.
delete all the empty files in the current directory
Find all files under and below /dir that were modified less than 60 minutes ago
create a gzip of all the files in the current folder excluding the already gzipped files
Recursively find the latest modified file in the current directory and print the modification time and filename
Edit current user's cron job list with editor specified by EDITOR environment variable, or default /usr/bin/editor if EDITOR is not set.
Make directory "~/practice"
find all the php files
Search directory tree $DIR for *.txt files
Print the lines in "table.txt" grouped by the first field
delete all files in $DIR that have not been accessed in at least 5 days
Set variable "MAVEN_DEBUG_OPTS" to "-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000" on Windows machines
Find all files/directories under /home/feeds/data directory
print all files in the current directory and all subdirectories
Find all *.txt and *.json files in current directory
List all *.txt files/directories under /etc
Update the archive '2009.tar' with the files from the data/ directory tree that match pattern 'filepattern-*2009*'
Search for 'stuff' in all *,txt files under current directory
Delete all hard links to the physical file with inode number 2655341
Search for files only that end with .php and look for the string $test inside those files
Output the base name of first argument to script or function, that is the part following the last slash.
Show directory sizes in KB and sort to give the largest at the end
find all the links in the current folder and following it to the pointed path
find for lighttpd in /var
find all text files in the current folder excluding those that are presenti n the folder "/svn" and search for a pattern.
Find all files under $YOUR_DIR
Change the ownership of "file.sh" to "root"
Find files smaller than 40 blocks skipping directories on other file systems
Runs `file' on every file in or below the current directory.
Find all files/directories under current directory with null character as the delimiter and then replace the null characters with :
Find files/directories named blah under current directory
Find all files under /home/username/public_html/sites/all/themes and set their permission to 640
Find files ending in "config"
Find all files/directories under $1 which have at least write permission for their owner and set write permission for group for these files/directories
display all the files with the names "name1" and "name2" in the current folder and do not search in the sub directories
Remove all directories called "test" from the current directory tree
Find all files/directories that are owned by user 'wnj' and are newer than 'ttt' by modification time in the entire filesystem
search for the file in the entire file system which has the words "filename" in its name
display all the files in the home folder which are smaller than 500 bytes
Print fourth column of space-separated data from text file text.txt.
search for MP3 files in the current folder and subfolders except in dir1 subfolder.
Find all files in the current directory tree whose size is greater than 1MB
Saves printed calendar for $month, $year in positional variables.
find all the files that have been modified today
Print summary of files present only in dir1.
Show all values (without the names) of variables whose name or value contains "VARIABLE_NAME"
list PID of a group leader
Replace each non-blank line in "YOURFILE" preceded with "pX=" where "X" is the line number
create directory /data/db
Find all .java files under and below the current directory
Find all files/directories under current directory and print their paths
Find all *.txt (case insensitive) files of user root under / directory and show a few lines of output from the beginning
Find all files/directories with '.js' extension under current directory tree excluding paths that contain the directory './directory'
display all files in current folder excluding text files
Find *.java files under current directory and compress them to myfile.tar
Move all lines starting with "Ca" to the beginning of the file
List environment variables whose name matches '^\w*X\w*'
Search for file "file" between level 2 and 3 of the directory tree
update the permissions of the directories in the folder folder_name to 775
Make directory "~/log"
Display the output of "ls" for an 80 character wide display
display all the files in the current folder which have been modified between two dates
display all the files in the current folder which have the permissions 777 and which have been modified in the last 24 hours.
Tmux configuration to enable mouse support within tmux
Search the entire file system for .jpg files.
search for the files with the name "temp" and which have not been accessed in the last 7*24 hours in the /usr folder
find files in the current directory and sub-directories, whose content was updated within the last hour
Read lookup requests from text file '1.txt' and uses them to fetch TXT records.
Display the number of regular files under current directory tree
find the biggest files only (but not directories)
find all ".flac" files starting with "cmn-" and search for files having CJK characters using unicodes
Recursively copies all files in the current directory but ones that names match pattern "dirToExclude|targetDir" to the 'targetDir' directory, printing info message on each operation.
Search for directory foo ignoring case
Find all files whose names end with "~" in the /home/peter directory tree, following symlinks, and delete them
Rename all "thumbs" directories to "thumb" in the current directory tree
display long listing of all the regular hidden files in the folder Musica
Attempt to connect as root via ssh to host "IP" and copy /root/K to local machine, passing option "StrictHostKeyChecking=no" to the ssh backend - this will normally fail because ssh servers by default don't (and shouldn't) accept root logins.
Recursively finds 'pattern' in files from current folder, and prints matched string with number only if matching whole word.
Gets IP addresses of all network interfaces.
Rename the *.so files in the current directory tree prepending their names with "lib"
Print only digits in variable "$name"
Print only lines from 'file1.txt' that not present in 'file2.txt' and beginning with 'Q'
Create a directory named 'alpha_real' in the current directory
Search for all files with either "sitesearch" or "demo" in their path names
Finds strings with text "searched-string" recursively in all files of current folder and prints names of files with matched strings.
display all the jpg files in the current folder which belong to the user nobody
create directory /etc/cron.minute
Find all files matching pattern '.#*' in the current directory tree
find all the text files in the current folder and display their Permissions and size along with their name
Returns exit code 1 and terminates shell if 'set -e' was applied.
Search the current directory tree for regular files whose names end in ".shtml" or ".css"
Search for 'mystring' in all *.txt files under current directory
find all directories with the name test in a directory
Recursively copy "source", "dir", and "target" to "dir" as a dry run
Find files that do not have a listing in the /etc/passwd or /etc/group in the file system
find all the files in the home folder which have been modified in the last 30 minutes
Change to folder where the oracle binary is.
Search the regular files of the current directory tree for string "whatever"
Print only common file names in sorted listings of directory 'dir1' and 'dir2'
Search for .zip files that are larger than 100M found anywhere in the file system and delete those files.
Join lines in file "aa" with lines in file "bb" if the lines share a common first word and sort the result numerically
Finds IP addresses of all network interfaces.
Print a list of all files and directories in the /var/log directory tree
Mount "/path/to/device" on "/path/to/mount/location" as a vfat filesystem and a loop back device
Find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding $EXCLUDE/* paths
find all files in the entire file system whose size is more than 100MB
find all files in the file system which belong to the user pat and having the word "filename" in their name.
Prints a random number between 2000 and 65000
long list al the files in the current directory which have all the permissions
Process each file beginning with "file" in the current directory as an argument to "bash script.sh"
find all symbolic links in the current folder
Page through the contents of yourFile, adding a $ at the end of each line.
Use the output of "ping google.com" as input to awk script "packet_loss.awk"
Find all files that are exactly 50 bytes
Find command will display top 10 Big files from current directory .
Combine every two lines of standard input
Search "whatyousearchfor" in history and print 3 lines before and 4 lines after
Forcefully remove files *~important-file
search all undo files(ending with .undo) in the current folder and calculate the total size of them
find files in the /usr/src directory with pattern` *.c  that larger than 100 Kilobytes
Search the system for files named "findcommandexamples.txt", ignoring the case
Find all the files which are accessed 50 days back
Replace all colons (':') with newlines in $list and search for the first match to the regex "^$removepat\$" where $removepat is a variable and save the result to variable 'removestr'
Print the absolute path of third-level files under the current directory tree and number the output
Display the last colon-separated field of variable 'var'
print bindings for "p" and "e" with no case sensitivity
Print a detailed list of all regular files from the current directory tree
find all the perl files in /var/www
This command find displays the files which are modified in the last 15 minutes. And it lists only the unhidden files. i.e hidden files that starts with a . (period) are not displayed in the find output.
Look for any instance of "HIGHMEM" in the current kernel's compile-time config file.
Find files/directories with inode number '212042' under '/var' directory tree without traversing other devices/partitions
Counts lines in each *.cpp, *.c, *.h file.
Append all regular files modified in the last 24 hours to the "$archive.tar" tar archive
Save the system host name in variable "HOSTNAME"
Build an "svn hotcopy" command for each subdirectory of /usr/local/svn/repos/
List all directories and subdirectories
Output "stuff", removing "/foo/bar/" from the specified path.
Gets MAC address of eth0 network interface.
Find all files in the current directory tree whose names end with the suffix ".keep.$1", where $1 is the first command line argument, and remove that suffix
Find all mysong.ogg files/directories under your home directory
Find a used disk space of a target directory and files inside of it
Search for environmental variables with "HIST" in their name or contents
display all the directories in the current folder excluding those that are present in the aa directory tree
find all the files in the entire file system excluding the folder proc, which do not belong to any user or any group
Search the /myfiles directory tree for regular files with at least these permissions: 647
Create intermediate directories "x" and "p" as required and create "q"
Find all files under the current directory whose filenames are not "file.txt", ignoring the case
Print the names of all files from the /tmp/dir1 directory tree
List all environment variables
Search for .bam files anywhere in the current directory recursively
split the file "/path/to/large/file" into pieces per 50000 lines named as /path/to/output/file/prefixNNN
Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'etc/rc.d/'
Find all files named 'text.txt' under current directory tree and display their contents
display long listing of first 10 directories in the current folder
List all files in /home/bozo/projects directory tree that were modified within the last day
Traverse the filesystem just once, listing setuid files and directories into /root/suid.txt and large files into /root/big.txt.
Finds users with X session in system and puts the result into USERS variable
Find only files under /etc with the size of 100k-150k
Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar
Create intermediate directories as required
Show the list of user wnj's files that are newer than file `ttt'
Archive all filepattern-*2009* files/directories under data/ into 2009.tar
Prefix all files and directories in the current directory with "Unix_"
display all text files in the folder /user/directory which have been modified in today
Find all IP addresses in /etc directory files
Print a count of each unique line in "ip_addresses"
display all the files in the current folder excluding those which are in the path of ".git"
Find all files in directory tree "dirname"
Print 1 to 10 by separating them with colon (':')
Search the XML files from directories /res/values-en-rUS and /res/xml for string "hovering_msg"
recursively change owner and group of the directory and all files into it to user root and group root
Search the regular files of the current directory tree for string "foo"
Search the files from directory tree "dirname" for string "foo"
Change owner to "root" and group to "dockerroot" of "/var/run/docker.sock"
Print a space separated list of numbers from 1 to 10
Displays process tree of a process with id 'PID', showing parent process and processes id.
Merge the first "$lc" lines of "current.txt" and the last "$lc" lines of "current.txt" and display the result as a comma separated table
display all files in current folder excluding those that have the word "git" in their name and display files that have git in their path names
find all regular/normal files in current folder which have been modified in the last 60 minutes
search for the file centos in /usr folder ( case insenstive search )
Find all *.page (case insensitive) files/directories under current directory and run ~/t.sh for each of them with the file path as argument, then sort the output
Extract 8 bytes as an unsigned integer that is "$o" offset into "$pkg"
Prints long listing of directories '/tmp', '/tnt' themselves bordered with '<--' and '--->'.
Find all files under current directory matching the pattern '[error,access,error_log,access_log,mod_jk.log]*.[0-9]*' in their names
Find files/directories that does not have write permssion for group or others
Archive directory "." to "server2::sharename/B"
Find all *.txt file (case insensitive) in the entire system and copy them to /tmp/txt
find all posix-extended regex  "[a-f0-9\-]\{36\}\.jpg" files
remote copy all text files from one location to another
find all the html files which are modified in the last 7 days
Saves real path of the folder containing the current script
Find all regular files that were modified more than 60 days ago under '/path-to-directory' directory tree, sort them according to timestamp and print the filenames preceded with the timestamps
Search the current directory tree for *.conf and *.txt files
Create an empty file with a carriage return character in its name.
Print the real path of "$F" where each symbolic link component must exist
display all directories in current folder
Set the group to "username" for all files with GID=1000 in the current directory tree
Reports count of characters in the value of ${FOO} variable as follows:  "length(FOO)==<counted number of characters>"
find all the files in current folder which end with a speicifc regular expression and display their count
Force remove all files and folders in the physical current working directory
Creates temporary file and saves path to it in 'fif2' variable.
find all the wav files in the current folder and do not search in the sub directories
Find files/directories named 'foo' in the current partition of the root filesystem
change permissions for directories in the entire file system
Set shell option 'checkwinsize'.
Read a single character from standard input into variable "key" without backslash escapes and using an interactive shell with the prompt $'Are you sure (Y/n) : ' and default value $'Y'
Unset the executable bit of all regular files from directory trees arch, etc, lib, module, usr, xpic
change owner of all files into current directory except  files named as  './var/foo*' to user www-data
Treat each line of "list-of-entries.txt" as a value to be put in one cell of the table that "column" outputs
Find all files/directories under current directory that were accessed less than 1 day ago
change owner and group of the file it to user and group root
Sends current job to the background.
search for the word "nameserver" in all the configuration files of the /etc folder
Search for line 111 in file "active_record.rb" with 2 lines of context
Compare "file1" and "file2" line by line with 3 lines of unified context
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file1.tar) of the last block of files sent to xargs
remove all the files in the current folder which have not been changed in the last 30*24 hours
Find all the files which are greater than 50MB but less than 100MB in size
Find all files/directories following symbolic links under current directory tree that are owned by 'root' user
Recursively change the owner of all files in "/usr/local/lib/node_modules" to the current user
Find all directories under ~/code excluding hidden directories and replace all newlines with : in the output then remove the last :
Find all files in the current directory tree which do not belong to any user
Prints the Nth line of output from 'ls -1'
Delete the 4th tab separated column from the output of "finger"
find all .pm, .pl files in /users/tom and search for multiple pattern in same files and display the matched file names
create directories foo and bar
List all zero-length files
Search the /Path/bar* directories recursively for files matching pattern "file_name*"
Recursively change the owner and group of "/workspace" and "775" to "your_user_name"
find all the symbolic links in the current folder
Concatenate files containing `test' in their names
Find all files/directories named 'photo?.jpg' under current directory tree
Print a list of all the files in entire file system whose inode has been modified no later than one minute ago
Decompresses file.
Archive "/local/path/some_file" to "/some/path" on host "server.com" authenticating as user "usr", compress data during transmission, show progress details.
Find all files on smbfs mounts and print its information and file type
Print the first line of "filename" as a hex dump of characters
find files which full path name is /tmp/foo/bar under foo directory and print
all the files that end with .mp3 and end with .jpg
Find all files/directories in entire file system for which owner has at least read/write permissions, or the group has at least read permission, or others have at least read permission
Find all files/directories under $1 which have at least read permission for their owner and set read permission for group for these files/directories
Count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days
find all the files in the current folder which are modified after /bin/sh.
Execute "ls -l" every 2 seconds and highlight the differences in runs
Remove the first 13 characters of each ".txt" filename in the "/tmp" directory tree and number the output
Find all .php files in all directory trees matching pattern `/srv/www/*/htdocs/system/application/' and search those files for string "debug ("
Uncompress "archive.tar.gz" and extract the archive to "/destination"
Prints date of first Tuesday in January, 2015
Changes group ownership of 'shared' to 'Workers'.
display all the files in the folders mydir1, mydir2 which are bigger than 2KB and have not been accessed in the last 30*24 hours
Print the first line of "seq 1 10000"
Run 'otherscript.sh' script with all environment variables specified in the file 'xxxx'
Split "/usr/bin/cat" into 10000 files of about equal size
Create a symolic link in "/usr/local/bin/" to "/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl"
Compresses all files in the directory 'PATH_TO_FOLDER' without recursion and keeps uncompressed files from deletion.
Set the 'pipefail' shell variable causing bash to return true only if all commands in a pipeline return true.
Join lines in file "aa" with lines in file "bb" if the lines share a common first word
Counts number of occurences of all ip addresses in 'ip_addresses' file, and prints all addresses with number of occurences in a descending order.
Find .rmv files in the current directory recursively
Split "t.txt" into files with at most 30000000 lines each and use a prefix "t" and numeric suffixes of length 2
Find out all hard links in the /home directory to file1
Format time string @1267619929 according to default time format
Count number of occurences of "123" in the string "123 123 123" (ie. 3)
get the root access
Rename "Tux.png" to ".Tux.png"
Search for 'Processed Files' in all $srch* (case insensitive) files under current directory run the sed script 'N;s/(.*)\n(.*)/\2 \1/' on the output
Counts lines of /etc/fstab file.
Find all the files/directories in '/path/to/files' directory tree which have not been modified in the last 2 hours
Find all files in the current user's home directory and its sub-directories with the optional constraints of опция_поиска, значение and/or опция_действия.
Copy all regular files whose names end in "~" from the /path directory tree to ~/backups/
Search user1's home directory tree for *.bin files
Gets MAC address of eth0 network interface.
Delete and count files in $DIR_TO_CLEAN that are older than $DAYS_TO_SAVE days
Remove all files under current directory
Print "new.txt" with line numbers prepended
change the permissions of all the regular/normal files in the current folder
find all the text files in the folder /home/calvin and do not search beyond 2 levels
Delete all lines matching "pattern" in "filename"
Prints top-ten biggest top-level folders within a 'var' folder.
Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script
Copy file in current directory of local host to host "remote", connecting as ssh user matching current local username, and copying the file in home directory on remote host - enable compression during transfer.
Make directories "mnt" and "point"
get a PID of a process
Print all files in the current directory as a comma separated list
Removes all files from current folder but 5 newest ones, filtering out directories from initial search.
Search for "Stock" in all *.java files from the current directory tree
Silently read a line from standard input into variable "REPLY" without backslash escapes and using the prompt $'Press enter to continue...\n'
Prints full path to files in a current folder.
Compress from standard input with gzip
find all files in current folder which are bigger than 1 MB and move them to another folder
Find files whose pathnames end in "config"
Set 644 permission to all regular files under current directory
Print a single line of numbers from "001" to "100"
Create a symbolic link named "/usr/bin/my-editor" to "/usr/share/my-editor/my-editor-executable" and attemp to hard link directories
Displays calendar for a previous, current and next month.
Copy src_dir recursively to dest_dir, but without overwriting existing files.
Remove all .sh files in the current directory tree whose names begin with "t"
find files in home directory that names are game
Search the current directory and its sub-directories for any file that has "bsd" somewhere in its name.
Search PATH for utilities called "rename", display the type of file (script, executable, ...) for each match found.
force remove all the c files in the current folder, print0 is used to handle all files with new lines in their names or files with only spaces in their name
Gets IP addresses of all active network interfaces.
Search the current directory tree for files containing "needle" in their names
Rename '.mkv' extension to '.avi' for all files/directories under '/volume1/uploads' directory tree
Display long listing of all the files/directories owned by the user 'me' under '/tmp' directory tree
Clears terminal screen.
Calculate the md5 sum of all files in the current directory and formatting the output by removing parenthesis
Remove all *bak files under current directory with confirmation prompt
search for the directory testdir in the folder /home
find all files in the current folder which have not been accessed in the last 30 days in the current folder
search for files with the name "temp" in the /usr folder
Adjust the timestamp of 'filename' by subtracting 2 hours from it.
Search PATH for utilities called "rename", display the type of file (script, executable, ...) for each match found.
Prints path to folder that contains file "/path/to/vm.vmwarevm/vm.vmx".
Copy a comlex directory tree from one machine o another while preserving copy permissions and ownership
Find all files whose names end with "macs" in and below the current directory
Change file permissions on all regular files within a directory
Print a ping request and the number of packets sent, received, and the percentage lost for each ping request to "google.com"
Search the files from the current directory tree for text "documentclass"
Find all *.mp3 files in entire file system greater than 10MB and delete them
Creates temporary folder and saves path to it in 'other' variable.
List environment variables whose name matches ".*X.*"
Find *log files/directories within a maximum of 3 levels of directories
display all the files in the current folder excluding the files with the name mmm
Remove all *.bak files under current directory
search for text files in the current folder which have write access to others
find  file which case-insensitive name is too in currect directory
Search the home directory tree for video files
find all files and directories that have been modified in the last seven days
display all the regular/normal files in current folder which have been modified exactly 60 minutes before
remove all the regular/normal files in the temp folder and do not delete in the sub folders
Display file.txt with lines numbered, and page interactively through the result.
Find all files/directories under current directory tree excluding files/directories with name 'query_to_avoid'
Replace 'company' with 'newcompany' in all files under current directory
Rename all files in current directory to lowerase.
Find all files in the current directory tree whose pathnames match pattern "./sr*sc"
Recursively copy "/path/to/data/myappdata/*.txt" to "user@host:/remote/path/to/data/myappdata/"
Print the empty directories and files under current directory
Calculate the total size of all *.jpg files in the directory tree
Delete all files throughout the entire filesystem that are no longer owned by a valid user.
Prints process tree, showing only strings with 'MDSImporte', and chopping output after ${WIDTH} characters.
change user and group of the file "/var/run/docker.sock" to user root and group dockerroot
Find all files/directories named 'articles.jpg' under 'images' directory tree
find all  *.csv files which  modify within last 2 days in /home directory then zip ( archive )-
Display the file type description of /bin/bash, ie. symbolic link, ELF executable, etc.
find all the php files in current folder and search for multiple patterns in these files and display the file names
find all data files in current folder which have not been changed in the last 60 minutes and display their name without extension
forcibly and verbosely create a symbolic link named "target" to file "source"
find all text files in user/directory/ which have been modified today and display the last line of these files
Find all filenames ending with .c in the current directory tree, case insensitive
Removes all files like 'A*.pdf' from current folder without prompting.
Make directory "new_dir"
Make a new directory "new-dir" in every directory in the current working directory non-recursively
Output all lines from file1 except those present in file2, assuming both files are sorted.
Recursively change owner to "amzadm" and group to "root" of all files in "/usr/lib/python2.6/site-packages/awscli/"
Create a symbolic link named "/usr/local/bin/subl" to "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl"
display all the directories in the folder /var and do not go beyond 2 levels during search
Find all *.htm files under current directory
Set permission of all files in "img", "js", and "html" to 644
Prints groups list that user 'el' belongs to.
Report file system containing path to the current working directory inodes usage.
Page through the contents of yourFile, adding a $ at the end of each line and replacing tab characters by ^I.
Display the 'bash' manpage, going to the first occurence of \' sequence of characters.
find StringBuffer in all *.java files
search for all the files in the current folder and sort them in the order of their depth and display the file names
show all the directories in the current folder
Silently read exactly 1 character ignoring any delimiters  into variable "SELECT"
Make directories "3/foo", "3/bar", and "3/baz"
Find all .js files in the current directory tree that do not contain a whitespace
find all the files ending with "clj" in the current folder and search for a pattern
Find all directories under $FOLDER, take the first fields (dot (.) as the delimiter) from their timestamps and reverse sort them numerically
Counts all files in a current folder and subfolders.
Find all *.rb (regular) files under current directory and count their line numbers
Prints long recursive listing of all content of a current folder, saving output to 'output.file'.
find all the files in current folder ending with "ini" and search for a word in all these files
find all the files in the current folder that have been modified in the last 7 days
Report file system containing /example disk usage in kilobytes.
Find all files that belongs to user Tecmint under /home directory
find all the files in the entire file system that were modified in the last 10 minutes
Recursively finds all '*.png' files older than 50 days in a current folder and removes them.
Print the time to ping "8.8.8.8" followed by a time stamp if the ping is greater than 50
Recursively copy all files and folders in the current directory excluding "exclude_pattern" to "/to/where/"
Find all directories in the current directory tree that are not accessible by all
Find all directories under /path/to/base/dir and change their permission to 755
Recursively changes group ownership of everything in a '/home/user1/project/dev' folder to 'project_dev'.
Search directory tree `MyApp.app' for directories whose name is 'Headers' and delete them in an optimized way
List all files under and below the directory given as variable $FULFILLMENT
delete all the tmp files ( files with the extension tmp ) in the /tmp folder. Print0 is used to display all those files which have newline in their names or files whose name is only spaces.
Search all regular files in the current directory tree for "example"
Create symbolic links in current directory for all files located in "dir" directory and have filename extension "jpg"
Find *2011* files and grep for the string 'From: Ralph' in those files
copy the file header.shtml to those dirs
Print the file system disk space usage for "/dev/disk0s2" if exists
Copies newest file under the current folder to the '/tmp/'
display all regular/normal files in the folder Symfony
display all the text files in the temp folder
Search the /usr/bin directory tree for regular files accessed more than 100 days ago
Display an infinite number of lines consisting of "y", until the user presses the Q key.
Generates a randomly sorted list of numbers from 1 to 10.
Find all directories under foldername directory and set their permission to 755
display all the files in the current folder that have been modified in the last 24 hours
Read a line from standard input into variable "YESNO" ignoring backslash escapes and using the prompt "$(echo $@) ? [y/N] "
Recursively change owner to "www-data" of "/var/www/.gnome2", "/var/www/.config", and "/var/www/.config/inkscape"
Recursively finds strings with 'word-1' or 'word-2' in any file under 'directory-path', following symlinks, and prints found strings.
find regular files and directories that have been modified in the last seven days
Remove recursively Emacs backup files in the current directory
find all the files in the current folder which have been changed in the last 60 minutes
search through only the /usr and /home directories for any file named Chapter1.txt
Count total number of lines in all *.txt file in cuuent directory .
find all text files in current folder; which have been modified exactly 5 days ago
Search the current user's home directory and its sub-directories for any file that ends in .tar-gz and was modified after filename was last modified.
Remount "/dev/shm" with a maximum size of "40G"
Save the number of matching executables for "$cmd" in $PATH to variable "candidates"
Sort all files/directories under current directory according to modification time and print only the recent 7 of them
find all the files under '/usr/local' directory tree which have been modified exactly 24 hours ago
delete all the trace files (".trc") which have not been been accessed in the last 30*24 hours
Print command history
Store N symbols of input into variable 'buffer'
Save a line of 100 random characters either "." or " " in variable "foo"
Remove "\r" at the end of each line in "infile" and display the result as printable characters or backslash escapes
Create a copy of index.html in all directories in current directory whose name contains Va, pausing for confirmation before overwriting any existing files - names may not contain spaces.
print all files in the file system excluding those ending with ".c"
display all the files in the current folder excluding the file states_to_csv.pl and those that are present in the directories whose name starts with ".git"
Print joined strings from 'file', using space symbol as separator.
Find all broken symlinks under /path/to/search directory
Find all files under $dir
Recursively copies everything from '/zzz/zzz/' to the '/xxx/xxx' overwriting the existing files and answering 'yes' on each request for overwriting.
Read a line from standard input with prompt "Continue (y/n)?" and save response in variable "CONT"
Find all files/directories under $dir directory tree which have been modified in the last 3 days
Find all socket files in the current directory and its sub-directories.
Find all of jzb's files
Set variable "architecture" to machine architecture, ie. x86_64
find all the files in the current folder which have execute permission to all the users
Search the current directory recursively for files with the exact permissions u=rwx,g=rx,o=rx
Removes 5 oldest files in the current folder.
display all files in the entire file system
Verbosely compresses all files on third and fourth depth level keeping original files in place.
Search the /path directory tree for files missing g+w and o+w bits
Search for the regex ... in the manual of the find command
Add variable TESTVAR with value "bbb" to a temporary environment, and search for TESTVAR in all variables and their values in the resulting environment.
remove all subdirectories named "CVS" under current dir
Search the /tmp tree for files between 10kb and 20kb
Rename all .jpg files to .jpeg under the current directory and below
display the version of find command
Delete all regular files that have not been modified in the last 60 weeks under $DIR directory tree
Remove all CVS directories in the current directory tree
beginning at the end of the file, prints lines matching /2012/ and exits after first non-matching line
Change to directory listed in file '$HOME/.lastdir'
Find all HTML files starting with letter 'a' in the current directory and below ignoring the case
display all the regular files in the current folder that are less than 10KB
Find all files under /path/to/dir that were modified less than 7 days ago and show only first several lines of output
Find all files beneath the current directory that end with the extension .java and contain the characters StringBuffer.  Print the name of the file where a match is found.
Find x* files/directories under /tmp directory whose status was changed less than 1 day ago
Set variable 'file' to the base name of first argument to script or function, that is the part following the last slash.
Find and print all PDF files in the current directory and its sub-directories except for any found in the ./pdfs directory.
Append the parent directory name with a space in all 'text.txt' files in all sub directories of current directory
List all regular files from the current directory tree that were modified less than 60 minutes ago
Find SUID files
Search for first match of the case insensitive regex 'oyss' in all *.txt files under current directory and print the file paths along with the matches
Raise an error for using uninitialized variables
Find all broken symlinks under current directory
Recursively removes all files like '_*' and '.DS_Store' from /var/www/html/ folder.
find all the files in the current folder which have execute permission
Save $line line in history
Find all executables in the current directory tree
find all files beneath the current directory that begin with the letters 'Foo' and delete them.
Go to last directory with name starting with a number, useful for timestamped directory names.
change the word "GHBAG" to "stream-agg" in all the file names in current folder which have the word "-GHBAG-" in their name
Find all files under current directory whose file type description contains "image", display the paths to files and file type descriptions.
Search for first match of the regex 're' in all *.coffee files under current directory
finda all the hidden files excluding those having the extension htaccess
Delete all files in the /myDir directory tree that were last modfied more than 7 days ago
Force pseudo tty allocation on connection to "somehost" and execute "~/bashplay/f"
Change ownership of "/vol" to the current user
Recursively unzip files to stdout in "/some/dir/here" and search for "blah"
create directory foo
Search for file names with "bad" characters in the current directory and delete the files.
List all environment variables whose name or value contains current user's login name.
Find all files/directories in entire file system that are owned by "shadow" group
List all *.jar files/directories under /usr, /home and /tmp directory
Resolve symbolic link of file "FILE" even if the file does not exist
display the number of lines in all the files in the current folder
Search the .java files from the /Applications/ directory tree for TODO lines
Find all regular files under $DIRECTORY_TO_PROCESS matching the case insensitive regex ".*\.$FILES_TO_PROCES" where $FILES_TO_PROCES is a variable and not matching the name pattern '$find_excludes' where $find_excludes is another variable, then print the files with null delimiter instead of newline
Find every file/directory under /var/spool that was modified more than 60 days ago.
Print the minimum transmission time of 10 ping requests to "google.com" from cygwin
Set up a local SSH tunnel from port 80 to port 3000
Find all .txt files in current  directory and rename with  .html .
find all the files and folder that were created in 2012 on Friday of every month
update the permission of all the files in the folder /u/netinst to 500
List the files from the current directory tree that contain lines matching regular expression  '^Subject:.*unique subject'
display the version of find
Find and remove multiple *.txt files
Create a table containing all information from S43.txt and S44.txt, merging lines where the first field of both files matches, and keeping the line that starts with "Gene" at the start of the file.
Print unique lines of sorted "File 1" compared with sorted "File 2"
Counts lines of all *.txt files in a current folder.
Count non-blank lines in a file 'foo.c'
Remove with prompting all files that have not been accessed in over 100 days
Execute `somecommand' on each file from the current directory tree with the environment variable f set to the filename
Save "something" into variable "param" in ksh
display the number of lines in all the header files in the current folder
file all the Sticky Bit set files whose permission are 551
Prints last modified file in a current folder with modification time.
display all the users in the current folder which do not belong to the user root
Find all files/directories in directories/files taken from the glob pattern '/tmp/test/*' recursively that have not been modified from the start of the day
Search the current directory tree for files matching regular expression '.*myfile[0-9][0-9]?'
Save the current working directory and the directory name of the current script to variable "DIR"
search for the file test.txt in the folders /home and /opt
Retrieve column number from column name "Target" in file "table"
Find all the Sticky Bit files whose permission are 551
Make directory named in variable "archive" with ".tar*" stripped from the end
unzip and search for a word in all the jar files in the current folder and display the matched file name
Find all files in the current directory tree whose pathnames match pattern '*/1/lang/en.css'
Find all directories in maximum 1 level down the current directory and remove the . entry from the output
delete all the files in the current folder which end with ".bak" or ".backup" and which have not been accessed in the last 30 days
Recursively search for everything under the current directory, displaying human-readable file type description for each entry.
Set the 'verbose' shell option causing bash to print shell input lines as they are read
Find all files in the /myfiles directory tree following symbolic links
Find all regular files under '/home/john' directory tree that start with 'landof' in their names
Find recursively the latest modified file in the current directory
List files greater than 1024KB under /path/to/directory and print the time and size on stdout
List all *.png files/directories under /home/kibab directory
Print the full name of "$USER"
Find files in the current directory tree whose permissions are 775
Find all '*~' files under current directory
find all the files which end with ".deb" and display their base name (strip the extension)
Print the minimum transmission time of 10 ping requests to "google.com" from cygwin
Find files and directories modified in last 24 hours
Find all files that have wrong permission
Find all files/directories under $dir directory
Display an infinite number of lines consisting of "y", until the user presses the Q key.
List all regular files from the current directory tree that were modified less than 60 minutes ago
Print login name and full name of all users currently logged in
Find all directories named postgis-2.0.0 under / directory
Find all files/directories in all paths expanded by the glob pattern *
create an archive using pbzip2 as a compress program
Find all directories under ~/code without descending into hidden directories and print them appended with : (colon)
Compress the file 'file' with 'bzip2' and append all output to the file 'logfile' and stdout
Find all files/directories that contain the string literal '$VERSION' in their names under current directory tree
Archive all directories in /path/to/directory/* (only command line arguments, no sub-directories) to files with .tar.gz extension
change the permissions of all the regular files in the current folder
remove all the ".core" files in the file system
Find all files/directories named 'foo.bar' in the entire filesystem
search all the files in the current folder using regex excluding those that are present in the folder test
Find all files/directories with '.pdf' extension excluding 'pdfs' directory and all of its contents
Compress a file named '{}' in the current directory
Delete the line containing "start" plus the next 4 lines from standard input
Split a file ADDRESSS_FILE into pieces per 20 lines named with prefix "temp_file_ and numeric suffixes
Print DISPLAY of "orschiro" user
display all files in the current folder with the name test excluding those that are present in the sub folders of the test folder
List all crons in the environment
Treat references to unset variables as errors
Find `string' in all *.java files ignoring the case of that string
Find all files in the current directory recursively with "linkin park" in their names and copy them to /Users/tommye/Desktop/LP
Print the absolute path of "$path"
find all the "error_log" files in the folder "/home" which are bigger than 5MB and force delete them
Do not mark variables and function which are modified or created for export to the environment of subsequent commands
Print source directory of bash script
Merge lines whose first comma-separated field in file 'in1' also appears as a first comma-separated in file 'in2' - both files must be sorted.
display all normal/regular files in a folder
Find regular files modified within the last 7 days
Search for files specifying the maximum depth of the search
Search "file1" for lines matching regex patterns listed in "file2" and list the unique results (sorted alphabetically)
Find all regular .mp3 files larger than 10M and delete them
display all the ".sh" files in the current folder
Find all files and directories under current directory
Find all *.p[lm] files/directories under current directory
find all files under the current folder except dir1 dir2 dir3  folder
List all files with their paths that have identical content.
Find files matching pattern $2 in the $1 directory recursively and search them for text $3, where $1, $2, $3 are the command line arguments to the Bash script
List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory
display all the files in current folder which have been changed in the last 2-6 days
Replace all newlines with spaces in standard input
Display differences between /destination/dir/1 and /destination/dir/2 excluding files with names ending with extensions '.foo', '.bar' and '.baz'
Recursively changes group ownership on everything in the 'public_html' folder to 'website' group.
Join lines of 'file': fields 1 and 2 of lines discarding adjascent lines ignoring first 3 fields, with fields 3 to end of line discarding adjascent lines ignoring 3 last fields.
Find directories in the current directory tree whose names are 33 characters in length
Find all files/directories named orm.properties under  /eserver6 directory
Recursively change the owner to "ec2-user" and group to "apache" of all files in "/vol/html"
Calculate the md5 sum of the contents of all files sorted in directory tree "/path"
Send SIGTERM signal to first process sent to background by the current shell.
Display infinite scroll of random ASCII art
Hash hostnames in user's known hosts file.
Save the md5 sum of $twofish to variable 'twofish'
recursively change user of the direct /home/test/ and all files into it to user test
Remount "/dev/stl12" on "/system" as read only
find all the header files in /usr/include which have been modified in the last 399 days and display the number of lines, number of files, number of characters of all these files
Create a report of the contents of a USB drive mounted at find /path/to/drive
Search the files from the current directory tree for "foo"
Copy "/home/username/path/on/server/" to "username@your.ip.address.here:/Users/username/path/on/machine/" and convert encoding from UTF-8 to UTF-8-MAC
change owner of the file file.sh to user root
Find all files whose names end with "~" in the /home/peter directory tree, following symlinks, and delete them
search for all regular/normal files in the current folder and display the number of lines in the file
Copy all files below the current directory whose names contain "foobar" (case-insensitive) to directory foo/bar/ in user's home directory.
Remove all core dump files from user's home directory
FInd files in current directory and grep text and html files - but not index.html and report things that contain the word 'elevator' in four or more lines
Find all 50MB files
Change the owner of all files in "/empty_dir/" to "root" using at most 10 files at a time
Find files in the current directory tree that have one link
Find recursively the files named "file" in the current directory ignoring the .git subdirectory
Print "new.txt" with line numbers prepended and line 2 or any line containing "2" deleted
Search the current directory tree recursively for the regular file named "myfile" ignoring "work" and "home" directories
Find directories named `build'
Recursively change owner and group of "/usr/local/rvm/gems/ruby-2.0.0-p481/" to the current user
Change folder to the one where $0 link target file is located.
List all files and directories in long list format with a time style of "long-iso" and sort from oldest modifed to newest modified
Give all directories in the /path/to/base/dir tree read and execute privileges
displays all files in the current directory
Find files modified in last 7 days
force remove all the regular/normal files which begin with sess in the temp folder
Find all files/directories named 'vimrc' in the entire filesystem
List the directory paths of all file.ext files under present working directory
Counts lines in each of *.php files in a current folder and subfolders ignoring 'tests*' folders and prints total count as well.
Find recursively all files whose names ends with "foo"
Delete files with inode number 782263 under current directory
Find all directories under $x directory and set read-write-execute permission for owner and group and no permission for other for those directories
Sort and remove duplicate lines in the output of "finger"
Get current directory name without full path, ie. the part after the last /
List the unique tab delimited field number "$FIELD" in all files, prefix with the number of occurrences, sort from most frequent to least frequent
Move all *.emlx files/directories under /path/to/folders/ to ./Messages/ directory
Print the sorted unique column of usernames of users who are currently logged in without the header
Find all empty files under /tmp
Print summary of new/missing files, and which files differ between dir_one and dir_two, sorted alphabetically.
Delete all *txt files under current directory
Check if 'nullglob' shell option is enabled, and if so, saves its status in 'is_nullglob' variable.
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*
find all the files in the present directory which have the group staff and check if is a symbolic link and display it.
Find files named "blabla" in the current directory tree and print the number of lines in each of them
Find all files/directories under current directory and print only 2nd field from output delimited by '/'
Change permissions to 644 for all regular files under the /path/to/dir/ tree
List the MD5 digest of all files under "teste1" and "teste2" sorted alphabetically
Find all files under current directory with their size and paths, reverse sort them numerically, then print the first 4 entries by removing all matches to the regex [0-9]+\s from each line of the output
Print the line number of each matching "<phrase>" in "<filename>"
Find all files and directories with permissions 664
Remove the "123_" prefix from all filenames of .txt files in current directory.
Creates temporary folder and saves path to it in a 'tempd' variable.
Finds IP address of system network interface, that belongs to 192.168.111 subnet.
Display inputfile all on one line (replace newlines by spaces)
find all the fles that have .ssh in the end and redirect the output to ssh-stuff
Find all files/directories named 'document' in the root filesystem partition
Find all files starting from the current directory which are owned by the user tommye
Print the names and sizes of all regular files from the current directory tree
Fiind and remove multiple files such as *.mp3 or *.txt
Find files/directories modified within the last hour under current directory
Read a line of standard input with prompt "Enter your choice: " in an interactive shell and save the response to variable "choice"
Generate the Spanish alphabet and number each character
Search for the extened regex 'expr' in all files with '.c' and '.h' extension under current directory tree
Compress all directories found in directory tree $LOGDIR that have been modified within the last 24 hours
Search for 'It took' in all $srch1* (case insensitive) files under current directory and run the sed script 'N;s/(.*)\n(.*)/\2 \1/' on the output
Find all *.txt files under current directory that contains the regex 'pattern' and list them with their filenames and matches
Find and remove multiple *.mp3 files
display the count of total number of text files in the folder /home/you which have been modified in the last 60*24 hours
Rename all files in the current directory to the md5 sum followed by the extension and print the conversions
Reports count of characters in the value of ${FOO_NO_LEAD_SPACE} variable as follows: "length(FOO_NO_LEAD_SPACE)==<counted number of characters>"
Compress all ".txt" files in the current directory tree with gzip
search for "some_function" in all the python files in the current directory
Display the contents of /var/log/syslog one page at a time, pausing for user interaction between each.
find all the files that were modified yesterday in the current directory.
Print which files differ between "folder1" and "folder2" treating all files as text
Find all regular files in the current directory and search them for "example"
Change to the directory pointed by variable TAG
Split "${fspec}" into 6 files with about equal number of lines each and use prefix "xyzzy."
Make 999 folders one inside another where first 998 of them is named as "folderX" where X goes from 1 to 998 and the last folder named as "folder9991000"
Print the IP addresses for the current host name
List all files in entire file system that are newer than the file $newerthan and older than the file $olderthan in regards of modification time
create directory testExpress
Find all Executable files in the file system
Print "file1.txt" "file2.txt" and "file3.txt" with filename headers
Remove all subdirectories of the current directory, except for "bar", "foo", "a", and "b"
Find all directories under '/nas' directory tree
Search file aaa from current direcoty downwards and print it .
display all the java, xml and action scripts (.as) files in a directory
List all directories in maximum 1 level down the current directory
Search for 'pattern_to_search' in all regular files with '.txt' extension under '/directory/containing/files' and show the matched lines along with filenames
Make directories and parents as needed for each unique second "&" delimited field with " ", ",", and ":" removed in "filetypes.txt"
Save small letter short day name of the week to variable 'DayOfWeek'
Print count of unique lines in all files like 'list_part*'
Find all directories under '.cache/chromium/Default/Cache' that are bigger than 100 MB in size excluding single letter directory names
Use awk command '{ ... }' on compressed files "input1.vcf.gz" and "input2.vcf.gz"
Find all duplicate ".jar" files in the current directory tree
Represent current date in RFC 3339 format with precision to seconds and save it to 'timestamp' variable
Remount "/system" with read and write permission
Silently read standard input until the escape key is pressed ignoring backslash escapes and using the prompt $'Press escape to continue...\n'
Search the current directory tree for regular files that contain "string"
Compress regular files in the current directory tree that were last modified more than 7 days ago
Search for all files named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.
search all mp3 files in the folder "/home/you" which have been modified yesterday (from the start of day 00:00 to 23:59)
Create an empty file with a carriage return character in its name.
Remove adjascent duplicate lines from file 'input' comparing all but last space-separated fields
print readline bindings that use key code '\\e\\C-k'
Find all the SGID bit files whose permissions set to 644 in the file system
Count the number of total files and folders under current directory tree
Delete all files under $INTRANETDESTINATION/monthly directory tree that were modified more than 366 days ago
Create 1000 files each file having a number from 1 to 1000 named "file000" to "file999"
Numberically sort content of file 'files', using for sorting part of second one of dash separated fields beginning from second letter.
Make DNS lookup for hostname stackoverflow.com
Search for 'pattern' in all files with '.cc' extension under current directory tree and show the matched lines with line numbers and filenames
Make 3 directories named "~/Labs/lab4a/folder" followed by the number 1, 2, or 3
Prints what day it was 222 days ago
Change permissions to 500 for all regular files under and below the current directory
Copy a file xyz.c to all the directories below the current one whose names begin with "temp"
Find all *.p[lm] files under /users/tom directory that matches both the regex '->get(' and '#hyphenate' in their contents
Prints the absolute directory path of the current script preceded by the string "dirname/readlink: "
Change onwer to "root" and group to "wheel" of "com.xxxx.adbind.plist"
Gets string with IP4 address of en0 network interface.
display top 11 files along with the last access date for all the files in the file system
Find all files/directories that start with 'a1a2' and end with 'txt' in their names and move their parent directories to '/home/spenx/dst/' directory
List unique series of 3 characters in file "$1" prefixed by the number of occurrences and sorted from most frequent to least frequent
find the count of all the regular files in a directory
List *.txt files under current directory that have 'mystring' in their name
Create a symbolic link named the basename of "$file" to "$file"
Find all the files called FindCommandExamples.txt of owner root
Gets IP address of 'en1' network interface.
Remove all *.bak and *.backup files that were accessed last time more than 30 days ago
search in the current folder for all the regular/normal file with the name "test"
Go to directory /cygdrive/c/Program Files (x86) using quotes to escape special characters
display a list of all regular/normal files in the current folder
List files and directories one level deep in the current directory tree
find all files in current folder having the name pattern "some_pattern" and move them to folder target_location (GNU VERSION)
Print a minimal set of differences between files in directories "a" and "b", ignore the first 3 lines of output, and print any line starting with "-" with the first character removed
Compress all ".txt" files in all sub directories with gzip
Prints long listing of the current directory, sorted from oldest to newest, with appended indicators.
Lists all paths to all subfolders in a current folder.
Save long listing of all running processes in the 'log' file, and save number of process strings that contain 'cntps' in the 'cnt' variable.
Make directories to "directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}" as needed
List all regular files in and below the home directory that were modified more than 5 years ago
Search all the regular files from the current directory tree for "search string"
Display a long listing of all regular files that are less than 50 bytes in size under '/usr/bin' directory tree
List all of the subdirectories in the current directory with no trailing slash.
prints a number stored among text in $filename
Find all files/directories named file in minimum 4 levels down the current directory
Force delete all jpg files in current directory which are less than 50KB and do not search in the sub directories
Search the current directory tree for files whose names end in "rb" or "js" and which contain string "matchNameHere"
Reversibly sorts content of the '${TMP}/${SCRIPT_NAME}.pid' file, comparing human readable numbers in file strings.
Send two ping requests to "www.google.com"
Find all files/directories under /var/log directory
List the last modified file under "$DIR"
Calculate md5 sum of file ${my_iso_file} and save it to variable 'md5'
find all read me files in a folder
Find all regular files that reside in the current directory tree and were last modified more than 3 days ago
Search for 'Attached: Yes' in all regular files under '/proc/scsi' directory tree matching the path '/proc/scsi/usb-storage' and show only the matched filenames
display all text files in the folder /home/you which have been modified in the last 60*24 hours(case insensitive search)
Find recursively all regular files in directory tree b that were changed within the last 5 minutes and copy them to directory c
Find all *.java files under current directory
Correct permissions for directories in the web directory
Change the permission to 0755 for all directories under current directory
Copies file 'fileName.txt' to each of directories listed in the 'allFolders.txt' list.
Clear the terminal's search history
Print summary of new/missing files, and which files differ between folder1 and folder2.
Continuously send "y" to all prompts of command "rm"
Search for the pattern 'search string' in all the files in the ''/tmp folder and display the matched lines along with the file names
Save the current time formatted according to the format string "%Y-%m-%d %H:%M:%S" to the variable 'CDATE'
List all files in the current directory tree that were last modified in March 2007
Find all files named 'Makefile' in the /usr/ports directory tree and count the number of lines in them matching regular expression '^MASTER_SITE_SUBDIR.*\.\./.*authors'
Change every file under "/var/www/html/" to have permissions 664
Replace "string1" with "string2" in all regular files in the current directory tree
List the unique parent directories of all .class files found under "/root_path"
As root, edit the cron job list of user "apache" using the editor specified by EDITOR environment variable, or default /usr/bin/editor if this variable is not set.
find all the files in the current directory and print them excluding those that have the name SCCS.
Immediately exit the shell if a command fails
Search the `research' directory and one level below for directories that are not owned by group `ian'
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (somefile.tar) of all the files found ensuring white space safety
Set the 'verbose' shell option causing bash to print shell input lines as they are read
Enables 'dotglob' shell option.
Make directory "mybuild"
Read standard input until a null character is found and save the result in variable "line"
Find all files in the current directory and its sub-directories that have not been assessed in more than 30 days.
Filters out strings, using the extended regexp pattern '^#|^$|no crontab for|cannot use this program' from "$USERTAB"
Remove empty directories from directory tree /srv/abc
Find regular files that are bigger than 500 MB in size under current directoryt tree
find all the files ending with "clj" in the current folder and search for a pattern
Find all files/directories under current directory tree that belong to the group 'compta'
Change the group of all directories (except those with a '.') under current directory tree to a group with the same name as the directory name
Prints all business days in a current month.
Removes all top-level empty folders within the current folder.
ask user confirmation and delete all the files in the directory /mydir which have not been accessed in the last 100*24 hours
Find directories in the current directory tree that were modified within the last 24 hours and move them to /path/to/target-dir
Convert "595a" into characters and then print the hexadecimal and printable characters of each byte
Print numbers from 1 to 30 with a leading 0
Find all the files in entire file system  which are modified more than 50 days back and less than 100 days and show a few lines of output from the beginning
Look for "filename" in the current directory and below
Search the current directory tree for all files except SVN ones
Remove all files and directories in the current directory by answering with "y" to all prompts
Take the last slash-separated section of variable "FILE" and copy it to variable "NAME".
Prints full path to files in a current folder.
Print "a\nb\ncccccccccccc\nd" as two columns and neatly format into a table
Search all .c files from the current directory tree for "keyword", ignoring the case
Archive directory specified by variable "i" to "/iscsi" preserving relative paths.
Find all files under /var/www directory and set their permission to 644
Set 644 permission to all regular files under current directory
Search the current directory for regular files whose names start with my
find all the files which are of size 0 bytes.
Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print their parent directory paths
Find files/directories under current directory without descending into it
Print second section of line <line> where sections are separated by one or more whitespace.
display long listing of all regular/normal files whose size is less than 50 bytes.
Output "testFile.txt.1" without the ".1" suffix.
Copy "/Users/username/path/on/machine/" to "username@server.ip.address.here:/home/username/path/on/server/" and convert encoding from UTF-8-MAC to UTF-8
Find all empty files starting from the current directory and delete them
Removes all top-level *.pdf files in a current folder.
Get directory listing of URL $1 and save them to variable 'header' by deleting '\r' characters
View the contents of "file.txt" with line numbers in the pager "less"
Read a line from standard input into variable "response" ignoring backslash escapes and using the prompt "Are you sure? [y/N] "
List all files/directories under current directory
find files in the current directory having name "filename"
Find and delete all hard links in the /home directory tree to file1
Write out the entire directory hierarchy from the current directory
SSH into host "$1" using key file "/path/to/ssh/secret/key" and execute command "$2"
display all the files in the folder a
Split the contents of "file1 file2 ... file40000" into 1445 files in a round robin fashion with prefix "outputprefix" and numeric suffixes
Copy "./export" recursively to "/path/to/webroot" preserving permissions
Find all regular files whose names contain "@" in directory tree ~/$folder
Find all the files in the current directory recursively whose permissions are 777
find all c, cpp files in current folder
forcibly and verbosely create symbolic links in directory "~/Library/LaunchAgents" to all files located in /usr/local/opt/mongodb/ and that have filename extension ".plist"
Copy all regular files from the current directory tree to directory `TARGET'
Search the /path directory tree for files matching pattern '*.foo'
Find mysong.ogg anywhere under the home directory
List all .jpg files in the home directory tree
List absolute path of files in the current directory
Prints latest modified file in a directory
Find all files/directories named 'file' without descending into directories with the same name under current directory tree
Verbosely compresses all files on fifth and sixth depth level keeping original files in place.
Recursively finds all '*.pdf' files in a current folder and removes them.
Send SIGKILL signal to process ID 16085, killing it instantly.
Copy the directory structure in "src/" to "dest/" with empty files
Find regular files which have 644 permission
Sort and display the file name and creation month of top 11 files in the entire file system (Sort in the order of month )
List all files in the current directory tree invoking xargs only once
Change to the directory containing the "oracle" executable
find all normal/regular files in current folder and display the total lines in them
Recursively change ownership of "~/.npm" to the current user
Locate all "copyright" files under and below /usr/share/doc
Remove all files under $DIR that were accessed more than 5 days ago
sleep for 1 second
Search all Python files in the current directory tree for string "import antigravity"
Display the named characters in "line1\r\nline2"
Print a sorted list of the subdirectories of ~/Music
List all files that are between 10000 and 32000 bytes in size
Merge files 'text.txt' and 'codes.txt' by outputting any lines whose second field in the first matches the first field in the second.
Search for 'Text To Find' in all regular files under current directory tree and show the matched files and matched lines with line numbers
find in the file system for the directories with the name "httpdocs"
List each unique case insensitive character in "file" prefixed by number of occurrences and sorted from most frequent to least frequent
Change the user to daisy for directories and subdirectories owned by harry
extract 'archive.tar.gz' to /destination
Make hidden directory ".hiddendir"
find all the directories in the current directory which dont have the execute permission.
Find all *.php (case insensitive) files and *.js files/directories (case insensitive) under /home/jul/here excluding /home/jul/here/exclude/* paths
Print file type of command "gcc"
Search /etc for files modified within the last 10 minutes
Find all orm.* files/directories under current directory
Remove files whose names start with `Foo'
Search for filenames matching "android" in the current directory and number the output
use regex with find command
Find all regular files whose names contain a case insensitive pattern composed of space separated positional arguments and display a long listing of them
Search the regular files of the current directory tree for string "whatever"
Wrap each line in "yourfile" to fit in 79 characters and right pad any lines shorter with spaces
Search the current directory tree for files containing "bash" in their names
Search the current directory and all subdirectories for files that have 777 permissions and the permissions to 755
Counts lines in each *.php file.
List the directory paths of all *.ext (case insensitive) files under /path directory
Find all symbolic links starting from the current directory and list them
Search the current directory tree for an html file having the text 'Web sites' in it
Make all directories in the current directory tree accessible to anybody
Change directory to the directory containing the current script
find all files in etc which have been changed in the last 1 day
split file /usr/bin/firefox into pieces per 1000 lines
Find all the files which are changed in last 1 hour in entire file system and show a few lines of output from the beginning
Find all files and directories that do not match the pattern given as the $controlchars variable
Sort the lines of the file 'temp.txt' and change it in-place
Archive "directory" preserving hard links from host "remote" to the current local directory and keep partial files, handle sparse files efficiently, and itemize changes made
Find all OGG files in the home directory that are at most 20 megabytes in size
find all the zip files in the current folder
Recursively copies all files in the current directory but ones with 'c' in name to the home directory.
when using vi-insert keymap bind command "\C-v{}\ei" to key "{"
Find all regular files under '/directory_path' directory tree that have been modified within the last day
Find all directories under dir whose names are 33 characters long
Find the total size of *.jpg files within the current directory tree
display all the html files in the current folder that have not been modified in the last 7*24 horus
change group of the file myfile to group friends
Case-insensitive search all existing environment variables and their values for "shell".
Recursively find strings in all files under current directory, that matching with comma-separated patterns list in file 'searches-txt'
Copy all directories recursively from "source/" to "destination/" excluding all files
Find all files under $1 not matching the regex '.*/\..*' and execute hashmove on each of them with the file path as its argument
Read a single character from standard input into variable "key" without backslash escapes, with a timeout of 5 seconds, and with the prompt "Press any key in the next five seconds..."
Lists content of the current folder.
Search level 3 of the current directory tree for the directories whose pathnames contain "New Parts"
Make directory "/path/to/destination"
List all files/directories under /data1/Marcel with their file information which are greater than 524288 bytes and were modified or accessed more than 1 year ago
Counts lines in each *.php file.
Search for files/directories with a case insensitive .txt extension in entire file system
Move each of the 'm?' directories in $path_to_folders to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory
Find all directories by the name `httpdocs' on the system
List all *jsp and *java regular files found in the current directory tree
Search /tmp/ for files smaller than 100 bytes
search for the file, filename.txt in the current folder
find files which full path name is /tmp/foo/bar under /tmp/foo directory and print
Create a tar archive with all *.java files under the current directory
Clear the in-memory history and read from the current history file
Prints path to the target of symbolic link 'relative/path/to/file'
Unzip "file.gz" to standard output and execute in bash with arguments "-n wordpress"
Find all the Sticky Bit set files whose permission are 551 in the file system
Find all files named "filename"
Search the current directory tree for files AAA and BBB
find all regular/normal files in the current folder
Find all .mp3 files starting from the current directory
Print the list of files in the current directory tree with "xx" preceding and following each filename
Find *.tex files in the current directory tree that contain text "documentclass"
Calculate the md5 sum of all files in the current directory with the filename printed first
display list of all the hidden directories in the directory "/dir/to/search/"
Find all directories in 1 level down the current directory
Recursively removes 'classes' folder, prompting user on each deletion.
list directories owned by group ID 100 in the file system
Display a dump of standard input as floating point values of double size
Find all files/directories under current directory
Sort file1 and file2 then display differences between them.
Opens new tmux session.
Find files in the current directory tree that match pattern "*sub*"
Find all directories under current directory and set their permission to 775
get the root user access
Find all files excluding *.gz files in the current directory tree and compress them with gzip
Recursively copy local file/directory "/copy/from/path" to remote location "/copy/to/path" on host "server", connecting as ssh user "user" and using identity key file "/path/to/your/.pemkey" instead of the default in ~/.ssh/
Find files/directories containing 'test' in their names and display the directory contents before the directories themselves
Change mode of all files ending with ".php" under the current folder to 755 and write the output to the console and "logfile.txt" file
Print the current directory tree with file permissions
Find all files under $d directory and set read-write permission for owner and group and no permission for other for those files
Find and delete all files with a used disk size of 0
List all nfs mounts
Gets state of shell option 'dotglob' and saves it in 'rest_cmd' variable.
Search the system for the file “testfile.txt” ignoring the case
Search for the files that are owned by user rooter or by user www-data
Move all hidden files in "wordpress" to the current directory
Find all files/directories under 'A' directory tree excluding the paths containing the directory 'a'
Archive "/path/to/copy" to "/path/to/local/storage" on host "host.remoted.from" as user "user" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission
Copy "some_file_name" to "destination_directory" and change ownership to "someuser:somegroup"
Take a file path from standard input and remove it.
Creates temporary file with file name formatted like /tmp/gnuplot_cmd_$(basename "${0}").XXXXXX.gnuplot and saves path to it in a variable 'gnuplotscript'.
search for a word in all the normal/regular files in the current folder
Delete all but the most recent 5 files
Print amount of space available on the file system containg path to the current working directory.
search for the word "slrn" in all the files in the folder $HOME/html/andrews-corner
Print the contents of "file" in reverse order
Prints Kb size of all top-level files and folders in a current folder in descending order.
Find all regular files named 'Waldo' under ~/Books directory tree
Print every two lines in "num.txt" on a single line separated by a space
List all functions or variables containing " ()" defined in the shell
find .gif files in /var/www and below that were last changed between 90 and 180 days ago
List each unique case insensitive character in "file" prefixed by number of occurrences
List all *.txt files/directories under current directory
Find all files under current directory whose status was changed less than 3 days ago and show last 5 lines of output
Locate all `readme.txt' files under the home directory
Remove all empty sub-directories under current directory
Recursively finds all files and prints all strings with 'text-to-find-here' from that files, preceding matched string with filename.
Print all lines from the last occurrence of the regex 'pattern' to the end of the file 'file'
Print source of the file system containing $path.
Find all the Sticky Bit set files in entire file system whose permission are 551
Print the average time of 4 ping requests to "www.stackoverflow.com"
Search for symlinks pointing to anywhere within /mnt/oldname/
Print a colon-separated list of all directories from the $root directory tree, except those matching pattern ".[a-z]*"
Executes tmux commands that are stored in the '$tmux_command' variable, and then attaches to the tmux session.
Find all files under current directory without descending into .snapshot directory that were modified in last 24 hours with null character as the delimiter
Search for 'birthday' (case insensitive) in all regular files under ~/Documents directory tree and show only the filenames
Save the current working directory to variable "CURRENT"
Find all directories named CVS, and deletes them and their contents.
Remount "/" with read and write permission
Find all files in current directory and search for 'searchName' in those files and show errors for files that are not directly on the current directory
Find all files/directories named '.todo' under $STORAGEFOLDER directory tree and print their parent paths
display all normal/regular files in current folder
Check if $path_in_question is mount point of filesystem
Search folder /home/ABCD/ recursively for regular files
Dump "input_file" as a 2 byte hexadecimal, character, and octal value and view the contents in "less"
find all the files that have been changed today
Print the list of files and directories of the /etc directory
Print all filenames under /proc and below
Search the current directory for HTML files whose names begin with "a"
keep only read access to all the files in a directory.
find all files that names are game
Find image files and move them to the pictures directory
find the file "MyCProgram.c" in the current folder
Find all PHP files under current directory that contain only one line
Locates 'gcc' executable file, strips last two parts of the full path, adds '/lib' to the end and saves result in 'libdir' variable.
Search the files of the current directory tree for string "searched-string"
Find file1 in the level 1 directories and above
find all files that do not have execute permission to all
find all the files ending with undo in the current folder and calculate the total size of these files
Save host name in variable "thisHOSTNAME"
Search /usr/local for subdirectories whose names end with a number 0-9
display all normal/regular files in current folder in sorted order
Print the contents of "foo.txt" starting with line 2
list txt files older than 5 days or html files of any age, null separated
Delete all regular files that start with 'sess_' in their names, are at least 1 level deep and were modified more than $gc_maxlifetime minutes ago under $save_path directory tree
Find files starting with the word "file" in the current directory tree
find all regex "./[a-f0-9\-]\{36\}\.jpg" files
Compress all files in the "$FILE" directory tree that were last modified 30 days ago and have not already been compressed with gzip
Find all files named "something" in the current folder and below and run them through the ls -l command, one by one.
Find all .java files  under current directory
Interpret in the current shell all lines in config.sh which contain the word "marker"
Set permissions to ug=rw,o= for files under the $d directory tree
List an empty environment (prints nothing)
Write "foo" to the real path of the current command's standard output
Copy all .pdf files in the ./work/ directory tree with size bigger then 2 MB and modified more than 5 days ago to the ./backup/ directory
Prints process tree with command line arguments and process id numbers.
List level 2 subdirectories of the current directory
display a long listing of all the xls or csv files in the entire file system
find all the ogg files in the current directory which have the word "monfichier" in their name
search for all Scala files under the current directory that contain the string null
search for the file "file_name" in the folder /path
find all files ending with "js.compiled" in current folder (print0 is used to handle files with newlines in their names)
change owner of the files into directory dir_to_start except directory dir_to_exclude to user owner
Create archive "backup1.tar" of all subdirectories of the current directory
change the owner of all the files in the file system which belong to the user with the uid 999
Read a line from standard input into variable "prompt" with the prompt "Are you sure you want to continue? <y/N> "
Find files and directories with the name RAID but don't traverse a particular directory
Print base name of the file name without all extensions.
Recursively change the owner to "${JBOSS_USER}" of "$JBOSS_LOG_DIR"
search for a word in all the files in the current directory (case insensitive search)
Change the permissions of all regular files whose names end with .mp3 in the directory tree /var/ftp/mp3
show all the files in the current folder which has the word "ITM"
Lists the pids of all processes that have process '1782' as their parent.
find all the files in the current folder which are smaller than 9MB
Read a single character from standard input into variable "key" without backslash escapes and using the prompt "Press any key to continue..."
find all the files in the home folder which are empty (Size 0 bytes)
Print last 10 commands in history with the first 7 characters removed
Recursively change the user and group of all files in "/var/log/jenkins" to "root"
Find all 777 permission directories and use chmod command to set permissions to 755
Archive all filepattern-*2009* files/directories under data/ into 2009.tar
Print the directory name of the full real path to the current script
Display a long listing of all files/directories named 'file' under current directory tree
Search the .c files residing in the Lib/ directory tree for lines beginning with "PyErr"
Archive "/path/to/copy" on host "remote.host" as user "user" to "/path/to/local/storage" updating files with different checksums, showing human readable progress and statistics, and compressing data during transmission
Print command with PID 11383
forcibly create a symbolic link named "linkname" to file "new_destination"
Print only strings from file 'file2' that not found in 'file1'
concatenates file1.txt, file2.txt, and file3.txt with the filenames printed at the beginning of file contents
Search for all directories named foo, FOO, or any other combination of uppercase and lowercase characters beneath the current directory.
Search directory tree $DIR for *.txt files
Print the physical current working directory
Change permissions to 644 for all subdirectories
Copy all files in the current directory except those containing 'Music' to '/target_directory'.
Make directory "~/temp"
change the permissions of all the normal files in a directory
Find user daniel's files of type jpeg without `autumn' in the name
Count all the lines of all php files in current directory recursively
List .conf files residing in the /etc/nginx/ directory tree
Show long listing of current directory by deleting all digits from the output
Find files containing string "#!/bin/ksh" and append their names and matching strings to /tmp/allfiles
Counts all *.mod files in a /boot/grub/ folder.
Recursively change the group ownership to "laravel" in "./storage"
List the number of occurrences of each unique character in "The quick brown fox jumps over the lazy dog" sorted from most frequent to least frequent
Get A record for domain $domain
display all the normal/regular files in a directory
Print groups of all users logged in
Update the timestamp of 'filename', or create an empty file if it doesn't exist.
Change directory to the real path of the current working directory of process "$PID"
search for the files in the current folder which begin with the word "kt" followed by a digit
For each line of colon-separated information in files 'empsal' and 'empname' whose first field matches in both files, output: first field of empname, second field of empname, fourth field of empname, and third field of empsal.
Find all files/directories named modules under current directory and list them twice
Find all image.pdf files/directories under ./polkadots
Remove all files and directories called "test" from the current directory tree
Delete files in the DIR directory tree whose names begin with "2015" and contain "album" or "picture"
Print argument "$1" "$number" times
Execute md5sum command on files found by the find command
search for all the foo.txt files in the current folder and move them to another location
Search for 'Processed Files' in all $srch* (case insensitive) files under current directory
display all the files in the folder "/Users/Me/Desktop" which have read permission to them
Print the current date in '%H:%M:%S' format followed by the string ': done waiting. both jobs terminated on their own or via timeout; resuming script'
display all the files having spaces in the current folder
Find regular files named "regex" under and below /dir/to/search/
Creates file by template 'aws-sync-XXXXX' in a current folder and stores file name in a 'dir' variable.
Find files with 002 permission in entire file system and print them with the string 'has world write permissions' printed at last
Search the path given as the $absolute_dir_path variable for regular files
Create an empty file 'last.check' in directory pointed by variable "log_dir", with specified timestamp.
Find files in the current directory tree which are larger than 5 MB in size
Make directory "testExpress"
Search for the query "filename" in the current directory and any subdirectories
Print the number of regular files found in the current directory tree
make directory "/etc/cron.15sec"
Write every two lines in "infile" on a single line separated by a space
Fix files to default permissions 755
Move each of the 'm?' directories in current directory to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory then move all *.emlx files into this directory
Make "file.sh" executable
Print all files/directories under ... directory by terminating their paths with a null character
force remove all the c files in the current folder
find all the files in the file system which have not been modified in the last 100*24 hours
Find all files under current directory whose file type description contains "image", display only path to each file.
Display the content of YourFile.txt, waiting for user input at each page.
Find all 400 permission files under /data directory
display all the regular/normal files in the current folder excluding the files "bbb" and "yyy"
Find all *.css files under $DIR and print the lines matching the regex '\.ExampleClass.{/,/}' from those files
Find all *.php files under current directory and change their permission to 640
display a long listing of all the files in the home folder which are bigger than 200MB
Find *.c files under $HOME and search for the string 'sprintf' in those files
display all regular/normal files in the current folder that were accessed exactly 7*24 hours back
Find all *.txt, *.html files under /basedir that match the case insensitive pattern *company* in their names
Remove any file containing string "GUI"
Creates temporary file and saves path to it in 'content_dir1' variable.
create a backup of all the files which have been modified in the last 48 hours
Change directory to the parent of the real path of the current script
Show the explanation of find's debugging options
Check if a drive with UUID "$UUID" is mounted
Search the current directory tree for executable files
Find all directories named "D" in the "A" directory tree
find md5sum of 'string to be hashed'
find a specfic video file in the current directory
Write "2-1" to standard output and to "/sys/bus/usb/drivers/usb/unbind"
Split "$INFILE" into files of at most "$SPLITLIMT" with a numeric suffix and a prefix "x_"
Find all files under ~/code that are executable by owner without descending into hidden directories and print their parent directories appended with : at the beginning and remove all newlines and the last : (colon)
find all the files in the current folder whose name starts with 2 alphabets and ends with 2 digits.
Replace "foo" with "bar" in all PHP files in the current directory tree
Print 'file' file, splitting lines into pieces with no more that 3 words in each one.
Mount partition with label "WHITE" on "/mnt/WHITE" with read and write permission
Find all the SGID bit files under current directory whose permissions set to 644 and show a few lines of output from the beginning
Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output
Save the physical current working directory to variable "END_ABS"
Print the byte count of all regular files found in the current directory tree
Create symbolic links in the current directory for all files excluding "CONFIGFILE" located in "/your/project"
display a list of all the files in the file system which do not belong to any user and search only in jfs and jfs2 file systems
Find all regular files that reside in the current directory tree and were last modified 1 day ago
searches through the root filesystem ("/") for the file named Chapter1, and prints the location
List files larger than 10MB under /var/log /tmp that haven't changed in a month
show all files in /usr/tom and display only files ending with ".pl" or ".pm"
list all files
List all files/directories under current directory with 'FooBar' in their names ensuring white space safety
display all the hidden files in the directory "/dir/to/search/"
Find all *foo files/directories under current directory (error prone)
Enables 'nullglob' shell option.
Print all lines in file that do not match "pattern"
Print the last space separated word from "a b c d e"
Find all files named "test2" in the current directory tree
Read and execute file 'lib/B' that located in the same directory as the current script, will fail if currently running script is not in PATH.
Find all files in the /home/ directory tree that were last modified less than 7 days ago
Find users whose names begin with "ab" or whose terminal from which they are logged in ends with "1"
Find all files/directories under current directory that match the case insensitive extended regex .*/(EA|FS)_.*
display all the files in the current directory and do not search in the sub directories
Search the .cs files of the current directory tree for string "content pattern"
Print the text file paths that match 'needle text' in their contents under 'my_folder' recursively
Copy "/new/x/y/z/" over the network to "user@remote:/pre_existing/dir/" preserving the directory hierarchy
Find all *.m4a files under /home/family/Music directory
Creates random file name formatted like expression in variable ${str// /X} and saves it in 'rand_str' variable.
Output the file name "file.txt' from the path "some/unknown/amount/of/sub/folder/file.txt"
Find all files in the current directory tree except .html, ignoring .svn directories
search all jpg,png,jpefg  files in the current folder and calculate the total size of them
Output all lines that have a common first colon-separated field in files 'selection2.txt' and 'selection1.txt' by displaying the common (first) field of each line, followed by the extra fields in both lines.
display all empty files in the current folder
Find all files that were not accessed in the past 100 days
Search regular files under ~/mail for string "Linux"
Find all file1 and file9 files/directories under current directory
Replace all newlines with spaces in the contents of "file"
Count the number of non localhost users
Print directories in the the current directory as a list with no report information
find all js files which path neither ./dir1 nor ./dir2
Locate all *.csv files under the current directory tree separating the file names with zeroes
Silently read a single character from standard input into variable "key" without backslash escapes and using the prompt $'Press any key to continue...\n'
Save the greater version number of "$1" and "$2" into variable "ver"
Set the setgid bit on all directories in the repository "/git/our_repos"
display all the files in the current folder which have been modified in one hour ago
find the path of a specfic video file in the current directory
Report all files starting in the directories /mydir1 and /mydir2 larger than 2,000 blocks that have not been accessed in over 30 days
find all the text files in the current folder
Display a long list of all the files/directories named ".todo" under $STORAGEFOLDER directory tree
Dump the character output of 'echo `echo "Ho ho ho"`'
Find all subdirectories of the current directory except hidden ones
find all the directories in the entire file system whose size is greater than 50KB
search for dbmsspool.sql file in the current folder
Report file system containing /tmp disk usage in kilobytes.
List files larger than 10MB under /var/log /tmp that haven't changed in a month
Print what year it was 222 days ago
Search the /dir directory tree for files whose names match regular expression '2015.*(album|picture)'
Count lines that are neither blanks nor comments in a file 'foo.pl'
Set variable 'rav' to the contents of 'var' spelled backwards.
Set permissions to ug=rw,o= for files inside the ./default/files tree
Prints calendar for a current month, replacing current data with asterisk.
search for files starting with memo and which belong to the user ann in the folder /work
Search the current directory recursively for files containing "needle text"
List all regular files from the current directory tree that were modified less than 60 minutes ago
List all *.txt files under current directory that match 'foo=' in their file information
Split standard input into files with at most 75 lines each
Delete line 2 in numbered file "file" and renumber
Find all *.sql file that are not newer than  $oldest_to_keep excluding the  $oldest_to_keep file
Find all files under $root_dir
Find all the files under /etc directory which are larger than 100k
Exit the shell immediately if an error is encountered, treat references to unset variables as errors, disable overwriting existing files, and use the first non-zero exit code of a set of piped commands as the exit code of the full set of commands
Numerically sort IPv4 addresses specified on standard input with presedence to first, second, third, then fourth octet
Search the current directory tree for files named 'Subscription.java'
Save 'echo whatever you "want your" command to be' in history
find all the files in the home folder which are bigger than 2MB and zip them
Find all 777 permission files in entire file system and set permissions to 644
Replace the occurrences of "HOGE" with "MOGA" once per each line of the files from the current directory tree, keeping a backup copy of every touched file
Find all the regular files in $DIR directory tree which have not been modified in the last 450 days and delete them
Search the /path/to/dir directory tree for .c files
Print summary of new/missing files, and which files differ between /path/to/folder1 and /path/to/folder2, sorted alphabetically.
Delete all files in the current directory tree whose names end with ~
change the extension of all the ".abc" files in the folder "/the/path" to ".edefg" and do not change in the sub directories
Make directories for each unique file path in "file1"
Print a summary of the command-line usage of find
create a symbolic link named "-pdf-kundendienst" to "local--pdf-kundendienst" file
Delete empty directories
Find all files/directories named orm.properties under current directory
Find files/directories that have not been modified in the last one day in directories or files taken from the glob pattern '/tmp/test/*'
Convert Unix `cal` output to latex table code.
Print the names of the directories from the paths expanded by the glob pattern /path/to/directory/*
Find all 0644 permission files/directories under current directory tree and show only the first 10 of them
Synchronize "/path/to/dir_b" with files in "/path/to/dir_a/" if the files are newer
find all the perl files in the current folder
List all aliencoders.[0-9]+ files/directories under /home/jassi/ directory
display long listing of all files in the current directory whose size is 24 or 25 bytes (doesnt display inode information) .
Find files named 'core' in or below the directory /tmp and delete them
Set permission of "file" to read only for the owner
Search directory tree `foo' for files named `Headers'
Find all files/directories under current directory tree whose paths match the pattern '*ACK*1'  (case insensitive)
Find file size in bytes
Exclude directory from find . command
display all regular/normal files in the folder "dir" and display the filename along with file size
Count the number of differing lines in "file1" and "file2"
find all the files in the current folder which have been accessed in the last 60 minutes
display all the files in the current folder excluding those that are present in the sub directory aa and display those files that start with the word "file"
Creates temporary file with name formatted like expression in variable ${PROG}, and saves path to it in 'mytemp' variable.
Search in the current directory and all sub-directories except ./D and any further sub-directories also named D for the file named hi.dat
Find StringBuffer in all *.java files
Forcefully delete all files in the current directory
Find all the .c files in the current directory tree that contain the string ‘stdlib.h’
Log in as "middleuser" with key "./middle_id.pem" and forward port 22 on host "middle.example.org" to port 2222 on localhost
Archive all *html files using tar.
find all CSS files under currenty directory and use sed to edit them
search for the word text in all the python files in the current folder
Merge already sorted files in the current directory starting with "_tmp" and write the output to "data.tsv.sorted"
Print which files differ in "dir_one" and "dir_two" recursively and sort the output
replace "exp_to_find_for_replacement" with "exp_to_replace" for all the files in the current folder
Print as many dots as there are files named "file.ext" in the /home/kibab directory tree
Print every two lines in "file" on a single line separated by a space
count all the html files having a specifc word in a folder.
Search all *.c files from the current directory tree for "hogehoge"
find all files having certain word in its name in the current folder
find files in the current directory and sub-directories, that were accessed within last hour
Execute "wget -qO-  http://fake.link/file.txt" every 5 seconds
Get second line from text contained in variable $data.
Create a ssh key of RSA type, and prompt for a filename to store it, presenting the default for this type of key as $HOME/.ssh/id_rsa
Locate symlinks in directory trees lpi104-6 and research/lpi104-6
Clean directories and subdirectories of the temporary files generated during normal use
Find only permission field & file name from long listing with find command .
Read a line from standard input in an interactive shell with prompt in variable "myprompt" interpreted as PS1 is interpreted
Counts lines in each of *.php files in a current folder and subfolders ignoring 'tests' folder and prints total count as well.
Search the current directory tree for filenames matching the pattern '[mM][yY][fF][iI][lL][eE]*'
Display file.txt with lines numbered, and page interactively through the result.
Change to folder where the oracle binary is.
Find the largest files in a particular location
Run sed command "s#\(export\ PATH=\"\)\(.*\)#\1/home/$(whoami)/bin:~/\.local/bin:\2#" on "~/.zshrc" where "$(whoami)" is replaced with the current user name
Change permissions to 755 for all directories in the current directory tree
display all regular/normal files in temp folder and display the filename along with file size
Search for 'string_to_find' in all files under current directory
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*
find all files that do not have read permission to all
display all the files in the current folder excluding search in the paths containing the folder having the word "mmm"
Find files by type
Get domain name with 'google' from dig reverse lookup.
Open gcc info manual and select "option index" menu entry.
List all cron jobs where the minute part is either * or a number from 0 to 14.
Find all files in the /home/ directory tree that are owned by bob
find all the files in the folder ~/Music which begin with "Automatically Add"
download content from "http://127.0.0.1:8000" and output to "index.html"
Use the first non-zero exit code (if any) of a set of piped commands as the exit code of the full set of commands
Return 0 if file system is mounted on '/full/path'
Change permissions of "/dvtcolorconvert.rb" to 755
delete all the php files in the folder /var/www
Search for a line starting with 'use strict' in all files with '.pl' extension under current directory tree and show the unmatched files only
Finds recursively all folders named 'a' within current folder and removes only ones without files and another folders within.
Counts lines in each of *.php files in a current folder and subfolders and prints total count as well.
Make directories "tmp/real_dir1" and "tmp/real_dir2" as needed
find all files & dircetiry in current directory which  have .tmp extension and delete them .
Split "$ORIGINAL_FILE" into files of at most "$MAX_LINES_PER_CHUNK" lines each with a prefix "$CHUNK_FILE_PREFIX"
Get domain names from file '1.txt' and request TXT DNS record for each one
Read standard input until a null character is found and save the result in variable "line"
Prints strings with MAC address configuration of each network interface in system.
search for text files in the folders /home/hobbes/ /home/calvin/
Recursively finds and compresses all files in a current folder with 4 parallel processes.
Calculate the md5 sum of the list of files in the current directory
Print a list of all duplicate filenames in the current directory tree if there is no white space in filenames
Archive showing progress all files in "/media/2TB\ Data/data/music/" to "/media/wd/network_sync/music/" excluding files matching "*.VOB", "*.avi", "*.mkv", "*.ts", "*.mpg", "*.iso", "*ar", "*.vob", "*.BUP", "*.cdi", "*.ISO", "*.shn", "*.MPG", "*.AVI", "*.DAT", "*.img", "*.nrg", "*.cdr", "*.bin", "*.MOV", "*.goutputs*", "*.flv", "*.mov", "*.m2ts", "*.cdg", "*.IFO", "*.asf", and "*.ite"
Sort file "a.csv" by the first comma separated value of each line and print only unique entries
Make directory "aaa"
Search the current directory for all files with no 'read' privilege for 'others'
Create a tar file containing all the files in ~/Library folder that contain spaces in their names
Merge colon-separated information from file1 and file2 where second field of both files matches, sorting the result based on this field - for each line, output: first 3 fields of first file, followed by first 3 fields of second file.
Find files and directories modified in last 7 days
Print "deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main" and append to file "/etc/apt/sources.list"
Find all files in /var/www/html/zip/data/*/*/*/*/* that are older than 90 days and print only unique parent directory paths
create a zip of log files in the current directory which have not been accessed in the last 3 days (-p is for parallel processing for a 4 cpu machine, -n is for maximum work units)
Find all files under current directory
display a long listing of all regular files  in current folder which have been modified in the last 60 minutes
Remove the .jpg files from the current directory whose names match regular expression ".+-[0-9]+x[0-9]+\.jpg"
Find all files under /path and below writable by `group' and `other'
Recursively find the latest modified file in the current directory
Find recursively all regular files in the current directory whose names contain "."
Split "/etc/gconf/schemas/gnome-terminal.schemas" into 1000000 files of about equal size
Remove all *.swp files/directories under current directory
Archive "/media/10001/music/" on host "server" to local directory "/media/incoming/music/" and skip files that are newer in the destination, delete any files in the destination not in the source, and compress data during transmission
Finds files in 'directory' folder with the same name and location but different content than files in 'directory.original' folder and prints location of such files.
Create a copy of the current working directory structure in the usr/project directory,
Print a count of each unique line from standard input sorted from least frequent to most frequent
Search for files whose name is "filename" and whose permissions are 777
Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the second and third dot.
download contents from "https://raw.github.com/creationix/nvm/master/install.sh" and execute
Search for case insensitive pattern 'search for me' in all files that match the name pattern '*.[!r]*' under current directory tree
Count the number of files in the directory trees whose pathnames match pattern '/dev/sd*[a-z]'
Copy the entire "/lib" and "/usr" directory including symlinks from "pi@192.168.1.PI" to "$HOME/raspberrypi/rootfs" and delete files after the transfer
Execute awk script "script.awk" with 2 arguments both "file.txt" and format the output as a table
Gives the primary group of $USERNAME.
Copy all files and directories under the current directory into "../new" preserving relative paths
Search the current directory tree for files whose names begin with 'my'
Prints all child processes of a process with id 20238.
Find all files/directories under '/abs/path/to/directory' directory non-recursively that match the pattern '.*invalidTemplateName.*' in their names
Compresses with compression level 9 all files under the current folder but already compressed '*.bz2' files, performing in background.
display a list of all files in the folder passed as argument to a script
create directory public_html into home directory
get year-month-day from date
delete all the regular files in the temp folder which have not been modified in the last 24 hours
Save the current date, system host name, and "$changes" with newlines removed to variable "subj"
find all the files in the home folder which have not been modified in the last 1 year.
Find the passwd file under root and two levels down
Find all 15MB files
display list of all the regular/normal files in the home folder which are bigger than 512 kb
search all the files in the folder "myfiles" which have the word "blue" in their name
Print the list of the current directory's subdirectories
find all the files in the current folder (handles files which contain newlines or only spaces in their names)
display all the ip addresses in all the files that are present in /etc folder
Exchanges the top two directories in the dirs stack.
find all files and directories under the current directory and display the inode of each one, using printf
Execute zcat on every file matching "*20120805.gz" in the current directory and subdirectories
Find all files whose permission are 777
Return the depth of the current directory tree
find not case sensitive all directories that names are 'apt' and display details
display all the jpg images in current folder
Find all files/directories with space in their names under current directory
Search for first match of the case insensitive regex 're' in all *.coffee files under current directory and print the file paths along with the matches
Finds strings with text "searched-string" recursively in all files of current folder.
delete all the empty directories in the current folder
Find all files of the user with UID=1000
Numerically sort each line of standard input
create directory /etc/cron.5minute
List files in the current directory
display long list of all the files in the folder /home/peter which belong to no user and change the owner,group of all these files (after user confirmation) to "peter","peter"
extract archive stored in $1
Find root's Ruby files accessed in the last two minutes
Print 'echo 'hello, world'
Prints only unique strings of those stored in variables $COMMANDS and $ALIASES.
Find all *.csv files under /foot/bar/ and move them to some_dir
change the permission of all directories in current folder to 755.
Replace commas (',') with newlines in $MOUNT_OPTS and search for the regex '^acl$'
Decompress "path/to/test/file.gz" to standard output and save all lines matching "my regex" and not matching "other regex" to files with a 1000000 line limit
Print the newest *.txt file under current directory with timestamp and path
Change permissions to 0755 for all directories in the /path directory tree
Counts lines in file 'filename' ignoring empty lines and lines with spaces only.
Count line numbers on files and record each count along with individual file name.
Search the home directory tree for files modified less than a day ago
Find all directories under maximum 1 level down the /parent  directory and set their permission to 700 recursively
Print second section of space-separated data coming from stdin.
find all the files in the current folder which are bigger than 1MB
Add cron lists from "file1" and "file2" to list of cron jobs, giving errors for any lines that cannot be parsed by crontab.
Find all directories that do not contain "main.cpp"
Print a list of all regular files residing in the current directory
Create all directories in the path specified by variable $tempWork
Search /var/tmp for files larger than 30 MB modified 31 days ago
Construction with additional '-exec true' to be used if both commands need to run regardless of their success or failure.
Remove all regular files with extensions php, css, ini, txt from directory tree /old/WordPress/
Prints hierarchical process tree.
Display all the files/directories under '/home/bozo/projects' directory tree that have been modified within the last day
Display file type information for all instances of "file" in the current PATH.
List files named "accepted_hits.bam" in the current directory tree prefixing their names with "somecommand"
Find all files in the current directory tree with size bigger than 5 MB and sort them by size
Find files named core in or below the directory /tmp and delete them. Note that this will work incorrectly if there are any filenames containing newlines, single or double quotes, or spaces.
Make directories for each line in "folder_list.txt"
Find files/directories that belong to user 'ian' under '/tmp' directory tree
Delete files in $DIR_TO_CLEAN older than $DAYS_TO_SAVE days
Find all files and directories and count them
Archive "src" to "dst" without overwriting existing files in "dst"
display all directories which have not been accessed in the last 24*3 hours
change the permission of all the php files in the folder /var/www/ to 700
Prints process tree of the current command process.
Search for 'mystring' in all *.txt files under current directory
Find all `doc.txt' files in the current directory tree printing "found" for each of them
Finds all folders that contain 'ssh' file and have 'bin' in path.
Save system information appended with the current date in 'filename' variable
Find all files/directories under current directory tree wihout descending into './src/emacs' directory
Print the PIDs of the current user's instances of "firefox"
Count the number of lines in every regular .rb file in the current directory tree
display all the files in the current folder that are at least one week old (7 days) but less then 30 days old
Compress all files under /source directory tree using gzip with best compression method
change the group to "new_group" and permissions to 770 for all the files in the current folder
Find all .txt files in the /home/user1 directory tree and copy them to /home/backup
Print 10 space separated "x"s with at most 4 per line
Copies 'libgtest_main.so' and 'libgtest.so' to '/usr/lib/', preserving all attributes, and copying symlinks as symlinks, without following in source files.
find all the regular/normal files in the current folder and rename them to html files
Display the first 10 lines of the byte hex dump with no file offset data for "/bin/ls"
Find all the regular files under '/your/dir' directory tree which are bigger than 5 MB and display them in decreasing order of their sizes
Prints current directory name
delete all the files ending with "~" in current folder
Print a sorted list of all .jpg files in the current directory and below
List files in the current directory and below
Find and uncompress all files in the current directory tree ending in ".csv.gz"
Request DNS record for  domain 'dragon-architect.com' with tracing and additional section, and extract third block of text, separated between two new lines.
Save a random 4 byte unsigned integer from "/dev/urandom" to variable "RAND"
find all the ".c" files in the folder /home/david which have been modified in the last 48 hours
Split "randn20M.csv" into files of at most 5000000 lines each with prefix "_tmp"
Recursively finds all '*.pdf' files in a current folder and removes them.
Search the current directory tree for files whose names match regular expression '.*packet.*', ignoring the case
find regular file named foo.txt under root / directory.
Extract files from archive 'archive.tar'
display all the .sh scripts and perl files in the current folder
change the permissions of all the regular/normal files to 664 in the current folder
Find directories in the current directory (no sub-directories) and print them appended with a string literal 'Directory: '
Print number of lines that equal in files '/home/xyz/a.csv1' and '/home/abc/tempfile'
Print the kernel configuration options found in "/proc/config.gz"
Print every file's type, name, and inode
find all the files ending with "~" in current folder and move them to temp folder
Find all files/directories under current directory and print their paths
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory and create an archive (file.tar) of the last file found
Count the number of files named 'job.history' under '/data/SpoolIn' directory tree that match 'FAIL' in their contents
Page through the contents of file 'file_name', positioning the view at the first occurrence of regular expression 'regex'.
Recursively add ".jpg" to all files without an extension in the directory tree "/path"
Find all test2.h files under current directory
Find all regular files under $d directory tree and change their permissions to 777
Prints a random number between 1 and 10
Dump the character output of "echo 'hi'"
Find all files under current directory and print only the filenames (not paths)
search the pattern ^PyErr in all the ".c" files in the folder Lib/
list all regular files under the directory "$directory"
Enables shell option 'lithist'.
Print the list of files in the current directory tree excluding those whose paths contain "exclude3" or "exclude4"
Search for "1234567890" in every gzip file modified between 8:00 and 9:00 on 2014-04-30
Find all php files whose name is tecmint.php in the current directory
Recursively copy all files with names ending with .txt from dir_1 to the same location within copy_of_dir_1
List all SGID and SUID files in entire file system
Search the system for *.rpm files ignoring removable media
find all the directories in the current folder excluding search in the sub directories and create these directories in another path
find directories under the $LOGDIR directory where there has been no modifications within the last 24 hours and compresses the files.
List non-hidden regular files in the current directory tree that were last modified more than 500 days ago
find all directories that names are 'apt' and display details
Remove all regular files named "Waldo" in the ~/Books directory tree
Find all build* directories under /var/www/html/ and print all but first 5 appending with the string 'rf '
Save the FQDN host name of the system in variable "fhost"
Update timestamps of all files (not directories) under current directory.
display all files in the current folder after pruning those in the current folder ( dot is the output of this command )
Archive the list of 1st level subdirectories in /fss/fin to /fss/fi/outfile.tar.gz
Print equal lines in compressed files "number.txt" and "xxx.txt"
For each line in list.txt, output the line adding "FAIL" if the same line appears in fail.txt, and "PASS" otherwise - lines in fail.txt must be in the same order as they appear in list.txt.
Recursively changes group ownership of everything within a '/path/to/repo' to 'GROUP'.
Recursively add read and directory access to all permissions of all files and directories
Remove all text files in the home directory with confirmation
list files in /u/bill that were last read from 2 to 6 minutes ago
Print numbered list of all top-level files in the current directory, with name containing 'android'
find all the files in current directory of size greater than 2GB.
Find files whose name starts with "MyFile", ignoring the case
replace a word in all the regular/normal files in the current folder(doesn't actually modify the original file just displays the replaced text)
Find the largest files in a particular location
Delete all files in the $DIR directory that have not been accessed in 5 or more days.
Print the names of all files in the home directory and its subdirectories recursively whose MIME type is video
Move "tobecopied/tobeexclude" to "tobeexclude"
Find all files/directories named orm.properties in entire file system
Write the current date and time followed by " 0" to the console and append to "log.csv"
Change the permissions of the current directory and all its subdirectories to 755.
Output the variable "filename" without the last dot-separated section.
Search for 'whatIWantToFind' in all files under current directory
Format file "list-of-entries.txt" as new-line separated columns
display the count of all the normal/ regular files in the current directory
Finds all php processes running in system.
Make a list of regular files from the current directory tree that have more than 1 link and view it with the "less" pager
Display the count of regular files for which the owner has read and execute permission under 'home/magie/d2' directory tree
Search the current directory tree for files matching sed regular expression '.*myfile[0-9]\{1,2\}'
Display a detailed listing of the current directory, pausing for user input after each page.
Change all files in "~" which are owned by the group "vboxusers" to be owned by the user group "kent"
search for al cpp files in current folder and replace all expect the parent directory name of these files and display it them sorted order
display the name of all directories in the current folder and do not search in sub directories
change permission of all the files in the entire file system which have the permissions 777.
Search for occurrences of string "main(" in the .c files from the current directory tree
Find all empty files in the current directory and delete them
Show files in /home owned by group `test'
Send one ping request to host with local address in the 10.0.0.x range, with last number specified by variable "i", waiting 1 second for a reply, and output only lines containing "from" to standard output.
exclude vendor and app/cache dir, and search name which suffixed with php
Search the current directory tree for files whose names start with "f"
Opens gawk info manual and goes to command-line options node.
Split "/usr/bin/firefox" into 1000 files of about equal size
Archive all files (not directories) in "folder1" to "copy_of_folder1" specifying to include files info.txt and data.zip
Read a line from standard input into variable "response" without backslash escapes using the prompt "About to delete all items from history that match \"$param\". Are you sure? [y/N] "
Print unique lines of sorted file "a" and "b" and remove leading tabs
Show filename and filetype description of all PHP files in current directory whose name or filetype description includes "UTF"
Print each line in "file", "file2", and "file3" and replace any tabs with spaces
Replace the leading spaces in the output of "history" with periods
Finds recursively all files in '/path/' that contain 'pattern', and prints matched strings with string number and file name.
Run "./configure" with a new environment variable CC set to the full path of the command 'gcc'
Delete all files/directories taken by the glob pattern * except the ones with the name 'b'
Find all files/directories with user id 120 under current directory tree
Prints process tree with command line arguments of a process having id $PID.
find all files in the folder "myfiles" which have not been accessed in the last 30*24 hours
Rename all files and directories under current directory tree by converting the names to small letters without descending into 'CVS' directory
Read a line from standard input with a timeout of 0.1 seconds and prompt "This will be sent to stderr"
find all files not ending in ".html"
Counts lines in each *.php file.
Read a single character from standard input with delimeter '' and no echo
Find the file whose inode number is 1316256
Find all *.txt files under current directory with their timestamps and paths, sort them and print the last entry only
Update the archive '2009.tar' with the files from the data/ directory tree that match pattern 'filepattern-*2009*'
Find all regular files under current directory
Find all directories under current directory and set their permission to 775
Find all files/directories with case insensitive name pattern $TARGET that are located in minimum 10 level down the current directory
Search for files/directories with the case insensitive pattern anaconda.* in var/log directory
Log in using key file "./device_id.pem" as user "deviceuser" on host "middle.example.org" and port 2222
Find files in the current directory recursively that are not readable by all
Find all files under current directory
Display the contents of variable "a" converted to lowercase.
Counts lines of 'file' file.
find all the files in the current folder that have not been modified in the last 24*3 hours
Find only directories
find all files named `linux' on the system
Find all empty directories in the current one and delete them
Split "file.txt" into files of at most 1 MiB in size with a numeric suffix, prefix "file", and additional suffix ".txt"
display all files in the current folder
Go to directory /some/where/long
Delete all directories under '.cache/chromium/Default/Cache' directory tree that are at least 1 level deep and are bigger than 100 MB in size
Report file systems disk usage human-readable using POSIX output format.
dispaly a long listing of all the files in the current folder which have been modified in the last 14 days
Search the regular files of the current directory tree for string "stuff"
Find all files in and below all subdirectories of the current directory
Start program 'scriptname' with an empty environment.
Remove with prompting all files starting in /mydir that have not been accessed in over 100 days
prints a line 19 lines from the line containing PATTERN
Join colon-separated information in 3 files LN.txt PH.txt and AD.txt in a cascade fashion: join LN.txt and PH.txt, then join the result with AD.txt
display all the files in the file system which belong to the user "user1"
Search directory foo for files containing "foo/bar" in their full names
Replace spaces in file names with underscores for all files in the current directory tree
display a long listing of the files all non emoty files in current folder which have been modified 60 minutes ago
List the regular files of the current directory tree that contain string "texthere"
Print out the full path name of "mypathname" with dots resolved
find all the directories  with the name "c" in the current folder which are at least 3 levels deep and which are not present in the path "/p/".
Append "\r" on each line of file "input" and display the printable characters
Perform a case insensitive search for *.jpg files which are greater than 500KB in size under /ftp/dir/ directory
Find all *.rb files/directories under current directory
Search the current directory tree for files whose names contain "TextForRename"
Search for first match of the regex 're' in all *.coffee files under current directory
Archive "source" to "destination" via ssh on port "PORT_NUMBER"
Find all *.rpm files/directories under current directory
Converts all windows line endings to unix line endings
Locate file "file1"
Search for the extended grep regex 'expr' in all files with '.c' and '.h' extension under current directory tree
find all files in the current folder which are of size 0 bytes.
Find files/directories in entire file system that were accessed in less than a day ago
Print the top 10 commands with their use count
Find all regular files in the home directory tree that were modified in the last 24 hours
search for files having python in filename
Find files associated with an inode
Mount "tmpfs" filesystem to "/path/to/dir"
Give the location of every hard link to file1 in the /home directory tree
Extract any line in "fileA" which does not appear as the first word of any line in "fileB"
Split "filename" into files of at most 200000 lines each
display all directories in the current folder
Locate the httpd.conf file on the system
list all active jobs and its IDs
Locate world-writable files and directories on the system
display all the header files  and cpp files in the current folder
show all the files in the entire file system which are bigger than 1.1GB
Print 10 "#" characters in a row
Print a listing of the /usr/local/etc/rc.d directory tree
Change the owner of "$JBOSS_CONSOLE_LOG" to "$JBOSS_USER"
Find all *.php files under current directory and change their permission to 644
display a long listing of all the directories in the entire file system
display all the files in the current folder
Remount "/" without writing in "/etc/mtab"
Finds name of a current month and saves it in a 'month' variable.
Find all *.rb files/directories under current directory
Find all files/directories containing 'foo' in their names under current directory tree
Find all regular files in the current directory tree last modified between 1 and 3 days ago and list them using format '%Tc %p\n'
Print the base name via grep of the current working directory
display all files in the file system which are bigger than 50MB and having size "filename" in them
Find all regular files with name pattern $filename under $fileloc directory tree
Print position number of day '9' in fourth line of calendar output for September, 2009.
Setup a local SSH tunnel from port 1234 to "remote2" port 22 via connection to "remote1" as "user1" on port 45678
Wrap each line in "longline" to a maximum of 30 characters
search  in current directory downwards all files whose status has changed more then 7  days ago
Limit each line in "your_file" to 80 characters and view via "more"
Infinitely write "1" with line numbers to the console and "/tmp/to"
Print 1 byte from "/dev/urandom" as a signed decimal value and no address radix
Search the current directory recursively for regular files last accessed more than 2 days ago
Find files in the current directory tree whose names begin with "file" and whose size is 0, and remove them
Searches manual pages which descriptions contain 'postscript', and prints name and description of only ones that contain any-cased 'png' pattern.
Delete all files/directories with '.old' extension under current directory tree
Find all *.c files under and below the current directory that contain "wait_event_interruptible"
replace the word foo to bar in the current folder in all the regular/normal files which have execute permission  (does not update the file)
Search all files called "abc" that reside in the current directory tree for string "xyz"
Find and list all regular files
find files in /u/bill directory which are access an 2 to 6 minutes ago
Find all *.txt files under current directory and print their timestamps and paths
Find all files/directories with '.in' extension in the directory $directory and its subdirectories
Change directory to the alphabetically last path under the current directory
search in the current directory for any file named Chapter1.txt
Back up all *.txt files/directories in new files/directories with a .bak extension in their names under /etc directory
Search for files/directories which have read and write permission for their owner, and group and only read permission for others
list the regular files in your home directory that were modified yesterday
Remove all "CVS" directories from the current directory tree, ignoring the case
Print URL "http://www.blabla.bla/forum-detail/?ft=72260&fid=34&&pgr=" followed by a number ranging from 1 to 786
Dump "testscript.sh" as 2 byte hexadecimale, printable characters, and octal values
Find all the files in file system which are modified more than 50 days back and less than 100 days
Creates temporary file with appended suffix '.cmd' and saves path to it in 'LGT_TEMP_FILE' variable.
Remove all files except the ones listed in "MANIFEST"
List each file or directory in the current directory prefixed by its human readable filesize and sorted from largest to smallest
Convert "1199092913" to dotted decimal IPv4 address
Move each of the directories in /path/to/folders/* to another directory whose name is constituted by appending .mbox to each directory name and create a directory named Messages in this directory
Expands `whoami` as current user name, and adds resulted path to the directory stack.
find all the normal/regular files in the current directory which have been modified in the last 24 hours
Rename all files matching "access.log.<number>.gz" incrementing <number>.
Split "data.tsv" into files of at most 5000000 lines each with prefix "_tmp"
Non-recursively finds all '*.pdf' files in a current folder and removes them.
Display the host's ECDSA fingerprint using the sha256 hasing algorithm.
Prints process tree of a process having id $ID with parent processes.
Copy all ".php" files in "projects/" directory tree to "copy/" preserving directory hierarchy
Open all .java files in the current directory tree in the vim editor
Search the current directory tree for regular files omitting directory `omit-directory'
Append the last modification time of file $arg as the seconds since epoch with a preceding space to the variable 'KEY'
Search for "facebook\|xing\|linkedin\|googleplus" in "access-log.txt" and print a count of the unique entries
find all the files in the filesystem which do not belong to any group
Print the size for every *.ogg file found under the home directory
Mount "vfat" filesystem "/dev/sda7" to "/mnt/my_partition" with read and write permission, umask of files and directories set to "0000", and save in fstab and allow ordinary users to mount
Find all empty directories in minimum 2 levels down the root directory
find all the directories in the folder $LOGDIR which have been modified in the last 5 days and delete them.
Remove all *.mp3 files in tmp directory but not in it's subdirectories
Find all directories under current directory and set read-write-execute permission for owner, read-execute permission for group and execute permission for other for those directories
Write output and error of "bash myscript.sh" to standard output and to "output.log"
Prints line count of each file within current directory.
Search the directories that match pattern '/path/to/directory/folder{?,[1-4]?,50}' for .txt files
find in $HOME files ending in "txt" and do nothing with them, or files ending in "html" and list them null separated.
Search the first 300 commands in history containing "scp" and ending in "important"
remove all core files in the file system
Search the current directory tree for files and directories with permissions 775
Find all regular files under current directory tree excluding files from './dir1' (except './dir1/subdir1/) and './dir2' directories
Find all files under current directory tree named 'filename_regex' excluding '.svn' and '.pdv' directories and files then search for the case insensitive pattern 'your search string' in those files
Take first text field from file 'file.txt' as a domain name and get short A record for this one.
find all the regular/normal files in all the directories in the /some/dir and delete them
display all regular files in current folder which have spaces in their name
find all files in the file system which are modified after the file /tmp/checkpoint
Find all files/directories under current directory with null character as the delimiter
Find all directories under /home/username/public_html/sites/all/themes and set their permission to 750
Revert $string value and print first 20 space-separated fields
Create a symbolic link in directory "~/newlinks" for each file listed in "results2.txt"
Find writable regular files omitting those that contain sites/default/files in their names
display all regular/normal files which have been modified in the last 30 minutes
Find all 100MB files in file system and delete them using rm command
Find all files, starting from / but ignoring removable media, whose names end with ".rpm"
Change owner to "$FUID" and group to "$FGID" of "$FILE2"
as root, find from / all files called "file.txt"
list names of bind functions containing "/"
Write "deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen" to standard output and append to "/etc/apt/sources.list.d/10gen.list" as root
List all empty files in the current directory tree
list all the ".ksh" files in the current directory
Find all directories under /fss/fin
search the file "myfile.txt" in home folder
Print unique lines in "file1" compared to "file2" in the order they appear
Show file type information for all regular files under '/home' directory tree
Find all files/directories with 777 permission under current directory tree
Archive "_vim/" to "~/.vim" suppressing non-error messages and compressing data during transmission
Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/myprojects' directory tree and modify them in-place
Search the current directory, except the subdirectory tree ".svn", for files whose name is "foo.cpp"
Find files under [directory] that match 'pattern_to_INCLUDE' in their names without descending into directories that match 'pattern_to_exclude' and 'another_pattern_to_exclude', then search for 'pattern' in those files
search for all the files in the folder /home/user1 which end with ".bin"
Find all files owned by group `root' in the current directory tree and change their user to `temp'
display all the details of empty files in current folder
change user of the direct public_html to user owner and group nobody
display all the files in the current folder which are bigger than 100MB and save the output list to the file /root/big.txt
Search the home directory tree for files modified less than 7 days ago
find all .bak files in or below the current directory and move them to ~/.old.files directory:
Find all .gz archives in the /path/to/dir directory tree
Search for $SEARCH in all regular files under $DIR directory tree and display the number of bytes of the matched output
Force create a symbolic link named "mylink" with target "/apps/myapps/new/link/target"
Delete all regular files named 'FindCommandExamples.txt' under current directory tree
Replace each newline in input "1\n2\n3\n4\n5" with a comma
List the unique file extensions of all files under the current directory
Grab the output of "basename" (in this case "stuff") and echo it to stdout, which basename would do by default anyway.
create a compressed archive in my_dir directory matching '.[^.]* ..?*' glob pattern
Remove regular files whose names match Perl regular expression '\w+-\d+x\d+\.\w+$' from the current directory tree
Prints "$NEWFILE" to the terminal and file '/etc/timezone' as a root user.
Numerically sort file "file.dat" by the second word of each line and output from greatest value to least value
Display "infile" as printable characters or backslash escapes
Replace the occurrences of "HOGE" with "MOGA" once per each line of the files from the current directory tree
Recursively copies '../include/gtest' directory to '~/usr/gtest/include/'.
Find all *fink* files/directories in entire file system
Recursively finds all files with whole word "pattern" in a current folder, and precedes found string with its number in file.
List the files from the current directory tree that contain lines matching regular expression '^From:.*unique sender', ignoring ~/src and ~/bin
Find all files in the /var/tmp directory tree with uid=1000
Print summary of new/missing files, and which files differ between dir1 and dir2.
Remount "/system" with read and write permission
Create symlinks to all  /home/folder1/*.txt files and 'folder2_' directory with the same name in a target directory named '+'
display all the directories in the current folder excluding those that are present in the folder secret
create backup of all the text files  present in the current folder
find all the text files in  the current folder and do not search in somedir, bin directories
delete all the normal/regular files in the current folder
Delete all directories in the TBD directory that were modified more than 1 day ago
Counts all files in a DIR_NAME folder and subfolders.
find all the word press configuration php files in the folder /var/www and do not search beyond two levels
search for a word in all the .C files in the current directory
Find all files/directories in maximum 1 level down the current directory which do not have only read permission for 'other'
Convert *.au files to *.wav files using `sox'
search for files which are writable by both their owner and their group
Remount "/dev/block/mtdblock3" on "/system" with read only permission
search for the word foo in all the js files in the current folder
List files ending in .html and residing in the current directory tree
Find all 777 permission directories under current directory and  set permissions to 755
search for directories in the folder "test" which end have 5 digits as their name
List all regular files in and below the home directory that have been modified in the last 90 minutes
Eliminates partially duplicate lines by column, keeping the last occurrence
Store info about all mounted file systems, printing all sizes in powers of 1000
list files that the user does not have permissions to read, do not try to descend into directories that cannot be read.
Search the /myfiles directory tree for files last modified 2 days ago
List all files matching regular expression '*foo*' in a human-readable form
Print the day 1 day ago
change owner of the files into directory "/mydir" with ".txt" extension to user root
Print the first 32 hexadecimal characters from "/dev/urandom", determining C locale for character handling functions
List all empty files under the current directory
Compute the mean average of the word count of *.txt files smaller than 2000 words in the home directory
Search the current directory and directories below for .sql files
Find all regular files with '.r' and '.c' in their names under current directory tree
Display the 5 smallest files in the current directory and its sub-directories.
Print "deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main" and append to file "/etc/apt/sources.list"
Print variable "$module" in formatted columns with at most 80 characters per line
Set permissions to 660 for all regular files in the current directory tree
Display permissions, user, group, and full path for each file in the current directory tree
Find writable regular files in the current directory
Replace all occurrences of "StringA" with "StringB" in the *.php and *.html files residing in the current directory tree
List all defined bash functions
Creates temporary file and saves path to it in a 'tmpfile' variable.
Reread user's .profile configuration file.
Add "prefix" to every non-blank line in "file.txt"
search for files which are writable by either their owner or their group
Find all the files whose permissions are 777
Find all files recursively starting from / that have been modified in the past 30 minutes and list them
List first 5 files named 'something' that are found under current directory
Remove trailing white spaces from all files under current directory ignoring .git and .svn directories
Remove trailing white spaces from all files under dir directory ensuring white space safety in the filename
Display the last space-separated field of each line in file.txt
Show the number of regular files in the current directory tree
Search directory tree $DIR for *.txt files
Load keybindings from a file ~/.inputrc
Print the average round trip time of 5 pings to "google.com"
Find all directories starting from / that have permissions 777
Search the current directory tree for .log files containing the string "The SAS System" on the first line
List the commands in /usr/bin, pausing for user input after each page.
Find all *.py files/directories under current directory
Find all files under current directory and show their file information
display all file in the home folder except ".c" files
Search for "LOG" in jsmith's home directory tree
Find all directories under current directory and make them read, write, and executable for owner & group and remove read-write-execute permission for other
Push the current directory path to the dirs stack
Find and clear UTF-8 files with BOM
display all the files having the word "searched phrasse" in their name in the current folder excluding those from the paths "/tmp/" and "./var/log"
Forward port 16186 on hello.com to 8888 on localhost using private key "privatekeystuffdis88s8dsf8h8hsd8fh8d" for login
Print the directory of the full path to the current script
Find all files in the current directory tree whose names are ".DS_STORE" and delete them
Print local SRV record of domain '_etcd-client._tcp.'
search for a word in all the .C files( those having the extension "c") in current directory
Recursively removes all files in a current folder but '*txt' files.
Find files that are 0 bytes in size in the current directory tree and remove them
Remove Mac OS X Desktop Services Store files
Read a line from standard input into the variable "yn" using the first argument as the prompt ("$1 ")
Make directory "/tmp/foo"
search for all the rpm files in the file system which reside in the same partition as that of the root
Mount remote "cifs" filesystem "//192.168.0.111/serv_share" on "/mnt/my_share" with username "me" and password "mine"
Make directories "foo" and "bar"
display all the php files in the current folder which do not have the permission 644
Remove all *.txt files, except robots.txt, under the given directory modified more than 5 minutes ago
display all the ".c" files in the current folder excluding those that are present in all the sub directories
Search the ~/Books directory recursively for files named "Waldo"
Copies all files with "FooBar" in the path under the current directory to the '~/foo/bar' directory.
create directory foo
Filters only directories from long file listing of the current directory.
Find all directories under mydir
Fetch a script from the web, and interpret it in the current shell.
Find all 400 permission files under /data directory
Find files with 002 permission under /tmp and print them with the string 'Found world write permissions:' printed as the first line of output or print 'No world writable found' if no such files were found
Remount the root file system with read and write permission
Removes all files like '*.bak' in a current folder, and prints messages about what is being done.
Output all lines in BigFile.csv whose secondn comma-separated second field matches first field of a line in LittleFile.csv.
Find all files name passwd in the root directory and all its sub-directories.
find all files in current folder which are bigger than 270MB and less than 300MB
Change permissions to 644 for *.html files under /usr/local
Find all files/directories named 'filename' that belong to user 'username' and group 'groupname' in the entire filesystem
Creates temporary folder and saves path to it in 'td' variable.
find all the files in the entire file system that have been accessed in the last 60 days ago
Finds recursively all folders in current folder which path not contains "NameToExclude" string and removes only ones without files and another folders within.
Create a symbolic link named "$tmpdir/bam" to the full path of command "bam2" found in "$PATH"
Archive "/path/to/application.ini" on host "source_host" to current directory.
Remove "-" from the contents of "/proc/sys/kernel/random/uuid" and save output to variable "comment"
find all gif files in the file system
Lists all directories in the current folder.
Recursively add user write permission to all files under "/path/to/git/repo/objects"
Find all regular files starting from / that have permissions 777
Find all the files in the current directory recursively whose permissions are 644 and show the first 10 of them
Create a symbolic link named "$1/link" to the current working directory
find all the files in the current folder and display them in the sorted order of their name
find not case sensitive all directories that names are 'project.images'
Remove all empty directories under the current directory and below
Search for 'some string' in all *js files under current directory and show the matched lines with line numbers
Save the directory name of the canonical path to the current script in variable "MY_DIR"
Find .java files in the current directory tree that contain 'TODO', and print their names
find all log files larger then 100MB  in /home directory and delete them .
Find all files whose filename does not end with *.html.
List all environment variables (name and value) whose name either equals HOME or PATH, or starts with GO
List all entry names contained directly by directory in_save in the current directory, pausing for user input at each page.
Print the base name of the current working directory
Print the paths of the directories from the paths expanded by the glob pattern /path/to/directory/*
Find symbolic links in /usr/sbin and /usr/bin to files whose pathnames end in "*/systemctl"
Perform a dry run replacing "special" with "regular" in all file names in the current directory
Recursively find the latest modified file in the current directory
Overwrites file 'filename' with random content 35 times, finally writes it with zeros, truncates and deletes.
list regular file which file name end with 'cache' 'xml' or 'html' in current directory
find all the core files in the temp folder and force delete them
find the count of text files that are present in the current working directory.
Find all SGID set files in the file system
Find all your text files and page through them
Copy the directory hierarchy of the current directory to "destdir"
Archive all files specified on standard input under "/path/to/files" to "/path" on host "targethost" as user "user" with escalated privileges
Find all files in the current directory recursively that were last modified more than 5 days ago
Search the current directory recursively for regular files, skipping hidden files in the current directory
search in all the regular/normal files of the current folder for the word "word" and display the matched file name
list all regular files which path is not dir1 or dir2
Searches the manual pages with descriptions in section 3, that name begins with lowercase letter.
Remove files erroneously named `-F'
Print the current directory tree with file sizes
Search the current directory tree for files whose names contain "bills"
Find regular files in the current directory that are writable by at least somebody
Finds every folder with file 'header.php' within, and copies file 'topscripts.php' to every one of them.
Find all files whose names begin with 'Makefile' in the /usr/ports directory tree and count how many of them contain 'QTDIR'
Reverse the order of lines in "myfile.txt" using BSD "tail" command
find all the files in the current folder which have been modified in the last one day
find all files under the /etc/sysconfig directory that were accessed in the last 30 minutes
Change the permission to 644 for all files under current directory
List all *.c files in entire file system
Print the first 5 characters followed by the next 5 characters on a new line for each line in "input_file" and split the result into files of at most 2000000 lines each with a filename prefix "out-prefix-"
display all the files in the current folder excluding those ending with ".disabled" in sorted order
search for the word "damian" in all the regular/normal files in the /etc folder and display only the matched file name
Find all files matching "abc*" in the current directory and append a column with "OK"
Print a random number from 2000 to 65000
find all normal/regular files in the current directory
Find files in the current directory tree of size between 700k and 1000k
Left justify number each non-blank line in "log.txt" as input to "sed ..."
Remove trailing whitespaces in .txt files from the current directory tree
Archive "./htmlguide" to "~/src/" with resolved symbolic links and delete any extraneous files from "~/src/" not found in "./htmlguide"
List all files in a current folder, separating names with semicolon
Print full path of command "python2.7"
Display system information: kernel name, hostname, kernel release and version, machine architecture, processor type, hardware platform, and operating system type.
Copy directory hierarchy from "$sourceDir" to "$targetDir"
Enables 'globstar' (recursive globbing) shell option.
tar all the regular java files to myfile.tar
List the z* links in the /usr/bin directory with inode information and the file to which it points to
display list of all the hidden directories in the directory "/dir/to/search/"
Print a sorted list of unique directory paths in entire file system that match the pattern '<name_pattern>' in their names
Delete all regular files named 'IMAG1806.jpg' under current directory tree
Verbosely compresses all files on seventh and eighth depth level keeping original files in place.
Find files/directories under /users/tom that matches both the pattern "*.pl" and  "*.pm"
find all directories that names are 'project.images'
Find all files under current directory with their size and paths, reverse sort them numerically, then print first 4 entries
search for pattern matched files in the current folder and subfolders exclude "excluded path"
search for files in the current folder using name patterns
display all the regular files in current folder
Enables shell option 'autocd'.
display list of all the hidden files in the home folder
Print which files differ in "dir1" and "dir2" recursively
Make directory "backup"
Report total size of the root filesystem disk usage in powers of 1000.
Find disk used space of only the target directory
Format the contents of "[file]" in a neat table
Find and remove the file with inode number 782263 in the current directory tree
Find files modified more recently than file poop
display a list of all the files  in the home folder which have been modified today
Lists content of all subfolder (without recursion) in a current folder.
display all the regular files in the current folder excluding those that are present in the path "git"
find all java files in the current folder and search for the pattern REGEX
Search the *.cc files in the current directory tree for string "xxx"
find all files under the /etc directory and display any IP address patterns in them
Calculates process depth of process with id $processid, and stores it in a 'depth' variable.
Find all *.txt files under current directory and copy them to ./tmp
print the line containing TERMINATE and everything after in 'file'
Print the commands that would execute "myfile" on all .ogv files from the current directory tree
List all regular files residing in the current directory tree and containing string "/bin/ksh"
Find files larger than 100MB in /var/www and exclude files with /download/ in their path from the output
Search the current directory tree for directories that can be opened by noone
find all the links in somedirectory and print them in a single line (to avoid the problem of files having newline in their names)
Finds strings with dot-separated sequence of numbers, and prints part of that sequence before the first dot.
search  character special files called ' backup '  from  /usr directory downwards and print them .
find the file "httpd.log" in the folder /home/web-server/
Recursively archive "test/a/" to "test/dest" excluding "test/a/b/c/d"
find all files in the home folder which have been modified between 72 and 96 hours before
Add "new." to the beginning of the name of "original.filename", renaming it to "new.original.filename".
Report all C language source code files under the current directory
Search the current directory tree for regular files whose names end in ".shtml" or ".css"
split the first 100 lines of the file "datafile" per lines with size 1700 bytes
lines.txt contains a list of line numbers, one entry per line - output only these lines from text.txt omitting the rest of the file.
Find regular files whose names end in .JPG
Rename $file file, preserving only part of name before '-' symbol, and appending '.pkg' suffix to the end
search for a file "file" in current folder and display all instances of this file
Find all files/directories named file in 2 and 3 levels down the current directory
Print the files in the current directory as a list of semicolon separated values
Get the list of regular files in the current directory
Forcibly create symbolic links in target directory "~/staging" for all files located in directory "~/mirror"
search a url in all regular/normal files in a folder.
Remove spaces from output of "echo aa | wc -l"
Print out the names and types of all files in the current directory tree
Find all regular files named 'Chapter1' under current directory tree
Removes empty folder, and hides error message if one is not empty.
Find files under /usr that are newer than the first file `FirstFile'
Counts the number of lines in *.php and *.inc files in a current folder and subfolders.
Find all files named "foo_bar" in the current directory recursively
find all the files that have been modified today(from the strart of the day)
display list of all the files in the /tmp folder
find all regular/normal files which have execute permission in current folder and copy them to another folder
find the type & description of all the regular/normal files in the home folder
Set environment variables using assignments are listed in '.env' file and run 'rails' command with defined environment
Search for line number 111 in file "active_record.rb"
Find all *.rb (regular) files under current directory and count their line numbers ensuring white space safety on file name/path.
Remove all files from the current directory tree whose names contain whitespaces
Find all fglrx-libglx* files under and below debian/fglrx/
Delete all files (files, directories, links, pipes...) named 'core' under current directory
display a long list of all the files in the directory "/mydir" which have not been modified in the last 20*24 hours or which have not been accessed in the last 40*24 hours
List every symbolic link in every home directory's subdirectory owned by group `staff'
Search the /path directory tree for files lacking the group writable bit
Print environment variable "IFS" and its value
Recursively find all files ending with '*.txt' and print they names and content
Archive "/my/dir" on host "server" as user "user" to the current local directory excluding files ending in ".svn"
change the permissions of al the directories in the current folder
Print the first line of every file matching pattern 'file?B' in the xargstest/ directory tree
Search for files/directories with the case insensitive pattern anaconda* in /var/log
Go to directory /cygdrive/c/Program Files (x86)/$dollarsign using single quotes to escape special characters, including dollar signs
Pops the top directory of dirs stack and changes to it.
Print file name without extension assuming there is only one dot in the file name.
Copy all directories recursively from "source/" to "destination/" excluding all files
Find all files/directories under /myfiles that were modified 2 days ago
Find all *.* directories under /home/feeds/data directory
search for a shell script in the current folder and display the current folder path but search from the sub directories
Enables shell options 'nullglob' and 'dotglob'.
Unzip "file.gz", list the unique lines matching regex pattern '"searchstring":"[^"]*"' prefixed by the number of occurrences, sort from least frequent to most frequent
Prints listing of a root folder including hidden files, and saves output to 'output.file'.
search for the file "process.txt" in the current directory
Change permissions to 644 recursively only for files
Shows MAC address of network interface eth0.
Create intermediate directories foo and bar as required and directory foo/bar/baz
Print host name followed by ":" and the contents of "/sys/block/sda/size"
Print the base name of the current working directory
display all files in the current folder with the name test excluding those that are present folder test
Remove trailing white spaces from all *.py files under dir directory (ignoring .git path) and keep backups of the originals
Search for files only that end with .php and look for the string $test inside those files
Enables shell option 'direxpand'.
Print the most recently modified file
Search the files residing in the current directory tree whose names contain "bills" for "put"
Recursively set all permissions under "/opt/lampp/htdocs" to 755
Get a list of all files in the /home directory tree and their coressponding inode numbers
Change every reference to the colour red to green in all CSS files
Find files readable only by the group
Shows state of shell option 'extglob'.
find all the files that have been modified exactly 24 hours ago
Move all files and directories in the current directory to "$TARGET" excluding files matching "$EXCLUDE"
Send ping requests to "yourhostname.local"
Print a line of 100 random characters either "." or " "
Run an awk program on every TXT file found in the current directory tree
find all the files in the current directory that have the word "bash" in their name
add read,write permissions to all the files in the current folder which have the permission 600
Find all files/directories under current directory tree that belong to user 'john'
move all the files in the current folder  to temp folder and search atleast in one subfolder
Make directory "/cpuset"
Generate a random 32 ASCII character password from /dev/urandom and save it to variable 'pass'
Recursively removes all files like '.DS_Store' from current folder.
Find files named "needle" ignoring the case
Find all files/directories under current directory tree excluding files/directories with name 'query_to_avoid'
Find all files and directories containing "disc" in their names
Will run checksums recursively from the current directory, and give back grouped filenames of all identical checksum results.
Search the current directory tree for regular files whose names end with "keep.${SUFFIX}", where $SUFFIX is a shell variable
Display all lines containing "IP_MROUTE" in the current kernel's compile-time config file.
find all js files under the build direcotry except build/external and build/log directory.
Find all files under current directory and change their permission to 644
Find all files called wp-config.php in the /var/www directory and below
Remove everything in a current folder without prompting.
Replace all commas with tab characters in 'filename.csv' and page interactively through the result.
Print the files to which symbolic links in the current directory point
Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar
Archive all directories in /path/to/directory/* (only command line arguments, no sub-directories) to files with .tar.gz extension transforming the full paths to relative paths
search for all the files in the current folder which start with "my"
Assigns MAC address 00:80:48:BA:d1:30 to interface eth0.
change user and group of the file /usr/bin/aws to user amzadm and group root
Find files in the current directory and its sub-directories that begin with 'f'.
Resolve symbolic link of file "/foo/bar/baz"
Copy all files matching "file_name.extension" to "/path/to/receiving/folder" preserving directory hierarchy
searches through the /usr directory for the regular  file named 'Chapter1*'
Search the current directory tree for files whose name is ".note", case insensitive
Find all files under /path and below executable by `group' or `other'
Set the executable bit for all users on all .sh scripts from directory trees lib, etc, debian
Ping the broadcast address "10.10.0.255"
Find regular files named "expression -or expression" under and below /dir/to/search/
find all symbolic links under /usr
Display a long listing of all 0777 permission directories under current directory tree
Save first one of space separated parts of each line in $LOCKFILE file to the 'CURRENT_PID_FROM_LOCKFILE' variable
Find all .txt files in the dir/ directory tree and copy them along with times, permissions, and ownership to dir_txt/
Find all *conf* files recursively under current directory
Print the entire saved command history
find all files in home folder which have been modified exactly 1 day before
display all the directories in the folder master-
Find a single file called FindCommandExamples.txt under current directory and remove it
create symbolic links in current directory to all files located in directory "/original" and have filename extension ".processname"
Change ownership of "/data/db" to the current user
Delete all directories in the /myDir directory tree
Find all files/directories under current directory with 'FooBar' in their paths and copy them to ~/foo/bar
find all the directories in the file system which begin with "man"
find all text files in the current folder which have been modified after the file /tmp/newerthan
Remove all directories called "test" from the current directory tree
Returns exit status 0.
Find all *.pdf.marker files under ${INPUT_LOCATION} and move them to ${OUTPUT_LOCATION} also move any *.pdf files with the same name under current directory to ${OUTPUT_LOCATION}
Read a single character from standard input and do not allow backslash to escape characters
search for all the files in the folder /usr/bin which have not been accessed in the last 100*24 hours
find all files in current folder using name patterns
List path/filename of all PHP files under current directory whose file type description or path/name contains "CRLF"
Report file system '/dev/disk0s2' disk usage
Print fourth column of data from text file text.txt where columns separated by one or more whitespaces.
Find all directories named build under the current directory
Get IP address of your SSH session
Count the number of files in the /usr/ports directory tree whose names begin with 'pkg-plist' and which contain 'dirrmtry'
Move the directory named "some-dir" and residing under the current one to x/
Gets IP address of 'eth0' network interface.
Print current shell using process ID
Find all files/directories under current directory tree excluding hidden files/directories
Find files under /etc/apache-perl that are modified more recently than /etc/apache-perl/httpd.conf
Remount "/mnt/mountpoint" with read and write permission
search for text files in the folder /home/you which have been modified in the last 60*24 hours(case insensitive search) and display their contents
Find all *$VERSION* files/directories under current directory where $VERSION is a variable
Set variable "filename" to only the name of document specified by URL, in this case "pic.jpg"
Create a symbolic link named ".profile" to "git-stuff/home/profile" without dereferencing ".profile"
Print the current directory tree
Connect to port 2222 of example.com as ssh user "user", and copy local file "/absolute_path/source-folder/some-file" to remote directory "/absolute_path/destination-folder"
Search for the regex "\$wp_version =" in all the regular files that end with '/wp-includes/version.php' (case insensitive) in their paths in directories/files taken from the glob pattern '/var/www/vhosts/*/httpdocs' and show the matched lines along with the file names
Change directory to the directory containing the "oracle" executable
Print the pathnames of all files from the /tmp/dir1 directory tree
Creates full path with parents, that matches to folder path extracted from $f variable.
display all the text files  in the current folder
find all normal/regular files in current folder which end with "~" or which begin and end with "#" and and move them to  temp folder
display all the files in the current folder which have been modified after the files "/bin/sh"
recursively change user of the direct public_html and all files into it to user owner
display all files in the current folder along with their last access timestamps
Find all directories under $ROOT_DIR and show the sub-directories of the directories before the directories themselves
Find all directories named 'mydir' under 'local' and '/tmp' directory tree
list all zero-length files under the current directory
Print the characters in $b that match with any character in $a without printing any whitespace in-between
Remove all but 5 last comma-separated fields from each line in 'data.csv'
display all files in the current folder ($@ contains the variables passed as argument to the function)
Make all regular files in the current directory tree world-readable
download contents of a website "https://get.scoop.sh"
Find files on the system whose names begin with either x or X
Saves index number of file 'script.sh' in the 'inode' variable.
List all files/directories under $dir_name with size $sizeFile and print them according to the format string  '%M %n %u %g %s %Tb %Td %Tk:%TM %p\n'
Find SQL files with text `expression'
find the file "myfile.txt" in the folder /home/user/myusername/
Saves file sctipt.sh size in 'size' variable.
Set shell option 'histverify'.
Print input "your, text, here" formatted to fit 70 characters per line breaking at spaces
Display a long listing of all the regular files in the file system which belong to user 'root' and which have suid bit set
Print the number of 'processors' (both physical and virtual/hypethereading cores) less 1.
Replace all negative numbers in the 3rd comma-separated column of inputfile by the number notated in parenthesis instead of with a minus sign.
Create a compressed archive from "www" and split the contents into files of at most 1073741824 bytes and use prefix "www-backup.tar."
Search the specified user for the given "filename"
Creates temporary folder within TMPDIR, with name like current shell name and 10-letter suffix.
display all the directories in the current folder for the files which have not been accessed in the last 48 hours
Read first column of each row, find all other first columns which have a difference less than 10, and append that comma separated list to the row
display a long listing of all the regular/normal files in the current folder
Find all directories in maximum 1 level down the $front_element directory, sort them according to modification time and list them excluding the $front_element path from the list
Prints week day of a 31 day in a current month.
Find files in the current directory tree whose names are of the form "cxx_data.txt" where xx is a number from 30 to 70
Find all directories that have been accessed $FTIME days ago under current directory tree
Find all files that are modified in last 3 days
Output the system host name and date to the console
Print lines in "file1.txt" that do not exist in "file2.txt"
Print the file content of command "f"
Find all directories matching the regex '.texturedata' in their names under '/path/to/look/in/' directory tree
Handles shell option 'nullglob' according with flags stored in $NGV variable.
Change the owner of "process" to "root"
Print a sorted list of regular files from directory tree /folder/of/stuff
search for the word "slrn" in all the files in the current folder
Find all files in current directory and search for 'searchName' in those files
Replace "_" with newlines in "Testing\r\nTested_Hello_World" and display the named characters
Display a character dump of "oldfile"
Find all the regular files with '.tgz' and '.gz' extensions and delete the oldest file under '/home/backups' directory tree
find all executable files
Find files under current directory that contains the string '/bin/ksh'
Find all files/directories in level 2 down the current directory
Find all symlinks in the /myfiles directory tree
find all the files in the current folder and display adding quotations to each file
display all files in the current folder which do not match the regular expression
display the long listing of all files in /var/log which were modified 60 days or more ago.
Count the number of users logged in
Make a list of all files in the current directory tree, except *.png and *.class, and view it in the vim editor
find all the normal/regular files in the current folder which have been modified two days ago and display a long listing of them
Find files on the system created during the last 50 days
rename all the svg.png files to png files in the current fodler
Execute all commands in "commands-to-execute-remotely.sh" on server "blah_server"
find all the files that have been modified in the last 60 minutes
Recursively change the group of all files in "/var/lib/php/session" to "lighttpd"
Search the files from the current directory tree for "foo"
Find files that were modified second last week and archive them
find files in root directory that names are game
Get a detailed listing of all symbolic links in /usr/bin starting with "z"
Find all *.mp4 files under /working
Count the number of equal lines in sorted files "ignore.txt" and "input.txt"
change the owner and group of all the files in the folder  /usr/lpp/FINANCIALS
search in the current folder for the files that begin with "myletter"
find all files in the current directory do not display the files which are not readable
List all regular files from the current directory tree that were modified less than 60 minutes ago
Print process tree, adjusting output width with a screen size.
Search for the case insensitive regex expanded by $2 in all files named $1 (to be expanded) under current directory
ERROR - this is for DOS
List the names of all files under current directory
create directory tata
Print lines 10000 to 10010 from input "seq 1 100000"
find all the file which name end with c or h and content contain 'thing'
Write "Some console and log file message" to standard output and "/dev/fd/3"
Change owner of "folder" to "user_name"
Find ".c" and ".h" files in the current directory tree and print lines containing "#include"
find all the files that are modified in the last 7 days
force delete all the regular/normal files in the current folder
Cut all remote paths from HTTP URLs received from standard input (one per line) keeping only the protocol identifier, host name, and trailing slash, of the form http://example.com/
Prints all child processes of a process with id 20238, separated with comma.
create a symbolic link with absolute path "/cygdrive/c/Users/Mic/mypics" to file "/cygdrive/c/Users/Mic/Desktop/PENDING - Pics/"
Calculate the md5 sum of the output of "du -csxb /path" and compare it against the md5 sum saved in "file"
find all files in the current directory whose size is 24 or 25 bytes.
Creates temporary folder in a TMPDIR folder or /tmp folder if TMPDIR doesn`t defined, with folder name like current shell name and 10-letter suffix, and saves created path in 'mydir' variable.
Run command 'su whoami' on host 'remotehost'
Change all directories under "./bootstrap/cache/" to owner "apache" and group "laravel"
Count non-blank lines in a file 'foo.c'
Read a line from standard input with prompt "Enter your choice: " and save response to variable "choice"
Find files that were modified in less than 1 minute ago
Remount "/mnt/mountpoint" as read only
List characters from standard input showing backslash escapes for non-displayables
Find all files whose names do not begin with "zsh" on ext3 file systems
Unzip and extract "*\(userAgent=[^=]*\) [^ =][^ =]*=.*" from "input.gz"
Display the mount point of a device file "$path"
Search for 'DOGS' in all files with '.txt' extension under ~/documents and also print the file names
find all the perl files in the current folder and search for a pattern
Create directories "/tmp/x/y/z/" on remote host before copying "$source" to "user@remote:/tmp/x/y/z/"
Search recursively through /mydir, outputting only the base (leaf) name of each file, directory, symlink etc. without any containing directories, that is the part following the last slash.
Find all *.c files in /usr/src bigger than 100k
Find all executable upvoter-* files (following symlinks) under maximum 1 level down the current directory
Download "Louis Theroux's LA Stories" using rsync over ssh
change the permission of all the rpm files in the entire file system to 755
find all the files ending with jpg in current folder and display their count ( case insensitive )
Save the number of bytes in "$file" after decompression into variable "size"
create the compressed tar archive images.tar.gz containing all jpg files found under /
Find which ruby files under current directory contain the string 'jump'
Print list of all user names who are logged in
Split "$in_file" excluding the first line into files of at most 100000 lines each with numeric suffixes of length 5 and the prefix $in_file"_"
Find all *.txt files/directories under current directory
print all filenames of files under current dir containing 'foo', case-insensitive
Find all regular files under  $somedir directory and print each of their paths after a string literal 'Found unexpected file '
Find all directories with space in their names under current directory and rename them by replacing all spaces with _
delete all the empty in the current folder do not search in sub directories
Remove the "^M" characters from all *.ext files under /home directory
find all the files in the directory which is pointed by $1 variable ending with the name held in the variable $2 or having the extension of value saved in the argument $2.
Find and print detailed information about all regular files in your home directory and below that have only the group permission set
Find files matching the pattern "./sr*sc" in their paths under current directory
Find files/directories named<filetype> under current directory which were accessed less than 5 days ago
Find all files in the /home/myuser directory recursively that are older than 7 days
Find all *.rb and *.py files/directories under current directory
Delete all regular files with '.txt' extension that were modified in more than 25 minutes ago in maximum 1 level down the directory '/home/u20806/public_html'
Make directories to "/tmp/boostinst" as needed and print a message for each created directory
Copy all files named 'script.sh' in directory 'olddir' to directory 'newdir'
Change the permissions of every directory in the current directory and all files and directories within them to 700
find all text files in current folder and delete all the files that have the word foo in their name
Delete the files under the current working directory with inode numbers specified on standard input
Search for hidden files non-recursively
Find all files named 'test' in the current directory tree, not descending into "test" directories
Count the number of files/directories named file1 under current directory
Display infinite scroll of random ASCII art
Add execute permission to all files ending in ".sh"
Read a line from standard input into variable "SSHPASS" with prompt "Password: " and without echoing the input
Go to /the/project/root//data, which in most filesystems/operating systems will be the same as cd /the/project/root/data
Recursively removes all files like '*.pyc' in a current folder.
Find all files under current directory and show their file information
Find all C source code files from the current directory tree that contain "keyword" in their pathnames, ignoring the case
Find files in the current directory tree that are named "some_pattern" and move them to directory "target_location"
Print list of files that are only in directory /dir1 and not their sub directories and only their file names.
Just find directories and skip file names
Find the "param1" string in regular files under and below /var
Split "your_file" into files with at most 9 lines each
Print a line of 3 '%' characters
search for a regular/normal file myfile in the folder "/home/weedly"
kill group leader
List all files in entire file system that are not newer than the ttt file and do not belong to the user wnj
find all text files in current folder and trim the extra spaces in all lines in these files
split $SOURCE_FILE" into pieces per 100 lines
List files in the current directory tree which have permissions rwx for user and rw for group and others
Find all the regular files under $DIR directory tree which have been modified before the file $a excluding the file $a and delete them
Recursively change the owner and group of all files in "public_html" to "owner"
Delete all .svn files/directories under current directory
find all regex  ".*/[a-f0-9\-]\{36\}\.jpg" files
See all pages in section 3.
Search for the Perl regex "[\x80-\xFF]" in *.xml files under current directory tree
Remove all *.log files from the current directory tree
Delete all files beneath the current directory that begin with the letters 'Foo'.
replaces the last occurrence of 'a' with 'c'
display all the files in the current directory excluding the paths "targert", "tools", "git"
Find all directories under minimum 1 level down the current directory and set their permission to 755
Create the directory '.npm-packages' in the user's home directory($HOME)
Report file system containing path to /some/dir disk usage in kilobytes.
delete recursively, without prompting, any files or directories under the current directory that case insensitively match the filename ".svn"
display all the text files in the current folder which have been modified in the last half minute ( 30 seconds )
Search the bla directory recursively for *.so files
Print 'Since -printf is an action the implicit -print is not applied\n' for every file named 'file' found under current directory tree
Find all files called "INPUT.txt" in the current directory tree and remove lines starting with # in them, saving backup copies as INPUT.txt.bak
Find all *.mov (case insensitive) files under current directory and list their paths with their names
Report root file system disk usage human-readable.
find the file "dateiname" in the entire file system ( case insensitive search)
Count the number of regular files with case insensitive name pattern $srchfor under 'teste2' directory tree
locate large files (> 100 MB) in /home/ for 'cleaning'
Count all directories in maximum 1 level down the current directory
Output a CSV file as a formatted table
Print the contents of "${SPOOL_FILE}" file to the console and append to "${LOG_FILE}" file
delete all the empty in the current folder and all its sub directories
Find regular files named "expression -and expression" under and below /dir/to/search/
delete all the log files in the current folder
Find regular files under and below /path that match pattern "???-???_[a-zA-Z]*_[0-9]*_*.???"
Measure the disk space taken up by all *.txt files in the current directory tree
List all regular files in entire file system
display all normal/regular files in current directory
Invoke a trusted X11 forwarding SSH connection with server "192.168.0.14" on port 222 as user "phil"
Delete all files in the "${S}/bundled-libs" folder except "libbass.so"
Print output of script 'trap.sh'
search for the folder .dummy in the entire directory structure of "test folder" and remove it.
Print the list of files and directories of the /etc directory
List the full path of each directory under the current working directory
Back up all *.txt files/directories in new files/directories with a .bak extension in their names under /etc directory
Print newline, word and byte count for all .h, .c, .cpp, .php and .cc files under current directory tree and also show the total counts
Find all directories under /path whose names are 33 characters long
list the files with a name ending with '.mp3' or '.jpg' and beginning with 'foo'
Find all the *.txt files in the current directory older than 48 hours
List all regular files in /var/www and below that have changed in the last 10 minutes
Print each logged in user's username and full name
find the regular/normal file "myfile" in the folder /root
find all the text files in the current folder starting with "somefiles-"
Find all the SGID bit files whose permissions set to 644
For each line in 'file', print "result = " followed by the line backwards.
searches through the root filesystem ("/") for the file named Chapter1, and prints the location
Read a line from standard input into variable "ans" without backslash escapes
Run 'top' in batch mode (don't accept user input) with delay of 1 second between updates, and duplicate the standard output to file 'output.log' in current directory.
Remove all *.sql files in the $backup_path directory tree that were last modified more than 30 days ago
Find all files/directories with '.js' extension under current directory tree without descending into  and ignoring './directory' completely
Connect via ssh to "your.server.example.com" and recursively copy directory "/path/to/foo" on this host to direcotry "/home/user/Desktop" on local host, using "blowfish" cipher algorithm.
Read a line from standard input and save response in variable "VARNAME"
Recursively change the owner and group of all files in "/your/directory/to/fuel/" to "nginx"
Delete all directories under '.cache/chromium/Default/Cache/' directory tree that are bigger than 100MB and are at least 1 level deep
Search /root/directory/to/search recursively for the files matching pattern 'filename.*'
find files in the current directory and sub-directories, that changed within last hour
Rename all "thumbs" directories to "thumb" in the current directory tree
Remove all .tmp files in and below /tmp
display all the html files in the current folder
List the names of the directories in current directory without going into sub-directories
Find symlinks in the current directory tree
Find all executable files under the current directory and below
Find all .mp3 files with more than 10MB and delete them
Find all target files outside the current working directory with symbolic links in the current working directory
Find *.avi and *.flv files in /path/to/your/directory and below and copy them to /path/to/specific/folder
Search for broken symlinks
Find the "erl" executable in $PATH and read the "RELEASES" file to extract the erlang release number
Prevent ssh from reading from standard input and execute "touch /home/user/file_name.txt" on "$R_HOST" as "$R_USER"
Archive all files beginning with .env or .bash in current directory to user's home directory on host "app1", preserving timestamps and skipping files that are newer on "app1"
Find files/directories named 'document' in the entire filesystem and in the directory tree '/usr' even if it's in a different partition without traversing to other devices/partitions
Find all directories under current directory excluding those which match the regex /\. in their names
Search for all .html files in directory "www" and output only the basename (without containing path) of each.
Find all files/directories with 777 permission under '/apps/audit' and strip write permission for 'other' from them
Find all SGID set files
Remove "\n" from "test1\ntest2\ntest3" and search for "test1.*test3"
find all the files ending with "rb" and display the first 10000 lines from these files.
Find all 400 permission files under /data directory and change their permission to 755
Find all files and directories in the current directory tree with "linkin park" in their names and copy them to /Users/tommye/Desktop/LP
list files in /usr modified after February 1 of the current year
Locate logo.gif in the /var/www directory tree
Find all files/directories in entire file system that have  "write" bit set for either the owner, the group, or others
file1 and file2 contain lines of comma-separated information, for each line whose first field matches, and where 3rd field of file1 matches 2nd field of file2, 6th field of file1 matches 3rd field of file2, and 7th field of file1 matches 4th field of file2, output: fields 1, 2, 3, 4, 6, and 7 of file1.
Request IP address of 'myip.opendns.com' from name server 'resolver1.opendns.com'
Delete all .svn files/directories under current directory
Write output of "ls -hal /root/" to standard output and to "/root/test.out"
Find all regular files under and below /home/admin/public_html/, and change their permissions to 644
Search the *.txt files from the current directory tree for "string"
Counts lines of /dir/file.txt file.
remove all the ".core" files in the file system
display a long listing of all the files that begin with the name "Metallica" in the entire file system
Delete all files in the /myDir directory tree that were last modfied 7 days ago
List all regular files in the current directory tree
Print the lines of file "strings" specified in file "index"
find all the files in the folder /home which are bigger than 10MB and smaller than 50 MB
display all the files ending with ".user" or beginning with "admin" or ending with ".user.gz" in /var/adm/logs/morelogs/ and excluding  all regular files
Recursively finds in all folders but "./output/*" all files but *.o, *.swp and prints strings with 'soc_attach' text pattern and number of matched string.
find all files in the current folder that are modified exactly 2 minutes ago
Places current job to background.
Find files named "ppp.conf" in the /etc directory tree
Find all files under current directory that were modified in the last 24 hours and also include the files that were modified in less than 1 day ago
Force create a symbolic link in "/usr/bin/" for each file matching "$javaUsrLib/jdk1*/bin/*"
find all the files in the current folder that are modified after the modification date of a file
Search the current directory tree for regular .mkv files
find all the normal/regular files in the current directory and search for the word mail and display the file names
Search for 'pattern' in file 'file' and print the matched lines by separating them with spaces instead of newlines
Search the /myfiles directory tree for regular files with read and write permissions set for `others'
Print the list of all regular files from the current directory tree that contain "confirm", case insensitive
find all files without 777 permision
Replace all occurrences of 'previousword' with 'newword' in all regular files with '.cpp' extension under '/home/www' directory tree and modify them in-place
Change the owner to "owner" and group to "nobody" of "public_html"
Find all files/directories named 'articles.jpg' under current directory tree
Find all files under /path and below writable by `group' and `other'
Send SIGTERM signal to entire process tree starting from ID 24901 and below.
Find files in the current directory tree whose names begin with "file" and whose size is 0, and remove them
Write "[some repository]" to standard output and append to "/etc/apt/sources.list" as root
Set permissions for all regular files under /var/www to 755
Search for case-insensitive "string" in "log.tar.gz"
find all files in current folder which are more than 300MB
Find the "*.foo" files in the current directory tree that are not under ".snapshot" directories
Delete all files with 128128 inode number under current directory tree
Recursively finds strings with"text string to search” in any file within the 'directory-path', following symlinks, and prints found strings with file names.
Recursively removes all empty folders from the X folder.
find .bmp or .txt files
Find all files in the current directory tree ignoring the ".git" directory
Copy all files with name pattern $j.sh (case insensitive) under '/tmp/2' directory tree to $i directory
Search for files with "sitesearch" in their names and "demo" in their path names
Use ANSI escape codes to make "World" bold from input "Hello World!"
Find .jpg files owned by user daniel in the current directory and its sub-directories.
Print out the contents of all *.txt files in the home directory
Remove files from the home directory tree that were last accessed more than 100 days ago
display all the regular files in the current folder and do not search in sub folders
display all the files in the home folder that have been modified in the last 7*24 hours
Get a list of all hidden files from the current directory tree
Search all files in the current directory tree, except *.html and *.svn*, for "SearchString"
Force create a symbolic link without dereferencing named "alpha" to "alpha_2"
find all files in the home folder which are modified in the last 2 days.
Print your/dir if it's an empty directory
Find directories in the /path directory tree whose names are 33 characters in length
Find all files starting from the current directory which are smaller than 100MB
find all the files in the home folder that have not been modified in the last one year
display all the directories in the current folder excluding those that are present in the aa directory tree
Decompress "path/to/test/file.gz" to standard output and save all lines matching "my regex" to files with a 1000000 line limit
Locate all *.csv files under the current directory tree
Locate all files named 'restore.php' in the current directory and 3 levels below
Find all 'test' directories in the current directory tree and remove them
Change the user and group of all files and directories under /var/www to www-data:www-data
find file named foo.txt under root / directory.
find all foo.bar files in the entire file system and which are present in the same partition as root.
Finds all strings with parent folder of path '$path' in 'file', and saves result in 'x' variable.
search for files in the current folder which start with "myfile" ( case insensitive search )
Calculate the md5 sum of the md5 sum of all the files sorted under "$path"
Set prompt to the system host name and history number
Find all files in the current directory tree and replace string $1 with string $2 in them
show the disk use of all the regular/normal files in the current folder which are bigger than 50MB
Find all regular files with '.txt' extension excluding 'README.txt' files under current directory tree
Find all files/directories named orm.properties under  /eserver6/share/system/config/cluster directory
Create intermediate directories "full", "path" as required and directory "to"
Print which files differ between dir1 and dir2, treating absent files as empty
Save the absolute path of the current script to variable "SELF"
Find all files/directories named 'javac' under current directory
Compare column 3 with column 2 of the next line in "file" and format output as a table
find all the pdf files in the current directory and display only the directory name in which the pdf file is present
Make sure the file ".bash_profile" exists in current directory, update its timestamp to current date/time.
List all files without descending into subdirectories
Print your/dir if it's empty
recursively change owner of the directory /usr/lib/node_modules/ to the current user
Find all regular files under $SOURCE directory tree that were modified more than $KEEP days ago and show only the names without the paths
display all regular/normal files in the folder /Users/david/Desktop/
display all the directories in the current folder excluding those that are present in the .svn directory tree
Find files with group write permission and remove the permission
Print all lines from file 'report.txt' containing any-cased 'error' pattern
Print the unique lines from standard input preserving the order they appear
Get the total sizes of all files under current directory
Find recursively all files matching pattern 'file??' in the xargstest/ directory and print a sorted list of them
Create symbolic links in the current directory for all files excluding "CONFIGFILE" located under "/your/project" directory tree
Remove all tmp/*.mp3 files
Mount the "linprocfs" filesystem on "/proc"
find  files which full path name is /tmpfoo/bar under /tmp/foo directory and print
Copy all *.mp3 files under the current directory to /tmp/MusicFiles/
Find all *.css files under /starting/directory and print filenames and the lines matching the regex '\.ExampleClass' from those files
Find all files/directories under $1 which have at least execute permission for their owner and set execute permission for group for these files/directories
find all the undo files in the current folder and display the toal lines, words, characters
Find one file or directory in the current directory whose name matches the pattern given as a variable $a
Search all the *.pl files in the current directory and subdirectories, and print the names of any that don't have a line starting with 'use strict'
Remove the files or directories 'bin/node', 'bin/node-waf', 'include/node', 'lib/node', 'lib/pkgconfig/nodejs.pc' and 'share/man/man1/node' with superuser privilege
Archive files (not directories) in "sorce_dir" to "target_dir"
find all the xml files in current folder and which are present in the pattern list file "/tmp/a"
Search the ~/Books directory recursively for regular files named "Waldo"
View manual page of the find command
Update timestamps of all files in entire filesystem which are not newer than /tmp/timestamp
Locate files not owned by any user or group
Find all files/directories named 'file_name' under current directory tree
change the extension of all the ".abc" files in the folder "/the/path" to ".edefg" and do not change in the sub directories. execdir ensures that the command after it is executed only in the folder where the file is found
Find all files in /dir1 and print only the filenames (not paths)
List all .gif files in the current directory tree
Remove all .sh files in the current directory tree whose names begin with "new"
Search for "pattern" in "file" and separate each line with '" "'
Print a unique list of characters from standard input showing backslash escapes for non-displayables
Find all the files in the current directory recursively whose permissions are not 777
Find all files named "filename" in the current directory tree, not descending into "FOLDER1" directories
Make directory "foo"
Search the current directory tree for *bash* files
Search for the wp-config.php file in /var/www and one level below
Search the current directory recursively for regular files last accessed less than 2 minutes ago
Find all symbolic links in the current directory tree
remove all core files in the file system
Display file type description of 'file-name' based on contents.
Find all files that are less than 50 bytes
find all directories in the current folder and do not search in sub directories
Find all files under /home that belong to user tecmint
Search the current directory tree for TXT files skipping hidden ones
Remove all files with '.js' extension from the 'js' directory tree
Remove directories in /media/1Tb/videos modified more than 7 days ago
Print "new.txt" with line numbers prepended and lines 3 and 4 deleted
Gets all IP addresses from host network configuration and prints first one.
Search for 'string-to-find' in all files under current directory tree and show the matched lines with their filenames
Print the list of all directories in the /myfiles directory tree
Change permissions of all files ending in ".php" under the current directory to 755 and print a count of modified files
Locate OGG files under the home directory smaller than 100 megabytes
Counts number of *.php files in a current folder and subfolders.
Print content of all files ending with '*.foo' under the current directory
split all files in directory "/dev/shm/split/" into pieces per 1000 lines
Calculate the md5 sum of "exampleString"
Prints path to the folder that contains target of symbolic link ../../../../etc/passwd.
Split "/usr/bin/gcc" into 100000 files of about equal size
Print out all files with their paths that have identical content and the same filename in different cases
Find all directories named 'local' in entire file system
Find all .js files in the $d directory tree whose pathnames do not contain whitespaces
Prints long listing of directories '/tmp', '/tnt' themselves.
Merge each line in "file" into a single comma separated line
Find all PHP files under current directory
Find all the files whose name is FindCommandExamples.txt in the current working directory
Find all $tofind* files/directories under $parentdir
view the manual page of find
Unzip file "$empty_variable"
use find command to search for .png and .jpg files
display all symbolic links in the folder "myfiles" and follow them
Print lines in file 'file' that do not match any word specified in file 'blacklist' (one word per line)
Find all *.txt files/directories in entire file system
Search the current directory tree for files containing "string" in their path names
Find files/directories under /tmp smaller than 100 bytes
Get the total sizes of all files under current directory
find all the files in the file system which have sticky bit enabled to the user
find all the files in the folder /work which belong to the user "olivier"
Find all symbolic links containing 'javaplugin' in their names under '/usr' directory tree
List all symlinks under current directory and search for targetfile.txt in this list
Display differences between list of files in /bin and /usr/bin.
Execute awk command '{ ...}' on compressed file "FILE"
find all class files or sh script files  in the current folder
Saves hostname that matches ${ip_address} in 'host' variable, without trailing dot.
Print the current date followed by ": $line"
Print a top 20 histogram of characters used from standard input showing backslash escapes for non-displayables
Split "INPUT_FILE_NAME" into files of at most 500 MiB each with a numeric suffix of length 4 and prefix "input.part."
Add execute permission to "ComputeDate", "col", and "printdirections" for all users
Print percentage of the space used on the $FILESYSTEM.
Find all regular files in the current directory tree whose names end with ".DS_Store" and delete them
Search the home directory tree for all .txt files
Find all files under var/ directory and change their permission to 600
Count the number of unique duplicate lines in "file1" and "file2" combined
Add "new." to the beginning of the name of "original.filename", renaming it to "new.original.filename".
Find all Makefile's in the current directory tree
Execute "${MD5}" on all files found under "${1}", numerically sort the results, and save to variable "DATA"
Find all directories under /path/to/dir (no sub-directories) and archive them (with relative paths) into files with .tar.gz extension
Find files modified at least 5 days in the future
display the contents of all the files in the current folder which start with test ( case insensitive search )
Search the current directory tree for files and directories whose names do not end in ".exe" and ".dll"
Find all files that have either a .php or a .js extension
Save the md5 sum hash of "${my_iso_file}" to variable "md5"
force remove all the text files that have not been modified in the last 89 days
find all the regular/normal files in the current folder and replace everything expect the extension of the file and display unique file extensions
Search the current directory recursively for files last modified within the past 24 hours ignoring .swp files and paths ./es* and ./en*
Gets a current job back to the foreground.
Print '111 22 3\n4 555 66\n' by replacing the spaces with tabs and '\n' with newlines
Exit the shell on the first error encountered
display the base name(name without extension) of all the ".flac" files in the current folder
display long listing of all the files in the folder "/myfiles"
Search the entire system for SUID or SGID files
Count the number of lines in each .java file in the current directory tree
find all regular/normal files which have cpp folder in their path
Send SIGTERM (signal 15) signal to all process whose username is "username" and whose command is "your_command".
Print "$line" in hexadecimal 2-byte units
display all the files in the entire file system which are bigger than 10MB
Merge lines from files "file1", "file2", "file3", "file4", "file5", replace "\t" with " \t", and format the "\t" delimited result as a table
find all the files in the file system which are bigger than 3 bytes
Read a line from standard input into variable "REPLY" with prompt "> $line (Press Enter to continue)"
Print a sorted list of directories from the ~/Music tree containing files whose names begin with "cover."
Find all files recursively which end in ".php"
find all files in the file system which have been accessed in the last 24 hours
Count files accessed more than a month ago
Find all *.cls files/directories under current directory and print '{if(length($0) > L) { LINE=$0; L = length($0)}} END {print LINE"L"L}' for each of them where $0 is expanded to the file/directory path
Search for files which are writable by somebody
Print the list of directories residing in the current directory tree
Recursively delete all files/folders named '.svn' in a current folder.
SSH login in 'middle.example.org' via port 2222 as user 'deviceuser' using a private key file './device_id.pem'
Print the list of 1st level subdirectories in /fss/fin
Remount "yaffs2" filesystem "/dev/block/mtdblk4" to "/system" as read and write only
Search for 'foo=' in all *.png files under current directory without descending into *.gif and *.svn directories
Prompt the user with a question "This is the question I want to ask?" and save "y" or "n" in variable "REPLY" in zsh
Delete all files that were modified more than 60 days ago under '/path-to-directory' tree
Report available space on the file system containing /tmp in kilobytes.
display all file names in current folder
Find all regular files named postgis-2.0.0 under current directory
display all the text files from the current folder and skip searching in skipdir1 and skipdir2 folders
Change permissions to 700 for files and directories deeper than the current directory
Recursively copies /mnt/usr/lib to the '/usr/' directory, creating symbolic links on each file instead of real copying them.
find all regex  '\./[a-f0-9\-]\{36\}\.jpg' files
display all non empty directories in current folder
Make directory "subdirectory"
Change the group of all directories (except those with a '.') under current directory tree to a group with the same name as the directory name
Find all executable files under {} and reverse sort them
display all the files in the current folder which have are bigger than 1KB
Find all files/directories not with the name 'query_to_avoid' under current directory
Find all *FooBar* files/directories under current directory and copy them to ~/foo/bar
Archive "fileToCopy" to "/some/nonExisting/dirToCopyTO" on host "ssh.myhost.net" via ssh
Search the /root directory recursively for files named "FindCommandExamples.txt"
Print 10 lines of a single "x"
Recursively copy everything in /source/path whose name doesn't begin with a period, to /destination/path, without overwriting existing files, and outputting a line for each file copied or skipped.
Copy all files matching "*failed.ipynb" in the current directory tree to "./fails" preserving the directory hierarchy
Find all *.plist files/directories under current directory
Split "file" into 10 files of about equal size without splitting lines
Report file system disk space usage in human readable format
Print the calendar for February 1956
Creates temporary folder and save path to that in a TMPDIR variable.
Find broken links using the file command on each symlinks in the system and searching for the keword 'broken' with grep
Find 10 largest files in the current directory and its subdirectories
Gets MAC addresses of all IP4 network interfaces.
list regular files under the current directory
Recursively copy /path/foo on host "prod" to local directory "/home/user/Desktop", connecting as ssh username corresponding to local username.
Output two lines of "-tcp"
Convert standard input into a dump of octal bytes without the first 8 bytes of address and count the unique results
display all the header files  and cpp files in the current folder
find all png files in the current folder
Removes resursively all files and folders named ".DS_Store".
find regular files under the current directory and execute an md5sum command on each one
Search all .py files in the current directory tree for "some_function"
Delete all empty subdirectories in and below directory/
Saves exit statuses of piped commands in a system variable PIPESTATUS='([0]="0" [1]="1" [2]="0")'
Enables shell option 'nocasematch'.
Find all files whose owner is `user1'